#!/usr/local/share/miniconda/bin/python

import os
import sys
import random

def get_random_path(root_dir):
  n=0
  random.seed();
  for root, dirs, files in os.walk(root_dir):
    for name in files:
      n += 1
      if random.uniform(0, n) < 1:
          res=os.path.join(root, name)
  return res

root_dir = "../curated-corpus/bening/php"
snippets = "../snippets"

if len(sys.argv) > 1:
  print("Generating injected files from the snippets and the benign files")
  for number_of_file in range(0, int(sys.argv[1])):
    random_file = get_random_path(root_dir)

    random_snippet = get_random_path(snippets)
    snippet_to_inject = open(random_snippet, 'r')
    # need to be .read() instead of .readlines() otherwise it has UnboundLocalError
    snippet_content = snippet_to_inject.read()
    snippet_to_inject.close()

    f = open(random_file, "r")
    contents = f.readlines()
    f.close()

    line_number_with_php_tag = 0

    for i, line in enumerate(contents):
      if line.find("?>") != -1:
        line_number_with_php_tag = i-1
        break
      if line.find("<?php") != -1:
        line_number_with_php_tag = i+1
        break

    if line_number_with_php_tag == 0:
      if(snippet_content.find("?>") == -1):
        snippet_content = snippet_content + " ?>"
      contents.insert(line_number_with_php_tag, snippet_content)
    else:
      contents.insert(line_number_with_php_tag, snippet_content.replace("<?php", "").replace("?>", ""))

    f = open(str(number_of_file)+"_injected_malware.php", "w")
    contents = "".join(contents)
    f.write(contents)
    f.close()
    f = open(str(number_of_file)+"_injected_malware_info.txt", "w")
    f.write("Malware injected in line " + str(line_number_with_php_tag) + " with length of " + str(len(snippet_content)))
    f.close()
else:
  print("Please provide a number of how many injected files you want to create\n Usage: python generate_injected.py <number_of_files>")
  exit(1)
