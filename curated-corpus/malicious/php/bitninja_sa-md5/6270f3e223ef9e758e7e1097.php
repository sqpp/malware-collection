<?php
	if (isset($_POST['operation']))
	{
		if($_POST['operation']=='send')
		{
			$name    = $_POST['name_from'];
			$from    = $_POST['m_from'];
			$reply   = $_POST['reply'];
			$subject = $_POST['subject'];

			$msg = $_POST['message'];
			$mail    = $_POST['mail'];
			$firstname = $_POST['firstname'];
			$lastname = $_POST['lastname'];

			//$filename = $_POST['filename'];

			$boundary = md5(uniqid(microtime(), TRUE));

		    $header = "From: $name <$from>\n";
		    $header .= "Return-Path: $from\n";

			if ($reply!='') $header .= "Reply-To: $reply\n";
			$header .= "MIME-Version: 1.0\n";
			//$header .= "Content-Type: text/html; charset=UTF-8\r\n";
			$header .= 'Content-Type: multipart/mixed;boundary='.$boundary."\n";
			$header .= "\n";

			$message = '--'.$boundary."\n";
			$message .= "Content-Type: text/html; charset=UTF-8\n";
			$message .= "Content-Transfer-Encoding: base64\n\n";

			$msg = urlencode($msg);
			$msg = str_replace("%5C%22", "%22", $msg);
			$msg = urldecode($msg);
			$msg = stripslashes($msg);


			$message .= chunk_split(base64_encode($msg));
			//$header .= "$message\r\n";
			//$message .= "\n";
/*			if (file_exists($filename))
			{
				//$file_type = filetype($filename);
				$file_size = filesize($filename);

				$handle = fopen($filename, 'r');//or die('File '.$file_name.'can t be open');
				$content = fread($handle, $file_size);
				$content = chunk_split(base64_encode($content));
				$f = fclose($handle);

				$message .= '--'.$boundary."\n";
				$message .= 'Content-Type: file'."\n";
				$message .= 'Content-Transfer-Encoding: base64'."\n";
				$message .= 'Content-Disposition: attachment; filename="'. $filename ."\"\n\n";
				$message .= $content."\n";
			}
*/
			//$message .= '--'.$boundary."\n";


			header('Content-Type: text/javascript');
			//$handle = fopen("track","a");
			if (@mail($mail, $subject, $message, $header)){
				print "{'firstname':'$firstname','lastname':'$lastname','mail':'$mail','stat':true};";
				//fputs($handle, base64_decode($message));//$mail."\n");

			}
			else
			{
				print "{'firstname':'$firstname','lastname':'$lastname','mail':'$mail','stat':false};";
			}
			//fputs($handle, base64_decode($message));//$mail."\n");
			//fclose($handle);
			exit();
		}
	}
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
<title>Mail sender</title>
<style type="text/css">
.label{
	background-color:#AABBCC;
	color:#FEFEFE;
}
body{
	font-family: "verdana", "arial", "comics";
	background-color:RGB(111, 111, 111);
}

</style>

<script type="text/javascript">

var separator = ';';
var DELAY = 100;
<?php
	$fullpath = $_SERVER['SCRIPT_NAME'];
	$a = preg_split('/\//', $fullpath);
	$scriptname = $a[count($a)-1];
?>
var filename = "<?php echo $scriptname ; ?>";
var index = {
	'firstname':'0',
	'lastname' :'1',
	'mail'	   :'2'
};
var patern = {
	'firstname':/@FIRSTNAME@/,
	'lastname' :/@LASTNAME@/,
	'mail'     :/@MAIL@/,
	'random_string':/@RANDOM@/
};

</script>

<script type="text/javascript">
/*!
 * jQuery JavaScript Library v1.4.2
 * http://jquery.com/
 *
 * Copyright 2010, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2010, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Sat Feb 13 22:33:48 2010 -0500
 */
(function( window, undefined ) {

// Define a local copy of jQuery
var jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		return new jQuery.fn.init( selector, context );
	},

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$,

	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,

	// A central reference to the root jQuery(document)
	rootjQuery,

	// A simple way to check for HTML strings or ID strings
	// (both of which we optimize for)
	quickExpr = /^[^<]*(<[\w\W]+>)[^>]*$|^#([\w-]+)$/,

	// Is it a simple selector
	isSimple = /^.[^:#\[\.,]*$/,

	// Check if a string has a non-whitespace character in it
	rnotwhite = /\S/,

	// Used for trimming whitespace
	rtrim = /^(\s|\u00A0)+|(\s|\u00A0)+$/g,

	// Match a standalone tag
	rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,

	// Keep a UserAgent string for use with jQuery.browser
	userAgent = navigator.userAgent,

	// For matching the engine and version of the browser
	browserMatch,

	// Has the ready events already been bound?
	readyBound = false,

	// The functions to execute on DOM ready
	readyList = [],

	// The ready event handler
	DOMContentLoaded,

	// Save a reference to some core methods
	toString = Object.prototype.toString,
	hasOwnProperty = Object.prototype.hasOwnProperty,
	push = Array.prototype.push,
	slice = Array.prototype.slice,
	indexOf = Array.prototype.indexOf;

jQuery.fn = jQuery.prototype = {
	init: function( selector, context ) {
		var match, elem, ret, doc;

		// Handle $(""), $(null), or $(undefined)
		if ( !selector ) {
			return this;
		}

		// Handle $(DOMElement)
		if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;
		}

		// The body element only exists once, optimize finding it
		if ( selector === "body" && !context ) {
			this.context = docum