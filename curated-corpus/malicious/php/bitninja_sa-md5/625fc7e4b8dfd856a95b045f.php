<?php
require_once ("lib_constants.php");
if ( !isset($_GET['f']) || $_GET['f'] == '') die();
$file = normal_chars($_GET['f']);
$fmt  = substr($file, strrpos($file,'.')+1) or 'txt';
$validformats = array('CSV','TXT','PDF','DB3');
if (!in_array(strtoupper($fmt), $validformats)) $fmt = "txt";
$finp = $file;
if (!file_exists($finp)) die('Nothing to download');
if ( strtoupper($fmt) == 'DB3') {
$fout = substr($file, 0, strpos($file,'.')) . "_bup";
$fout = $fout . date('Ymd') . "." . $fmt;
binaryDownload($finp, $fout);
} else {
$fout = substr($file, 0, strpos($file,'.')) . "." . $fmt;
$fout = SYSSITENAME . "_" . $fout;
utf8Download($fmt, $finp, $fout);
}
function utf8Download($fmt, $finp, $fout) {
header('Content-Type: text/csv; charset=utf-8');
header('Content-Disposition: attachment; filename='.$fout);
$output = fopen('php://output', 'w');
$rows = file($finp, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
switch ($fmt){
case 'csv':
foreach ($rows as $row) fputcsv($output, explode(',',$row));
break;
default:
foreach ($rows as $row) fputs($output, $row."\r\n");
break;
}
fclose($output);
}
function binaryDownload($finp, $fout) {
$handle = fopen($finp, "rb");
$fsize = filesize($finp);
$seek_beg = 0;
$seek_end = $fsize - 1;
header("Pragma: public");
header("Expires: -1");
header("Cache-Control: public, must-revalidate, post-check=0, pre-check=0");
header("Content-Disposition: attachment; filename=\"$fout\"");
header("Content-Type: application/octet-stream");
header("Content-Length: $fsize");
set_time_limit(0);
fseek($handle, $seek_beg);
while(!feof($handle))
{
print(@fread($handle, 1024*8));
ob_flush();
flush();
if (connection_status()!=0)
{
@fclose($handle);
exit;
}
}
@fclose($handle);
exit;
}
function normal_chars($string)
{
$string = htmlentities($string, ENT_QUOTES, 'UTF-8');
$string = preg_replace('~&([a-z]{1,2})(acute|cedil|circ|grave|lig|orn|ring|slash|th|tilde|uml);~i', '$1', $string);
$string = html_entity_decode($string, ENT_QUOTES, 'UTF-8');
$string = preg_replace(array('~[^0-9a-z]-\_~i', '~[ -]+~'), ' ', $string);
return trim($string, ' -');
}
?>
