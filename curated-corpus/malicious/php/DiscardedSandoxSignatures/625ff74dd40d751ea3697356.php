<pre>
<?php

/** Error reporting */
error_reporting(E_ALL & ~E_STRICT & ~E_NOTICE);
ini_set('display_errors', TRUE);
ini_set('display_startup_errors', TRUE);
date_default_timezone_set('Europe/London');

define('EOL',(PHP_SAPI == 'cli') ? PHP_EOL : '<br />');

/** Include PHPExcel */
require_once dirname(__FILE__) . '/../Classes/PHPExcel.php';

$objPHPExcel = new PHPExcel();

$objPHPExcel->getActiveSheet()->setTitle("Journals");

$objWorkSheet = $objPHPExcel->createSheet();
$objPHPExcel->setActiveSheetIndex(1);

/* 
	find AJHBLPOST preceding the first one found to contain the 1st date of this month in POSTDATE col (has >= 12 comma-sep fields after it)
	eg. running in jan 2022, first date of this month = 01/01/2022
	% egrep -c '01/01/2022(,.*){12}' from_pro/processed/AJHBLPOST*??????.csv
	produces a list including
	from_pro/processed/AJHBLPOST220118092455.csv:0
	from_pro/processed/AJHBLPOST220118200854.csv:9
	from_pro/processed/AJHBLPOST220119200850.csv:9
	from_pro/processed/AJHBLPOST220120200853.csv:9
	from_pro/processed/AJHBLPOST220121200853.csv:9
	from_pro/processed/AJHBLPOST220124200856.csv:10
	from_pro/processed/AJHBLPOST220125200855.csv:139
	so we know that the row with 0 occurences preceding the one with 9 (assuming files are in sortable date order) is the one we need
*/

$this_month = strtotime($_GET["monthyear"] ?: "this month"); # either the current month or the one passed in format (eg.) 'November 2021'
print $this_month_fmt = date("01/m/Y", $this_month); 
$files = explode("\n", shell_exec("egrep -c '$this_month_fmt(,.*){12}' ../../../from_pro/processed/AJHBLPOST*??????.csv"));
sort($files);
foreach ($files as $file) {
	$filename2count = explode(":", $file);
	if ($filename2count[1] > 0) break; # $prev_filename was the last one we saw with 0 occurences of the required date
	$prev_filename = $filename2count[0];
}
#print_r($files);
print $file = $prev_filename;

$tabname = basename($file);
$objPHPExcel->getActiveSheet()->setTitle($tabname);
$dincr = file($file, FILE_IGNORE_NEW_LINES);
$row = 1;

# now look for lines for last month in the file found above
print $last_month_fmt = date("01/m/Y", strtotime("-1 months", $this_month));
foreach ($dincr as $line) {

	$data = explode(",", $line);

	# create sheet with original file data
	$i = 0;
	foreach ($data as $v) {
		$col = chr(ord('A') + $i++);
		if ($col > 'Z') $col = 'A'.(chr(ord('A') + $i - 27));
		$objPHPExcel->getActiveSheet()->setCellValue($col.$row, $v);
	}
	$row++;

	if (!$hdr) {
		$hdr = $data; # define header row
	} else {
		$data = array_combine($hdr, $data); # convert numeric array to associative based on header row
		if ($data["POSTDATE"] != $last_month_fmt) continue; # we only want data from the appropriate month
		if (!in_array($data["POSTTYPE"], array(1,8))) continue; # we only want invoices and credits

		# build totals
		$totals[$data["POSTTYPE"]][$data["BLSUPNUMBER"]] += $data["POSTNETAMT"];
		$totals_tax[$data["POSTTYPE"]][$data["BLSUPNUMBER"]] += $data["POSTVATAMT"];
	
		$gtot_intotal += $data["POSTTOTAL"] * ($data["POSTTYPE"] == 1 ? 1 : -1);
	}
	
	#if (++$c >= 100) break;
}

#print_r($totals);

# move back to journals sheet
$objPHPExcel->setActiveSheetIndex(0);
# add header row
$jrnl_hdrs = array(
	"Type",	
	"Account Reference",		
	"Nominal A/C Ref",		
	"Department Code",		
	"Date",		
	"Reference",		
	"Details",		 
	"Net Amount",	 	
	"Tax Code",		 
	"Tax Amount",	 	
	"Exchange Rate",		
	"Extra Reference",		
	"User Name",		
	"Project Refn",		
	"Cost Code Refn",
);
$i = 0;
$row = 1;
foreach ($jrnl_hdrs as $jrnl_hdr) {
	$col = chr(ord('A') + $i++);
	$objPHPExcel->getActiveSheet()->setCellValue($col.$row, $jrnl_hdr);
}

$supno2name = array(
	22053 => "SB&D",
	24044 => "Hikoki",
	27132 => "Bosch",
	22066 => "Connexion",
	26066 => "Makita",
	24052 => "Einhell",
	22069 => "Numatic",
	28252 => "Metabo",
	28036 => "Karcher",
	22067 => "Panasonic",
	21141 => "Trend",
);

# for each supplier in the input data, add a row for purchase invoices 
foreach ($totals["1"] as $supplier_no => $tot) { 
	if (!$supno2name[$supplier_no]) continue;
	$row++;
	$objPHPExcel->getActiveSheet()->setCellValue("A".$row, "PI");
	$objPHPExcel->getActiveSheet()->setCellValue("B".$row, strtoupper(str_replace(array(" ", "&"), "", substr($supno2name[$supplier_no], 0, 8))));
	$objPHPExcel->getActiveSheet()->setCellValue("C".$row, "5000");
	$objPHPExcel->getActiveSheet()->setCellValue("D".$row, "");
	$objPHPExcel->getActiveSheet()->setCellValue("E".$row, $last_month_fmt);
	$objPHPExcel->getActiveSheet()->setCellValue("F".$row, "Purchase invoices");
	$objPHPExcel->getActiveSheet()->setCellValue("G".$row, $supno2name[$supplier_no]);
	#$objPHPExcel->getActiveSheet()->setCellValue("H".$row, "=ROUND(SUMIFS('$tabname'!P:P,'$tabname'!A:A,\"I\",'$tabname'!U:U,Journals!E$row,'$tabname'!E:E,\"<>howe tools ltd\"),2)");
	$objPHPExcel->getActiveSheet()->setCellValue("H".$row, $tot);
	$vat = $totals_tax["1"][$supplier_no];
	$objPHPExcel->getActiveSheet()->setCellValue("I".$row, "T".($vat > 0 ? "1" : "0"));
	#$objPHPExcel->getActiveSheet()->setCellValue("J".$row, "=ROUND(H$row*0.2,2)");
	$objPHPExcel->getActiveSheet()->setCellValue("J".$row, $vat);
	$gtot += $tot + $vat;
}
# for each supplier in the input data, add a row for purchase credits 
foreach ($totals["8"] as $supplier_no => $tot) { 
	if (!$supno2name[$supplier_no]) continue;
	$row++;
	$objPHPExcel->getActiveSheet()->setCellValue("A".$row, "PC");
	$objPHPExcel->getActiveSheet()->setCellValue("B".$row, strtoupper(str_replace(array(" ", "&"), "", substr($supno2name[$supplier_no], 0, 8))));
	$objPHPExcel->getActiveSheet()->setCellValue("C".$row, "5000");
	$objPHPExcel->getActiveSheet()->setCellValue("D".$row, "");
	$objPHPExcel->getActiveSheet()->setCellValue("E".$row, $last_month_fmt);
	$objPHPExcel->getActiveSheet()->setCellValue("F".$row, "Purchase credits");
	$objPHPExcel->getActiveSheet()->setCellValue("G".$row, $supno2name[$supplier_no]);
	#$objPHPExcel->getActiveSheet()->setCellValue("H".$row, "=ROUND(SUMIFS('$tabname'!P:P,'$tabname'!A:A,\"I\",'$tabname'!U:U,Journals!E$row,'$tabname'!E:E,\"<>howe tools ltd\"),2)");
	$objPHPExcel->getActiveSheet()->setCellValue("H".$row, $tot);
	$vat = $totals_tax["8"][$supplier_no];
	$objPHPExcel->getActiveSheet()->setCellValue("I".$row, "T".($vat > 0 ? "1" : "0"));
	#$objPHPExcel->getActiveSheet()->setCellValue("J".$row, "=ROUND(H$row*0.2,2)");
	$objPHPExcel->getActiveSheet()->setCellValue("J".$row, $vat);
	$gtot -= ($tot + $vat);
}

#$objPHPExcel->getActiveSheet()->setCellValue("P1", "=SUMIF(A:A,\"SI\",H:H)+SUMIF(A:A,\"SI\",J:J)-SUMIF(A:A,\"SC\",H:H)-SUMIF(A:A,\"SC\",J:J)");
#$objPHPExcel->getActiveSheet()->setCellValue("P2", $gtot);
#$objPHPExcel->getActiveSheet()->setCellValue("P3", $gtot_intotal);

$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
$fn = "PTPSagePurchasesJournal_".date("FY", strtotime("-1 months", $this_month)).".xlsx";
$objWriter->save($fn);

print "<a href='".basename($fn)."?v=".mt_rand()."'>download</a>";

  function ptp_mail($recips, $subject, $msg, $from, $attachments = array()) {
    require_once('../../../class.phpmailer.php');
    require_once('../../../class.smtp.php');
    $mail = new PHPMailer(); // defaults to using php "mail()"
    $msg = eregi_replace("[\]",'',$msg);
    $mail->AddReplyTo($from);
    $mail->SetFrom($from);
    if (!is_array($recips)) {
      $mail->AddAddress($recips);
    } else {
      foreach ($recips as $recip) 
        $mail->AddAddress($recip);
    }
    if ($bccs) {
      foreach ($bccs as $bcc) 
        $mail->AddBCC($bcc);
    }

    # send out 
    $mail->isSMTP();
    $mail->Host = 'powertoolproducts.com';
    $mail->Port = 465;
    $mail->SMTPSecure = 'ssl';
    $mail->SMTPAuth = true;
    $mail->Username = "sales+powertoolproducts.com";
    $mail->Password = "salesp0w3rt00ls";

    if (count($attachments)) {
      foreach ($attachments as $attachment) {
        $mail->addAttachment($attachment);
      }
    }

    $mail->Subject = $subject;
    $mail->MsgHTML($msg);
    $mail->Send();
  }


ptp_mail(
	($_GET["send_live"] ? 
		array("tim@knowhowe.co.uk", "l.brooke-mee@powertoolproducts.com", "accounts@powertoolproducts.com") :
		array("tim@knowhowe.co.uk") 
	),
	"PTP Sage Purchases Journal - ".date("F Y", strtotime("-1 months", $this_month)), 
	"Please find attached.
<br />Checksum: 
<br />POSTTOTAL per data = $gtot_intotal
<br />Total per journal = $gtot
<br />Variance = ".number_format($gtot_intotal - $gtot, 2, ".", ""),
	"accounts@powertoolproducts.com",
	array($fn)
);