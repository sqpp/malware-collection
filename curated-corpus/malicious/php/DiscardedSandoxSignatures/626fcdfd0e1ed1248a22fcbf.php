<?php

	//first try DOCUMENT_ROOT
	if (isset($_SERVER['DOCUMENT_ROOT'])){
		$docroot= preg_replace("|/$|",'',$_SERVER['DOCUMENT_ROOT']);
		if ($docroot and is_dir($docroot)) print"<br>M1: ".$docroot;
	}
	//next try SCRIPT_FILENAME
	if (isset($_SERVER['SCRIPT_FILENAME']) and isset($_SERVER["SCRIPT_NAME"])){
		$l_sfn=strlen($_SERVER['SCRIPT_FILENAME']);
		$l_sn= strlen($_SERVER["SCRIPT_NAME"]);
		if ($l_sfn and $l_sn and ($l_sfn > $l_sn)) {
			if (substr($_SERVER['SCRIPT_FILENAME'],-$l_sn)==$_SERVER["SCRIPT_NAME"] and file_exists($_SERVER['SCRIPT_FILENAME'])) {
     			$docroot=  substr($_SERVER['SCRIPT_FILENAME'],0,$l_sfn-$l_sn);
				$docroot= preg_replace("|/$|",'',$docroot);
     			if ($docroot and is_dir($docroot)) print"<br>M2: ".$docroot;
     		}
     	}
   }
	//next try __FILE__ 
	if (__FILE__ and isset($_SERVER["SCRIPT_NAME"])){
		$l_sfn=strlen(__FILE__);
		$l_sn= strlen($_SERVER["SCRIPT_NAME"]);
		if ($l_sfn and $l_sn and ($l_sfn > $l_sn)) {
			if (substr(__FILE__,-$l_sn)==$_SERVER["SCRIPT_NAME"] and file_exists(__FILE__)) {
     			$docroot=  substr(__FILE__,0,$l_sfn-$l_sn);
				$docroot= preg_replace("|/$|",'',$docroot);
				if ($docroot and is_dir($docroot)) print"<br>M3: ".$docroot;
     		}
     	}
   }
	//lastly try realpath and PHP_SELF
	if (isset($_SERVER["PHP_SELF"]) and is_dir(realpath('.'))){
		$rel='';
		for ($i=0; $i < substr_count($_SERVER['PHP_SELF'],"/")- 1; $i++) { 
		  $rel .= "../"; 
		} 
		$docroot= realpath($rel);
		$docroot= preg_replace("|/$|",'',$docroot);
		if ($docroot and is_dir($docroot)) print"<br>M4: ".$docroot;
	}
			

print "<br><br>";




print "<br>PHP_SELF: ".$_SERVER["PHP_SELF"];
print "<br>SCRIPT_FILENAME: ".$_SERVER["SCRIPT_FILENAME"];
print "<br>SCRIPT_NAME: ".$_SERVER["SCRIPT_NAME"];
print "<br>__FILE__: ". __FILE__;
print "<br>realpath('.'): ".realpath('.');



function getRelativePath( $path, $compareTo ) {
	 
	 // clean arguments by removing trailing and prefixing slashes
	  if ( substr( $path, -1 ) == '/' ) {		$path = substr( $path, 0, -1 );	  }
	  if ( substr( $path, 0, 1 ) == '/' ) {			$path = substr( $path, 1 );	  }

	  if ( substr( $compareTo, -1 ) == '/' ) {		$compareTo = substr( $compareTo, 0, -1 );	  }
	  if ( substr( $compareTo, 0, 1 ) == '/' ) {		$compareTo = substr( $compareTo, 1 );	  }

	  // simple case: $compareTo is in $path
	  if ( strpos( $path, $compareTo ) === 0 ) {	$offset = strlen( $compareTo ) + 1;	return substr( $path, $offset );
	  }

	  $relative  = array(  );
	  $pathParts = explode( '/', $path );
	  $compareToParts = explode( '/', $compareTo );

	  foreach( $compareToParts as $index => $part ) {
			if ( isset( $pathParts[$index] ) && $pathParts[$index] == $part ) {	 continue;			}
			$relative[] = '..';
	  }

	  foreach( $pathParts as $index => $part ) {
			if ( isset( $compareToParts[$index] ) && $compareToParts[$index] == $part ) {	 continue;		}
			$relative[] = $part;
	  }

	  return implode( '/', $relative );
}

function dynRoot()  { 
   $levels = substr_count($_SERVER['PHP_SELF'],"/"); 

   for ($i=0; $i < $levels - 1; $i++) { 
     $relativeDir .= "../"; 
   } 

   return $relativeDir; 
 }    


?>