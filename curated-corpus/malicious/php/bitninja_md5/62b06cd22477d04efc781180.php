<? echo(stripslashes(base64_decode('<!DOCTYPE html>
<!--
#######################################################################################################################
#   _     _      _     _      _     _      _     _      _     _      _     _      _     _      _     _      _     _   #
#  (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)    (c).-.(c)  #
#   / ._. \      / ._. \      / ._. \      / ._. \      / ._. \      / ._. \      / ._. \      / ._. \      / ._. \   #
# __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__  __\( Y )/__ #
#(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)(_.-/'-'\-._)#
#   || R ||      || O ||      || O ||      || T ||      || E ||      || R ||      || R ||      || O ||      || R ||   #
# _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._  _.' `-' '._ #
#(.-./`-`\.-.)(.-./`-'\.-.)(.-./`-'\.-.)(.-./`-'\.-.)(.-./`-'\.-.)(.-./`-`\.-.)(.-./`-`\.-.)(.-./`-'\.-.)(.-./`-`\.-.)#
# `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-'  `-'     `-' #
#                                                                                                                     #
#######################################################################################################################
-->
<link href="http://nanosmedia.com//25/templates/yoo_revista/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon" />

<body bgcolor="black" oncontextmenu="return false" onkeydown="return false">

<!-- musica inicio -->
<object data='http://flash-mp3-player.net/medias/player_mp3.swf' height='0' type='application/x-shockwave-flash' width='0'><param name='data' value='http://flash-mp3-player.net/medias/player_mp3.swf'/><param name='bgcolor' value='#ffffff'/>
<param name='FlashVars' value='mp3=http://roots.p.ht/root.mp3&loop=1&autoplay=1&volume=125'/>
<param name='src' value='http://flash-mp3-player.net/medias/player_mp3.swf'/>
</object>
<!-- musica fin -->
<!-- twitter inicio -->
<a href="https://twitter.com/rooterror" class="twitter-follow-button" data-show-count="true" data-lang="es">Seguir @rooterror</a><br/><script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
<!-- twitter fin -->
<title>root .-.</title>
<link href='http://fonts.googleapis.com/css?family=Orbitron:700' rel='stylesheet' type='text/css'>

<!-- no txt inicio -->
<script language="Javascript">
<!-- Begin
function disableselect(e){
return false
}
function reEnable(){
return true
}
document.onselectstart=new Function ("return false")
if (window.sidebar){
document.onmousedown=disableselect
document.onclick=reEnable
}
// End -->
</script>
<!-- no txt fin -->

<META http-equiv=Content-Type content="text/html; charset=windows-1254">
<STYLE type=text/css>BODY {
  SCROLLBAR-FACE-COLOR: #000000; SCROLLBAR-HIGHLIGHT-COLOR: #000000; SCROLLBAR-SHADOW-COLOR: #000000; SCROLLBAR-3DLIGHT-COLOR: #000000; SCROLLBAR-ARROW-COLOR: #ffffff; SCROLLBAR-TRACK-COLOR: #ffffff; FONT-FAMILY: Verdana; SCROLLBAR-DARKSHADOW-COLOR: #000000
}
.Estilo10 {
  COLOR: #ffffff; FONT-FAMILY: Haettenschweiler
}
.Estilo8 {
  FONT-SIZE: 10px; COLOR: #ffffff; FONT-FAMILY: Haettenschweiler
}
</STYLE>

<SCRIPT LANGUAGE="JavaScript">
/*
An object-oriented Typing Text script, to allow for multiple instances.
A script that causes any text inside any text element to be "typed out", one letter at a time. Note that any HTML tags will not be included in the typed output, to prevent them from causing problems. Tested in Firefox v1.5.0.1, Opera v8.52, Konqueror v3.5.1, and IE v6.
Browsers that do not support this script will simply see the text fully displayed from the start, including any HTML tags.

Functions defined:
  TypingText(element, [interval = 100,] [cursor = "",] [finishedCallback = function(){return}]):
    Create a new TypingText object around the given element.  Optionally
    specify a delay between characters of interval milliseconds.
    cursor allows users to specify some HTML to be appended to the end of
    the string whilst typing.  Optionally, can also be a function which
    accepts the current text as an argument.  This allows the user to
    create a "dynamic cursor" which changes depending on the latest character
    or the current length of the string.
    finishedCallback allows advanced scripters to supply a function
    to be executed on finishing.  The function must accept no arguments.

  TypingText.run():
    Run the effect.

  static TypingText.runAll():
    Run all TypingText-enabled objects on the page.
*/

TypingText = function(element, interval, cursor, finishedCallback) {
  if((typeof document.getElementById == "undefined") || (typeof element.innerHTML == "undefined")) {
    this.running = true;  // Never run.
    return;
  }
  this.element = element;
  this.finishedCallback = (finishedCallback ? finishedCallback : function() { return; });
  this.interval = (typeof interval == "undefined" ? 20 : interval);
  this.origText = this.element.innerHTML;
  this.unparsedOrigText = this.origText;
  this.cursor = (cursor ? cursor : "");
  this.currentText = "";
  this.currentChar = 0;
  this.element.typingText = this;
  if(this.element.id == "") this.element.id = "typingtext" + TypingText.currentIndex++;
  TypingText.all.push(this);
  this.running = false;
  this.inTag = false;
  this.tagBuffer = "";
  this.inHTMLEntity = false;
  this.HTMLEntityBuffer = "";
}
TypingText.all = new Array();
TypingText.currentIndex = 0;
TypingText.runAll = function() {
  for(var i = 0; i < TypingText.all.length; i++) TypingText.all[i].run();
}
TypingText.prototype.run = function() {
  if(this.running) return;
  if(typeof this.origText == "undefined") {
    setTimeout("document.getElementById('" + this.element.id + "').typingText.run()", this.interval);  // We haven't finished loading yet.  Have patience.
    return;
  }
  if(this.currentText == "") this.element.innerHTML = "";
//  this.origText = this.origText.replace(/<([^<])*>/, "");     // Strip HTML from text.
  if(this.currentChar < this.origText.length) {
    if(this.origText.charAt(this.currentChar) == "<" && !this.inTag) {
      this.tagBuffer = "<";
      this.inTag = true;
      this.currentChar++;
      this.run();
      return;
    } else if(this.origText.charAt(this.currentChar) == ">" && this.inTag) {
      this.tagBuffer += ">";
      this.inTag = false;
      this.currentText += this.tagBuffer;
      this.currentChar++;
      this.run();
      return;
    } else if(this.inTag) {
      this.tagBuffer += this.origText.charAt(this.currentChar);
      this.currentChar++;
      this.run();
      return;
    } else if(this.origText.charAt(this.currentChar) == "&" && !this.inHTMLEntity) {
      this.HTMLEntityBuffer = "&";
      this.inHTMLEntity = true;
      this.currentChar++;
      this.run();
      return;
    } else if(this.origText.charAt(this.currentChar) == ";" && this.inHTMLEntity) {
      this.HTMLEntityBuffer += ";";
      this.inHTMLEntity = false;
      this.currentText += this.HTMLEntityBuffer;
      this.currentChar++;
      this.run();
      return;
    } else if(this.inHTMLEntity) {
      this.HTMLEntityBuffer += this.origText.charAt(this.currentChar);
      this.currentChar++;
      this.run();
      return;
    } else {
      this.currentText += this.origText.charAt(this.currentChar);
    }
    this.element.innerHTML = this.currentText;
    this.element.innerHTML += (this.currentChar < this.origText.length - 1 ? (typeof this.cursor == "function" ? this.cursor(this.currentText) : this.cursor) : "");
    this.currentChar++;
    setTimeout("document.getElementById('" + this.element.id + "').typingText.run()", this.interval);
  } else {
  this.currentText = "";
  this.currentChar = 0;
        this.running = false;
        this.finishedCallback();
  }
}
</script>
<style>
td{align: center; font-family: Bradley Hand ITC; font-size: 18pt; color: black}
a{align: center; font-family: Bradley Hand ITC; font-size: 12pt; color: red}
  
</style>
<center>
<img src="http://i.imgur.com/qPeGt.png" width="250" height="200">
<div id="example1">
<p id="example2">

<font size="7" face="Orbitron" color='#04B404'>Hacked by @rooterror</font>
<br>
<font size="7" face="Orbitron" color='#FFFFF'>BREAK SECURITY HACKERS</font>
<br>
<font size="4" face="Orbitron" color='#585858'><font color='red'>[</font> Mexican Defacer <font color='red'>]</font>
<hr size=3 width= 25% color="#424242" align=center>
<font size='7' face="Orbitron" color='red'>the network security is a myth</font>
<br><br>
<font size='3' face="Orbitron" color=silver>Greets to: @Ro0tXplOit | @th3unkn0w | @Mono_Ezpacial | @An0nChile | @LIberoamericaMu | @MaDx404 | @Anon_Pacifico | @lavodnitas | @Lulz53c | @iAnonymousYT | @H1T3K | @d3str0yers | @machado2012_ | @AnonymousZone | @HackerM3XT4R | @AnonymousTjTeam | @JokerCracker | @WackOs3 | @Th3_N4m3l3ss | @Claudiospik3 | @The_RevolutionH | @W4r10ck423 | @D4rkSh3ll</font>
<br>
<font size="2" face="Orbitron" color="orange">./MX-since 2012</font>
<!-- cursor inicio -->
<style>
div
{
cursor:url(http://programas.publispain.com/imagenes/copy.gif),url(myBall.cur),auto;
}
</style>
<!-- cursor fin -->

<script type="text/javascript">
//Define first typing example:
new TypingText(document.getElementById("example1"));
//Define second typing example (use "slashing" cursor at the end):
new TypingText(document.getElementById("example2"), 50, function(i){
var ar = new Array("_"," ","_","_"); return " " + ar[i.length %
ar.length]; });
//Type out examples:
TypingText.runAll();
</script>

<SCRIPT language=JavaScript type=text/javascript>

<!--
var rows=1; // must be an odd number
var speed=10; // lower is faster
var reveal=10; // between 0 and 2 only. The higher, the faster the word appears
var effectalign="default" //enter "center" to center it.
</script>'))); exit; ?>