<?php 

	//Standard Includes
	
	require_once '../includes/globals.php';
	require_once ROOT_PATH.'/includes/classes.php';
	

	//Non recurring event
	if(($_POST['type']) == "new" && empty($_POST['repeat'])) {
		
		
	 if(empty($_POST['resource']) || empty($_POST['equipment'])) { 
		 
		 
		if(!empty($_POST['resource'])) $full_array = explode(',', $_POST['resource']); 

		if(!empty($_POST['equipment'])) $full_array = explode(',', $_POST['equipment']); 
		 
		 } else { 
			 
		$resource_array = explode(',', $_POST['resource']); 

		$equipment_array = explode(',', $_POST['equipment']); 
	
		$full_array = array_merge($resource_array,$equipment_array); }
	

	$events = array();
	
	foreach ($full_array as $array_item) :
		
	$event = new Event();
	
		
		//Check posted variables
	if (!empty($_POST['title'])) $event->title_EVENT = ucfirst($_POST['title']);

	if (!empty($_POST['added_by'])) { $event->addedBy($_POST['added_by'],"Added"); }

	if (!empty($_POST['added_by_label'])) { $event->addedBy_EVENT = $_POST['added_by_label']; }
	
	//For adding an event via the field in modal
	if (!empty($_POST['duration'])) {
	$duration = explode(' - ', $_POST['duration'], 2);
	
	$event->start_EVENT = $duration[0];

	$event->end_EVENT = $duration[1];
	
	}
	
	//For adding event when using a clone drag
	
	if (!empty($_POST['start']) && !empty($_POST['end'])) {
		
		$event->start_EVENT = $_POST['start'];
	
		$event->end_EVENT = $_POST['end'];
	
	}
	

	
	if (!empty($_POST['category'])) $event->category_EVENT = $_POST['category'];

	if (!empty($_POST['overtime']) && $_POST['overtime'] == 1) $event->overtime_EVENT = 1;
	
	if (!empty($_POST['prov']) && $_POST['prov'] == 1) $event->prov_EVENT = 1;

	if (!empty($_POST['project'])) $event->_kf_project_EVENT = $_POST['project'];

	if (!empty($_POST['film'])) $event->_kf_film_EVENT = $_POST['film'];

	if (!empty($_POST['notes'])) $event->notes_EVENT = $_POST['notes'];

	if (!empty($_POST['group'])) $event->_kf_group_EVENT = $_POST['group'];

	if (!empty($_POST['colour'])) $event->colour_EVENT = $_POST['colour'];

	if (!empty($_POST['location'])) $event->location_EVENT = ($_POST['location'] == "---") ? '' : $_POST['location'];



	//Now see if is staff or equipment
	

	
	//Now the two top edge cases
	
	switch($array_item) {
		
		case "flan":
			 $event->other_EVENT = "flan";
			 $freelancer = Freelancer::fetch_by_id($_POST['freelancer']);
			 $event->_kf_freelancer_EVENT = $_POST['freelancer'];
			 $event->altLabel_EVENT = "$freelancer->nameFirst_FREELANCE $freelancer->nameLast_FREELANCE";
			 
			 $group = rand(10000000000,99999999999); 
			 $event->_kf_group_EVENT = $group;
			 
			 //Now add a new expense entry
			 
			 $expense = new ProjectExpense();
			 
			 $expense->_added_EXPENSE = db_date_format(new DateTime());
			 $expense->_kf_event_EXPENSE = $group;
			 $expense->_kf_project_EXPENSE = $_POST['project'];
			 $expense->ref_EXPENSE = "$freelancer->nameFirst_FREELANCE $freelancer->nameLast_FREELANCE";
		 
		 	//Calculate forecast hourly rate

			 if(!empty($freelancer->dayrateStd_FREELANCE)):
			 
			$expense->cost_EXPENSE = $freelancer->calcForecastRate($_POST['category'],$event->duration());
			 
			 endif; //End IF Rate Empty
			 
			 $expense->hours_EXPENSE = $event->duration();
			 $expense->type_EXPENSE = "Freelancer";
			 $expense->category_EXPENSE = $_POST['category'];
			 
			 $expense->save();
			 
			 
		break;
		
		case "prov":
			 $event->other_EVENT = "prov";
			 
			 //A trigger alert for kit bookings
		
			 if($event->category_EVENT == "filming" || $event->category_EVENT == "filming-block") {
				 
					$staff_added = Staff::fetch_by_id($_POST['added_by']); 
					
					$email = new Email();
					
					$email->SetFrom('dashboard@kingdom-creative.co.uk', 'Dashboard');
					
					$email->FromName = 'Filming Scheduled';
			
					$email->addSendTo(90);
					$email->addSendTo(89);
					
					$email->AddReplyTo($staff_added->email_STAFF, $staff_added->name_STAFF);
		
					$date_link = (new DateTime($event->start_EVENT))->format('Y-m-d');
					
					$email->Subject = 'Equipment Notice - Filming Scheduled - '.$event->title_EVENT;
			
					$email->Body = '<html><body style="background: #2d2d2d;font-family:Arial, Helvetica, sans-serif;">
					
					<table width="100%" cellspacing="0" cellpadding="0"><tr>
						
						<td align="center"><img src="">
			          	
			          	
			         <table width="90%" style="background: #4c4c4c; border-top: 1px solid #6f6f6f;border-left: 3px solid #ffff00;">
				     
				     <tr><td height="150">
					     
					     <img src="'.SITE_URL.'images/kingdom-full-white.png" style="width:10%;padding-left: 20px;padding-top:20px;">
					     
					     <h3 style="color: #b7b7b7; font-weight: 100; padding-left: 20px;">Filming Scheduled</h3>
					     
					     <h1 style="color: white; font-weight: 100; padding-left: 20px;">Kit Booking Required:<br />'.$event->title_EVENT.'</h1>
					     
				     </td></tr>

					 <tr><td><h2 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Added by '.$staff_added->shortname_STAFF.'</h2></td></tr>
					 
					<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Starts: <br />'.displayDateWithTime($event->start_EVENT).'</h3></td></tr>

					<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Ends: <br />'.displayDateWithTime($event->end_EVENT).'</h3></td></tr>
					
					'.(!empty($event->notes_EVENT) ? '<tr><td><h5 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Notes: <br />'.nl2br($event->notes_EVENT).'</h5></td></tr>' : '').'
							
			         </table>
			         
			         <table width="90%" style="background: #3c3c3c; border-left: 3px solid #ffff00;">
			
			        <tr><td colspan="2" style="background: #4c4c4c; height: 30px; width: 100%; padding: 15px 30px 15px 20px;"><a href="'.SITE_URL.'equipment_calendar?day='.$date_link.'" style="background-color: #2d2d2d;border: 1px solid #fff;display: inline-block;padding: 6px 12px;font-size: 14px;font-weight: 400;line-height: 1.428571429;text-align: center;white-space: nowrap;vertical-align: middle; color:#fff;
			cursor: pointer;border-radius: 4px; text-decoration: none;">Open Kit Calendar ></a></td></tr>
			
			         </table>
	   
			        </td>
			    </tr>		 
			</table>		
			</body></html>';


					$email->AltBody = 'Equipment Notice - Filming Scheduled - '.$event->title_EVENT;
			
		
					if(!$email->send()) {
					
					$session->message('Error Sending Kit Booking Warning E-mail: ' . $email->ErrorInfo);
					
					include('../error.php');
					
					 }
			
			
		} //End E-mail Trigger
			 
			 
		break;

		
		default:
		
		if (strpos($array_item, 'staff') !== false) {
		$event->_kf_staff_EVENT = str_replace("staff-","",$array_item); 
		
		
			//Which type of event is this?
			
			if($event->category_EVENT == "meeting" || $event->category_EVENT == "briefing" || $event->category_EVENT == "handover" ) {
				
			$category = ucfirst($event->category_EVENT);
			
			$staff_added = Staff::fetch_by_id($_POST['added_by']); 
	

			
			//Now Send Meeting Invite E-mail
			
			$email = new Email();
			
			$email->SetFrom('dashboard@kingdom-creative.co.uk', 'Dashboard');
			
			$email->FromName = $category.' Scheduled';
	
			$email->addSendTo($event->_kf_staff_EVENT);
			
			$email->AddReplyTo($staff_added->email_STAFF, $staff_added->name_STAFF);

			$date_link = (new DateTime($event->start_EVENT))->format('Y-m-d');
			
			$email->Subject = $category.' Scheduled - '.$event->title_EVENT;
			
			//Is there meeting info to send
			
			$meetingNotes = (empty($event->notes_EVENT)) ? '' : '<tr><td><hr style="background-color: #949494; height: 1px; border: 0;"><h4 style="margin-top:0px;padding: 0px 0px 0px 20px; color: #fff; font-weight: 100;"><br />'.nl2br($event->notes_EVENT).'</h4><hr style="background-color: #949494; height: 1px; border: 0;"></td></tr>' ;
			
			
			$email->Body = '<html><body style="background: #2d2d2d;font-family:Arial, Helvetica, sans-serif;">
					
					<table width="100%" cellspacing="0" cellpadding="0"><tr>
						
						<td align="center"><img src="">
			          	
			          	
			         <table width="90%" style="background: #4c4c4c; border-top: 1px solid #6f6f6f;border-left: 3px solid #ffff00;">
				     
				     <tr><td height="150">
					     
					     <img src="'.SITE_URL.'images/kingdom-full-white.png" style="width:10%;padding-left: 20px;padding-top:20px;">
					     
					     <h3 style="color: #b7b7b7; font-weight: 100; padding-left: 20px;">Event Scheduled</h3>
					     
					     <h1 style="color: white; font-weight: 100; padding-left: 20px;">'.$category.': '.$event->title_EVENT.'</h1>
					     
				     </td></tr>

					 <tr><td><h4 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Scheduled by '.$staff_added->name_STAFF.'</h4></td></tr>
					 
					 '.$meetingNotes.'
					 
					<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Starts: <br />'.displayDateWithTime($event->start_EVENT).'</h3></td></tr>

					<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Ends: <br />'.displayDateWithTime($event->end_EVENT).'</h3></td></tr>
					
					'.(!empty($event->location_EVENT) ? '<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Location: '.$event->location_EVENT.'</h3></td></tr>' : '').'
							
			         </table>
			         
			         <table width="90%" style="background: #3c3c3c; border-left: 3px solid #ffff00;">
			
			        <tr><td colspan="2" style="background: #4c4c4c; height: 30px; width: 100%; padding: 15px 30px 15px 20px;"><a href="'.SITE_URL.'calendar?day='.$date_link.'" style="background-color: #2d2d2d;border: 1px solid #fff;display: inline-block;padding: 6px 12px;font-size: 14px;font-weight: 400;line-height: 1.428571429;text-align: center;white-space: nowrap;vertical-align: middle; color:#fff;
			cursor: pointer;border-radius: 4px; text-decoration: none;">Open Calendar ></a></td></tr>
			
			         </table>
	   
			        </td>
			    </tr>		 
			</table>		
			</body></html>';


			$email->AltBody = $category.' Scheduled';
	

			if(!$email->send()) {
			
			$session->message('Error Sending Staff Meeting E-mail: ' . $email->ErrorInfo);
			
			include('../error.php');
			
			 }
		
			 } //End IF Send E-mail on Type
		
		
		
		}
		
		if (strpos($array_item, 'equipment') !== false) {
			
			$event->_kf_equipment_EVENT = str_replace("equipment-","",$array_item);
		
			//Add the name of the Vehicle when booking via the regular calendar
			if(!empty($_POST['page']) && $_POST['page'] == "staff") {
			 $event->other_EVENT = "vehc";
			 $equipment_id = (int)str_replace("equipment-","",$array_item);
			 $event->_kf_equipment_EVENT = $equipment_id;
			 $vehicle = Equipment::fetch_by_id($equipment_id);
			 $event->title_EVENT = $vehicle->name_EQUIPMENT.': '.ucfirst($_POST['title']); }
		
		
		 }


		 	//Coming from the kit calendar page
		 	if(!empty($_POST['page']) && $_POST['page'] == "equipment") {

 
			 $equipment_id = (int)str_replace("equipment-","",$array_item);
			 $event->_kf_equipment_EVENT = $equipment_id;
			 $vehicle = Equipment::fetch_by_id($equipment_id);
			 
			 if($vehicle->type_EQUIPMENT == "Vehicle") {
			 $event->other_EVENT = "vehc";
			 $event->title_EVENT = $vehicle->name_EQUIPMENT.': '.ucfirst($_POST['title']); }
		
		
		 } 
		
		break;
		
	} //End Swtich
	
	

		$event->update_seq_EVENT = 1;
		
		$event->_created_EVENT = db_date_format(new DateTime());
		
		//!Catch the cases where a project has a meeting to track billing
		
		if(!empty($event->_kf_project_EVENT) && !empty($event->_kf_staff_EVENT) && $event->category_EVENT == "meeting") { $event->category_EVENT = "production-management"; $event->title_EVENT = "MEETING: ".$event->title_EVENT; }


		$events[] = $event;
		
		//Debug logging
			
// 		Log::log_action("Event Added", "ADDED BY STAFF ID: $session->user_id | EVENT-ID: $event->id RESOURCE_ID: $event->_kf_staff_EVENT CATEGORY: $event->category_EVENT TITLE: $event->title_EVENT START: $event->start_EVENT END: $event->end_EVENT"); 
		
		
		endforeach;
		
		Event::createRecords($events);
		
		
		//See if kit has an project to timeline post and is also initial kit submit
			 if(!empty($event->_kf_project_EVENT) && !empty($_POST['newSubmit']) ) {
				 
				      $start = new DateTime($event->start_EVENT);
					  $start = date_format($start, 'Y-m-d');

			 $timelinePost = (new ProjectTimeline())->newPost($_POST['added_by'],'kit',$event->_kf_project_EVENT,"<a href='equipment_calendar?day=$start'>Kit Booked</a>"); }
		
		
		//Add a room booking on if one is selected
		
		if(!empty($_POST['location'])) {
			
				//Load in just the specific rooms
				$bookableRooms = Event::locations('filter');
			
				if(array_key_exists($_POST['location'], $bookableRooms)) {
			
				$roomBooking = new Event();
				
				//For adding an event via the field in modal
				if (!empty($_POST['duration'])) {
					$duration = explode(' - ', $_POST['duration'], 2);
					
					$roomBooking->start_EVENT = $duration[0];
				
					$roomBooking->end_EVENT = $duration[1];
					
				}
					
				//For adding event when using a clone drag
					
				if (!empty($_POST['start']) && !empty($_POST['end'])) {
						
						$roomBooking->start_EVENT = $_POST['start'];
					
						$roomBooking->end_EVENT = $_POST['end'];
					
				}
				
				if (!empty($_POST['added_by'])) { $roomBooking->addedBy($_POST['added_by'],"Reserved"); }
				
				if (!empty($_POST['category'])) $roomBooking->category_EVENT = $_POST['category'];

				if (!empty($_POST['notes'])) $roomBooking->notes_EVENT = $_POST['notes'];

				if (!empty($_POST['group'])) $roomBooking->_kf_group_EVENT = $_POST['group'];
	
				$roomBooking->other_EVENT = "room";
				
				$roomBooking->location_EVENT = $_POST['location'];

				$roomBooking->update_seq_EVENT = 1;
				
				$roomBooking->_created_EVENT = db_date_format(new DateTime());
						
				$roomBooking->title_EVENT = ucfirst($_POST['title']);
				
				$roomBooking->save();
			
		} //End IF Bookable Room Array
		
		} //End IF Location Blank
		
		
		
		echo json_encode(array('status'=>'success','eventid'=>$event->id));
		
		
		
		
		} //End IF New Post
	
	if(($_POST['type']) == "new_batch") {
		
			$staff_array = array();
			$freelance_array = array();
		
			//Make Kingdom staff array
			if(!empty($_POST['event_staff'])) { $staff_array = explode(',', $_POST['event_staff']); 
				$staff_array = array_filter($staff_array); }
			
			//Make Freelancer Array check if empty
			if(!empty($_POST['freelancer_id'])) { $freelance_array = array_values($_POST['freelancer_id']); 
				$freelance_array = array_filter($freelance_array); }

			
			//Loop to go through all supplied events here
			
			$batchCount = 0;
			
			foreach($_POST['event_hours'] as $post_item) :
			
			//See if event entry has hours first
			if(!empty($_POST['event_hours'][$batchCount])) :
			
				
				//Work out if an event line item goes over more than one day
				$dates_range = explode(' - ', $_POST['event_dates'][$batchCount], 2);
						
				$date_range_start = new DateTime($dates_range[0].' '.$_POST['event_start'][$batchCount]);
				
				$date_range_end = new DateTime($dates_range[1].' '.$_POST['event_start'][$batchCount]);
				
				$interval = $date_range_start->diff($date_range_end);
				
				$days = ($interval->format('%a')+1);
				
				$day_count = 1;
		
		//Move through Day Range
		while($day_count <= $days) {
					
				$event_start = $date_range_start->format('Y-m-d H:i');
				
				$date_range_end = $date_range_start->add(new DateInterval('PT'.($_POST['event_hours'][$batchCount]*60).'M'));
				
				$event_end = $date_range_end->format('Y-m-d H:i');
	
					
				//Reset Group ID for each day
				$group = rand(10000000000,99999999999);
					
					
					//New foreach LOOP staff		
			
		if(!empty($staff_array)) {
			
			$events = array();	
					
			foreach ($staff_array as $staff_item) :
					
					$event = new Event();
					
					if (!empty($_POST['title'])) $event->title_EVENT = ucfirst($_POST['title']);
					
					if (!empty($_POST['event_label'][$batchCount])) $event->title_EVENT = $_POST['event_label'][$batchCount].' '.$event->title_EVENT;
					
					if (!empty($_POST['added_by'])) { $event->addedBy($_POST['added_by'],"Added"); }
					
					$event->start_EVENT = $event_start;

					$event->end_EVENT = $event_end;
					
					$event->_kf_staff_EVENT = $staff_item;
					
						if (!empty($_POST['category'][$batchCount])) $event->category_EVENT = $_POST['category'][$batchCount];

						if (!empty($_POST['overtime'][$batchCount]) && $_POST['overtime'][$batchCount] == 1) $event->overtime_EVENT = 1;
						
						if (!empty($_POST['prov']) && $_POST['prov'] == 1) $event->prov_EVENT = 1;
						
						if (!empty($_POST['project_id'])) $event->_kf_project_EVENT = $_POST['project_id'];
						
						if (!empty($_POST['event_notes'][$batchCount])) $event->notes_EVENT = $_POST['event_notes'][$batchCount];
						
						$event->_kf_group_EVENT = $group;
						
					$event->update_seq_EVENT = 1;
		
					$event->_created_EVENT = db_date_format(new DateTime());
					
					
		//!Catch the cases where a project has a meeting to track billing
		
		if(!empty($event->_kf_project_EVENT) && !empty($event->_kf_staff_EVENT) && $event->category_EVENT == "meeting") { $event->category_EVENT = "production-management"; $event->title_EVENT = "MEETING: ".$event->title_EVENT; }
					
					
				
				//Write out each record to array
				
				$events[] = $event;				
					
			endforeach; //STAFF
			
			
			
			
			//Add Batch to DB
			Event::createRecords($events);
			
			}		
				
				
				//New foreach LOOP freelancer
		
// 		if(!empty($freelance_array)) {
// 			
// 			$events = array();
// 			
// 			$freelance_array_count = 0;		
// 				
// 			foreach ($freelance_array as $freelance_item) :
// 			
// 					if(!FreelancerProject::entry_exists($_POST['project_id'],$freelance_item)):
// 						
// 						$freelancerProject = new FreelancerProject();
// 						$freelancerProject->_added_FREELANCE_PROJECT = db_date_format(new DateTime());
// 						$freelancerProject->_kf_project_FREELANCE_PROJECT = $_POST['project_id'];
// 						$freelancerProject->_kf_freelancer_FREELANCE_PROJECT = $freelance_item;
// 						$freelancerProject->dayRate_FREELANCE_PROJECT = str_replace('£','',$_POST['freelancer_dayrate'][$freelance_array_count]);
// 						$freelancerProject->totalCost_FREELANCE_PROJECT = str_replace('£','',$_POST['freelancer_total'][$freelance_array_count]);
// 						
// 						$freelancerProject->save();
// 						
// 						//Send Alice an Email with Notification
// 						
// 						$freelancer = Freelancer::fetch_by_id($freelance_item);
// 			
// 			$date_link = (new DateTime($event_start))->format('Y-m-d');
// 			
// 			$email = new Email();
// 			
// 			$email->FromName = 'New Freelancer Booking';
// 	
// 			$email->addSendTo(48);
// 			$email->addSendTo(71);
// 		
// 			$email->Subject = 'Freelancer Booked: '.$_POST['title'].' - '.$freelancer->name();
// 			
// 			$email->Body = '<html><body style="background: #2d2d2d;font-family:Arial, Helvetica, sans-serif;">
// 					
// 					<table width="100%" cellspacing="0" cellpadding="0"><tr>
// 						
// 						<td align="center">
// 			          	
// 			          	
// 			         <table width="90%" style="background: #4c4c4c; border-top: 1px solid #6f6f6f;border-left: 3px solid #ffff00;">
// 				     
// 				     <tr><td height="150">
// 					     
// 					     <img src="'.SITE_URL.'images/kingdom-full-white.png" style="width:10%;padding-left: 20px;padding-top:20px;">
// 					     
// 					     <h3 style="color: #b7b7b7; font-weight: 100; padding-left: 20px;">Freelancer Booked</h3>
// 					     
// 					     <h1 style="color: white; font-weight: 100; padding-left: 20px;">'.$_POST['title'].' - '.$freelancer->name().'</h1>
// 					     
// 				     </td></tr>
// 					 
// 					<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Booked From: <br />'.displayDateWithTime($event_start).'</h3></td></tr>
// 
// 					<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Total Cost: <br />£'.$freelancerProject->totalCost_FREELANCE_PROJECT.'</h3></td></tr>
// 							
// 			         </table>
// 			         
// 			         <table width="90%" style="background: #3c3c3c; border-left: 3px solid #ffff00;">
// 			
// 			        <tr><td colspan="2" style="background: #4c4c4c; height: 30px; width: 100%; padding: 15px 30px 15px 20px;"><a href="'.SITE_URL.'calendar?day='.$date_link.'" style="background-color: #2d2d2d;border: 1px solid #fff;display: inline-block;padding: 6px 12px;font-size: 14px;font-weight: 400;line-height: 1.428571429;text-align: center;white-space: nowrap;vertical-align: middle; color:#fff;
// 			cursor: pointer;border-radius: 4px; text-decoration: none;">Open Calendar ></a></td></tr>
// 			
// 			         </table>
// 	   
// 			        </td>
// 			    </tr>		 
// 			</table>		
// 			</body></html>';
// 
// 
// 				$email->AltBody = 'New Freelancer Booking';
// 	
// 
// 					if(!$email->send()) {
// 						
// 						$session->message('Error Sending Freelancer Booking E-mail: ' . $email->ErrorInfo);
// 						
// 						include('../error.php');
// 						
// 						 }
// 	
// 
// 						
// 				endif; //End IF Freelancer Record Exists
// 				
// 				
// 				
// 				
// 				
// 				
// 					
// 					$event = new Event();
// 					
// 					$freelancer = Freelancer::fetch_by_id($freelance_item);
// 					
// 					if (!empty($_POST['title'])) $event->title_EVENT = ucfirst($_POST['title']);
// 
// 					if (!empty($_POST['event_label'][$batchCount])) $event->title_EVENT = $_POST['event_label'][$batchCount].' '.$event->title_EVENT;
// 					
// 					$event->altLabel_EVENT = "$freelancer->nameFirst_FREELANCE $freelancer->nameLast_FREELANCE";
// 					$event->_kf_freelancer_EVENT = $freelance_item;
// 					
// 					if (!empty($_POST['added_by'])) { $event->addedBy($_POST['added_by'],"Added"); }
// 					
// 					$event->start_EVENT = $event_start;
// 
// 					$event->end_EVENT = $event_end;
// 					
// 									
// 					$event->other_EVENT = "flan";
// 					
// 						if (!empty($_POST['category'][$batchCount])) $event->category_EVENT = $_POST['category'][$batchCount];
// 
// 						if (!empty($_POST['overtime'][$batchCount]) && $_POST['overtime'][$batchCount] == 1) $event->overtime_EVENT = 1;
// 						
// 						if (!empty($_POST['prov']) && $_POST['prov'] == 1) $event->prov_EVENT = 1;
// 						
// 						if (!empty($_POST['project_id'])) $event->_kf_project_EVENT = $_POST['project_id'];
// 						
// 						if (!empty($_POST['event_notes'][$batchCount])) $event->notes_EVENT = $_POST['event_notes'][$batchCount];
// 						
// 						$event->_kf_group_EVENT = $group;
// 						
// 					$event->update_seq_EVENT = 1;
// 		
// 					$event->_created_EVENT = db_date_format(new DateTime());	
// 				
// 				$events[] = $event;		
// 				
// 				$freelance_array_count++;
// 					
// 			endforeach; //FREELANCER
// 			
// 			
// 			//Add Batch to DB
// 			Event::createRecords($events);
// 			
// 
// 
// 			} //End Freelance IF
				
				//Reset Hours Each Time
				$date_range_end = $date_range_start->sub(new DateInterval('PT'.($_POST['event_hours'][$batchCount]*60).'M'));
				$date_range_start->add(new DateInterval('P1D'));
				
		
				$day_count++;
				
		} // End Day While 
		
		$batchCount++;
		
		endif;
		
		endforeach; //End Each Event Batch

	    $session->message('Calendar Events Added');			
		
		if(empty($_POST['project_id'])) {
		 redirect_to('../calendar-week_'.$date_range_start->format('Y-m-d'));
		 } else {
		 redirect_to('../add_events?project_id='.$_POST['project_id']); 	 
		 }
			
		
		}
		
	//Adding a recurring event
	if(($_POST['type']) == "new" && !empty($_POST['repeat'])) {
		
				//Make events array
				
				$events = array();
		
				//Get the array of staff and resouces
				 if(empty($_POST['resource']) || empty($_POST['equipment'])) { 
					 
					 
					if(!empty($_POST['resource'])) $full_array = explode(',', $_POST['resource']); 
			
					if(!empty($_POST['equipment'])) $full_array = explode(',', $_POST['equipment']); 
					 
					 } else { 
						 
					$resource_array = explode(',', $_POST['resource']); 
			
					$equipment_array = explode(',', $_POST['equipment']); 
				
					$full_array = array_merge($resource_array,$equipment_array); }
	
	
				//For adding an event via the field in modal
				if (!empty($_POST['duration'])) {
				$duration = explode(' - ', $_POST['duration'], 2);
				
				$startEvent = new DateTime($duration[0]);
			
				$endEvent = new DateTime($duration[1]);
				
				}
	
				//Set up the recurring variables
				if (!empty($_POST['repeat_amount'])) $eventCount = $_POST['repeat_amount'];
				
				$currentEvent = 0;
				
				//All events are connected
				$group = rand(10000000000,99999999999);
			
				//Loop through repeating event
				while($eventCount > $currentEvent) {
					
					
					//Now loop for each resource
					foreach ($full_array as $array_item) :
					
					$event = new Event();

					
					//Check posted variables
					if (!empty($_POST['title'])) $event->title_EVENT = ucfirst($_POST['title']);
				
					if (!empty($_POST['added_by'])) { $event->addedBy($_POST['added_by'],"Added"); }
				
					if (!empty($_POST['added_by_label'])) { $event->addedBy_EVENT = $_POST['added_by_label']; }

					$event->start_EVENT = $startEvent->format('Y-m-d H:i');
				
					$event->end_EVENT = $endEvent->format('Y-m-d H:i');					

						if (!empty($_POST['category'])) $event->category_EVENT = $_POST['category'];

						if (!empty($_POST['overtime']) && $_POST['overtime'] == 1) $event->overtime_EVENT = 1;
						
						if (!empty($_POST['prov']) && $_POST['prov'] == 1) $event->prov_EVENT = 1;
					
						if (!empty($_POST['project'])) $event->_kf_project_EVENT = $_POST['project'];
					
						if (!empty($_POST['film'])) $event->_kf_film_EVENT = $_POST['film'];
					
						if (!empty($_POST['notes'])) $event->notes_EVENT = $_POST['notes'];
					
						//This will be worked on
						// $event->_kf_group_EVENT = $group;
					
						if (!empty($_POST['colour'])) $event->colour_EVENT = $_POST['colour'];
					
						if (!empty($_POST['location'])) $event->location_EVENT = ($_POST['location'] == "---") ? '' : $_POST['location'];
						
						//Now Send an E-mail for the Event
						
						
						
						switch($array_item) {
							
							case "flan":
								 $event->other_EVENT = "flan";
							break;
							
							case "prov":
								 $event->other_EVENT = "prov";			 	 
							break;
					
							
							default:
							
							if (strpos($array_item, 'staff') !== false) {
							$event->_kf_staff_EVENT = str_replace("staff-","",$array_item); }
							
							if (strpos($array_item, 'equipment') !== false) {
								
								$event->_kf_equipment_EVENT = str_replace("equipment-","",$array_item);
							
								//Add the name of the Vehicle when booking via the regular calendar
								if(!empty($_POST['page']) && $_POST['page'] == "staff") {
								 $event->other_EVENT = "vehc";
								 $equipment_id = (int)str_replace("equipment-","",$array_item);
								 $event->_kf_equipment_EVENT = $equipment_id;
								 $vehicle = Equipment::fetch_by_id($equipment_id);
								 $event->title_EVENT = $vehicle->name_EQUIPMENT.': '.ucfirst($_POST['title']); }
							
							
							 }		
							break;
							
						} //End Swtich
	
	

					$event->update_seq_EVENT = 1;
					
					$event->_created_EVENT = db_date_format(new DateTime());
					
					
					//!Catch the cases where a project has a meeting to track billing
		
		if(!empty($event->_kf_project_EVENT) && !empty($event->_kf_staff_EVENT) && $event->category_EVENT == "meeting") { $event->category_EVENT = "production-management"; $event->title_EVENT = "MEETING: ".$event->title_EVENT; }
					
					
					
					$events[] = $event;
					
					
					//Only send an e-mail the first loop through
					
			if(empty($currentEvent)) {
					
					if (strpos($array_item, 'staff') !== false) {
		$event->_kf_staff_EVENT = str_replace("staff-","",$array_item); 
		
		
			//Which type of event is this?
			
			if($event->category_EVENT == "meeting" || $event->category_EVENT == "briefing" || $event->category_EVENT == "handover" ) {
				
			$category = ucfirst($event->category_EVENT);
			
			$staff_added = Staff::fetch_by_id($_POST['added_by']); 
			
			//Now Send Meeting Invite E-mail
			
			$email = new Email();
			
			$email->SetFrom('dashboard@kingdom-creative.co.uk', 'Dashboard');
			
			$email->FromName = ucfirst($_POST['repeat']).' '.$category.' Scheduled';
	
			$email->addSendTo($event->_kf_staff_EVENT);
			
			$email->AddReplyTo($staff_added->email_STAFF, $staff_added->name_STAFF);

			$date_link = (new DateTime($event->start_EVENT))->format('Y-m-d');
			
			$email->Subject = $category.' Scheduled - '.$event->title_EVENT;
			


			$repeatInfo = '<tr><td><h4 style="margin-top:0px;padding: 0px 0px 0px 20px; color: #fff; font-weight: 100;"><br />Recurring Event: '.ucfirst($_POST['repeat']).'</h4></td></tr>' ;
			
			
			$email->Body = '<html><body style="background: #2d2d2d;font-family:Arial, Helvetica, sans-serif;">
					
					<table width="100%" cellspacing="0" cellpadding="0"><tr>
						
						<td align="center"><img src="">
			          	
			          	
			         <table width="90%" style="background: #4c4c4c; border-top: 1px solid #6f6f6f;border-left: 3px solid #ffff00;">
				     
				     <tr><td height="150">
					     
					     <img src="'.SITE_URL.'images/kingdom-full-white.png" style="width:10%;padding-left: 20px;padding-top:20px;">
					     
					     <h3 style="color: #b7b7b7; font-weight: 100; padding-left: 20px;">Recurring Event Scheduled</h3>
					     
					     <h1 style="color: white; font-weight: 100; padding-left: 20px;">'.$category.': '.$event->title_EVENT.'</h1>
					     
				     </td></tr>

					 <tr><td><h4 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Scheduled by '.$staff_added->name_STAFF.'</h4></td></tr>
					 
					 '.$repeatInfo.'
					 
					<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Starts: <br />'.displayDateWithTime($event->start_EVENT).'</h3></td></tr>

					<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Ends: <br />'.displayDateWithTime($event->end_EVENT).'</h3></td></tr>
					
					'.(!empty($event->location_EVENT) ? '<tr><td><h3 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Location: '.$event->location_EVENT.'</h3></td></tr>' : '').'
					
					'.(!empty($event->notes_EVENT) ? '<tr><td><h5 style="padding: 0px 0px 0px 20px; color: #bdbdbd; font-weight: 100;">Notes: <br />'.$event->notes_EVENT.'</h5></td></tr>' : '').'
							
			         </table>
			         
			         <table width="90%" style="background: #3c3c3c; border-left: 3px solid #ffff00;">
			
			        <tr><td colspan="2" style="background: #4c4c4c; height: 30px; width: 100%; padding: 15px 30px 15px 20px;"><a href="'.SITE_URL.'calendar?day='.$date_link.'" style="background-color: #2d2d2d;border: 1px solid #fff;display: inline-block;padding: 6px 12px;font-size: 14px;font-weight: 400;line-height: 1.428571429;text-align: center;white-space: nowrap;vertical-align: middle; color:#fff;
			cursor: pointer;border-radius: 4px; text-decoration: none;">Open Calendar ></a></td></tr>
			
			         </table>
	   
			        </td>
			    </tr>		 
			</table>		
			</body></html>';


			$email->AltBody = $category.' Scheduled';
	

			if(!$email->send()) {
			
			$session->message('Error Sending Staff Meeting E-mail: ' . $email->ErrorInfo);
			
			include('../error.php');
			
			 }
		
			 } //End IF Send E-mail on Type
		
		
		
		}	
				
					} //End If Repeat Empty
					
					endforeach;
					
					
					
					$currentEvent++;
					
					switch($_POST['repeat']) {
						
						case "weekly":
						$startEvent->add(new DateInterval('P7D'));
						$endEvent->add(new DateInterval('P7D'));
						break;
						
						case "monthly":
						$startEvent->add(new DateInterval('P28D'));
						$endEvent->add(new DateInterval('P28D'));
						break;

						case "yearly":
						$startEvent->add(new DateInterval('P1Y'));
						$endEvent->add(new DateInterval('P1Y'));
						break;
						
						
						
					}
					
					
					
					//Increment Date Now
					
				} //End While Repeating Event

				
				
			//Add Batch to DB
			if(Event::createRecords($events)) echo json_encode(array('status'=>'success'));	
				

			
		
		/* redirect_to('../calendar-week_'.$date_range_start->format('Y-m-d')); */
		
		
		
		}

	
	
?>