<?php if ( ! defined('ABSPATH')) exit('restricted access');
//Feedburner_Widget Class
class FW_Eventcounter extends WP_Widget
{
	/** constructor */
	function __construct()
	{
		parent::__construct( /* Base ID */'eventcounter', /* Name */'Event Countdown', array( 'description' => 'Countdown the upcoming event' ) );
	}

	/** @see WP_Widget::widget */
	function widget($args, $instance)
	{
		global $_reserved_categories;
		
		$event_data = new wp_Query('showposts=3&cat='.$_reserved_categories['events'].'&meta_key=fw_event_time&meta_value='.time().'&meta_compare=>&order=asc&orderby=meta_value&post_type=post&post_status=publish');
		if( ! $event_data->found_posts) return;
		
		extract($args);
		$title = apply_filters( 'widget_title', $instance['title'] );
		
		echo $before_widget;
		
		if($event_data->have_posts())
		while($event_data->have_posts()): $event_data->the_post();
		
		$eventDATA = get_post_meta(get_the_ID(), 'fw_events', true);
		if ( ! is_numeric($eventDATA['event_time']) && strlen($eventDATA['event_time']) < 5) continue;
		
		$event_time = @get_time_difference(time(), $eventDATA['event_time']);

		foreach((array)$event_time as $k=>$v)
		{
			if(strlen($v) < 2) $event_time[$k] = (int) '0'.$event_time[$k];
		}
		
		$startTime = @implode(':', $event_time);
		$title = ($startTime) ?  $title : 'Recent Event';
		echo $before_title . $title . $after_title;
		?>
		<script type="text/javascript">
			jQuery(function($){
				$('#counter').countdown({
					image: theme_url+'/images/digits.png',
					startTime: '<?php echo $startTime;?>'
				});
			});
        </script>
        <div class="upcommingevent">
            <!-- Counter Section -->
            <?php if($startTime):?>
            <div class="countersec">
                <h5 class="bold"><?php _e('Time Left For this Event','wisdom_of_life');?></h5>
                <div id="counter"></div>
                <ul class="desc colr">
                    <li class="days"><?php _e('Days','wisdom_of_life');?></li>
                    <li class="hours"><?php _e('Hours','wisdom_of_life');?></li>
                    <li class="mints"><?php _e('Minutes','wisdom_of_life');?></li>
                    <li class="secnds"><?php _e('Seconds','wisdom_of_life');?></li>
                </ul>
            </div>
            <?php endif; ?>
            <div class="clear"></div>
            <!-- Up Events -->
            <div class="upevent">
                <h5 class="colr bold"><a href="<?php the_permalink();?>" title="<?php the_title();?>"><?php the_title();?></a></h5>
                <p class="bold"><?php echo character_limiter(get_the_content(), 100,'',true);?></p>
                <p>
                    <span class="date"><?php echo date('m/d/Y - h:i a', $eventDATA['event_time']);?></span>
                    <span class="venu"><?php echo $eventDATA['event_place'];?></span>
                </p>
            </div>
            <div class="clear"></div>
            <a href="<?php the_permalink();?>" class="readmore"><?php _e('Read more','wisdom_of_life');?></a>
        </div>
        
	<?php
		break;
		endwhile;
		echo $after_widget;
	}

	/** @see WP_Widget::update */
	function update($new_instance, $old_instance)
	{
		$instance = $old_instance;
		$instance['title'] = strip_tags($new_instance['title']);
		return $instance;
	}

	/** @see WP_Widget::form */
	function form($instance)
	{
		if ($instance)
		{
			$title = esc_attr($instance['title']);
		}
		else
		{
			$title = 'Upcoming Event';
		}
	?>
        <p>
            <label for="<?php echo $this->get_field_id('title'); ?>"><?php _e('Title:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo $title; ?>" />
        </p>
	<?php 
	}

} // class event counter

//Donate_Widget Class
class FW_Donate extends WP_Widget
{
	/** constructor */
	function __construct()
	{
		parent::__construct( /* Base ID */'donate', /* Name */'Donation widget', array( 'description' => 'This widget is used for donation' ) );
	}

	/** @see WP_Widget::widget */
	function widget($args, $instance)
	{
		global $wpdb;
		extract($args);
		$title = apply_filters( 'widget_title', $instance['title'] );
		echo $before_widget;
		if($title)
		echo $before_title . $title . $after_title;
		require_once('donate/libpaypal.php');
		
		//Create the authentication
		$pp_type = ($instance['pp_type'] == 'sandbox') ? true : false;
		$auth = new PaypalAuthenticaton($instance['pp_username'], $instance['pp_api_username'], $instance['pp_api_password'], $instance['pp_sign'], $pp_type);
		
		//Create the paypal object
		$paypal = new Paypal($auth);
		$pp_settings = new PaypalSettings();
		$pp_settings->allowMerchantNote = true;
		$pp_settings->logNotifications = true;
		
		//the base url
		$return =  'http://'.$_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
		$selected_page = get_page($instance['selected_page']); ?>
        
        <div class="donation">
		<?php
            if(count($_POST) && $notif = $paypal->handleNotification())
            $this->save_transaction($notif);
            
            $current_pos = $wpdb->get_row("SELECT SUM(total) as total FROM `fw_donation` WHERE `status` = 'Completed'"); 
			$total = ($current_pos->total) ? $current_pos->total : 1;
			$total = (is_numeric($instance['raised']) && $instance['raised'] < $instance['target']) ? $instance['raised'] : $total;
			$dtotal = (is_numeric($instance['raised']) && $instance['raised'] < $instance['target']) ? $instance['raised'] : 0;
            $percent = ($instance['target']) ? $total / $instance['target'] : 0;?>
            
            <p><?php echo $instance['note']; ?></p>
            <script type="text/javascript">
				jQuery(function($) {
					$('#progress_bar').progressbar({value:<?php echo ceil($percent*100); ?>});
				});
			</script>
            
            <div class="bar">
            	<div id="progress_bar"></div>
            </div>
            
            <div class="collection">
                <h2 class="colr bold"><?php echo $instance['currency'].number_format($dtotal, 0, '.', ','); ?></h2>
                <h4 class="target bold">Target, <?php echo $instance['currency'].number_format($instance['target'], 0, '.', ','); ?></h4>
            </div>
            
            <?php 
			
			$action = $paypal->getButtonAction(); //get button action
			$products = array();
			$params = $paypal->getButtonParams($products, "$return?action=paid", "$return?action=cancel", "$return?action=notify"); //get params for the form
			unset($params['currency_code']);
			unset($params['amount']);
			$params['cmd'] = '_donations';
			$params['item_name'] = 'Donation';
			//create a form with these params ?>
			<form action="<?php echo $action; ?>" method="post">
				<?php foreach($params as $key => $value) { ?>
                    <input type="hidden" name="<?php echo $key; ?>" value="<?php echo $value; ?>"/>
                <?php }?>                    
                <button type="submit" class="bold backcolr donbtn"><?php _e('Donate Now','wisdom_of_life');?></button>
			</form>
        </div>
	<?php
		echo $after_widget;
	}

	/** @see WP_Widget::update */
	function update($new_instance, $old_instance)
	{
		$instance = $old_instance;
		$instance['title'] 				= strip_tags($new_instance['title']);
		$instance['target'] 			= strip_tags($new_instance['target']);
		$instance['raised'] 			= strip_tags($new_instance['raised']);
		$instance['currency'] 			= strip_tags($new_instance['currency']);
		$instance['note']	 			= strip_tags($new_instance['note']);
		$instance['pp_type'] 			= strip_tags($new_instance['pp_type']);
		$instance['pp_username'] 		= strip_tags($new_instance['pp_username']);
		$instance['pp_api_username'] 	= strip_tags($new_instance['pp_api_username']);
		$instance['pp_api_password'] 	= strip_tags($new_instance['pp_api_password']);
		$instance['pp_sign'] 			= strip_tags($new_instance['pp_sign']);
		return $instance;
	}

	/** @see WP_Widget::form */
	function form($instance)
	{
		if ($instance)
		{
			$title 				= esc_attr($instance['title']);
			$target 			= esc_attr($instance['target']);
			$raised 			= (isset($instance['raised'])) ? esc_attr($instance['raised']) : 0;
			$currency 			= esc_attr($instance['currency']);
			$note	 			= esc_attr($instance['note']);
			$pp_type 			= esc_attr($instance['pp_type']);
			$pp_username 		= esc_attr($instance['pp_username']);
			$pp_api_username 	= esc_attr($instance['pp_api_username']);
			$pp_api_password 	= esc_attr($instance['pp_api_password']);
			$pp_sign 			= esc_attr($instance['pp_sign']);
		}
		else
		{
			$title 				= __('You\'ve Helped Raise...', 'donate_widget');
			$target 			= 25000;
			$raised 			= 0;
			$currency 			= '$';
			$note 				= '';
			$pp_type 			= 'sandbox';
			$pp_username 		= '';
			$pp_api_username 	= '';
			$pp_api_password 	= '';
			$pp_sign 			= '';
		}
	?>
        <p>
            <label for="<?php echo $this->get_field_id('title'); ?>"><?php _e('Title:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo $title; ?>" />
        </p>
        <p>
            <label for="<?php echo $this->get_field_id('target'); ?>"><?php _e('Target:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('target'); ?>" name="<?php echo $this->get_field_name('target'); ?>" type="text" value="<?php echo $target; ?>" />
        </p>
		
        <p>
            <label for="<?php echo $this->get_field_id('raised'); ?>"><?php _e('Manually enter the raised money:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('raised'); ?>" name="<?php echo $this->get_field_name('raised'); ?>" type="text" value="<?php echo $raised; ?>" />
        </p>

        <p>
            <label for="<?php echo $this->get_field_id('currency'); ?>"><?php _e('Currency Sign:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('currency'); ?>" name="<?php echo $this->get_field_name('currency'); ?>" type="text" value="<?php echo $currency; ?>" />
        </p>
         <p>
            <label for="<?php echo $this->get_field_id('text'); ?>"><?php _e('Note:','wisdom_of_life'); ?></label> 
            <textarea name="<?php echo $this->get_field_name('note'); ?>" id="<?php echo $this->get_field_id('note'); ?>" cols="35" rows="3"><?php echo $note; ?></textarea>
        </p>
        <p>
			<label for="<?php echo $this->get_field_id('pp_type'); ?>"><?php _e('Select Paypal Type:','wisdom_of_life'); ?></label><br />
            <input type="radio" id="<?php echo $this->get_field_id('pp_type'); ?>" name="<?php echo $this->get_field_name('pp_type'); ?>" value="live" <?php echo ($pp_type == 'live') ? 'checked="checked"' : '';?> />Live
            <input type="radio" id="<?php echo $this->get_field_name('pp_type'); ?>" name="<?php echo $this->get_field_name('pp_type'); ?>" value="sandbox" <?php echo ($pp_type == 'sandbox') ? 'checked="checked"' : '';?> />Sandbox
		</p>
        <p>
            <label for="<?php echo $this->get_field_id('pp_username'); ?>"><?php _e('Paypal Username:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('pp_username'); ?>" name="<?php echo $this->get_field_name('pp_username'); ?>" type="text" value="<?php echo $pp_username; ?>" />
        </p>
        <p>
            <label for="<?php echo $this->get_field_id('pp_api_username'); ?>"><?php _e('Paypal API Username:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('pp_api_username'); ?>" name="<?php echo $this->get_field_name('pp_api_username'); ?>" type="text" value="<?php echo $pp_api_username; ?>" />
        </p>
		<p>
            <label for="<?php echo $this->get_field_id('pp_api_password'); ?>"><?php _e('Paypal API Password:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('pp_api_password'); ?>" name="<?php echo $this->get_field_name('pp_api_password'); ?>" type="password" value="<?php echo $pp_api_password; ?>" />
        </p>
        <p>
            <label for="<?php echo $this->get_field_id('pp_sign'); ?>"><?php _e('Paypal Signature:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('pp_sign'); ?>" name="<?php echo $this->get_field_name('pp_sign'); ?>" type="text" value="<?php echo $pp_sign; ?>" />
        </p>
	<?php 
	}
	
	function save_transaction($data)
	{
		global $wpdb;
		$array = array('transID'=>$data->transactionId, 'status'=>$data->status, 'total'=>$data->total, 'donalID'=>$data->buyer->id, 
						'donalName'=>$data->buyer->firstName.' ' .$data->buyer->lastName, 'donalEmail'=>$data->buyer->email, 'note'=>$data->products[0]->name,
						'data'=>serialize($data), 'date'=>date('Y-m-d H:i:s', $data->date )
						);
						
		if($transID = $wpdb->get_row("SELECT `transID` FROM `fw_donation` WHERE `transID` = '".$data->transactionId."'")){
			echo '<p class="errormsg donationmsg">The transaction is already in our record.</p>';
		}
		elseif($data->status == 'Completed') {
			$result = $wpdb->insert('fw_donation', $array);
			if($result) echo '<p class="successmsg donationmsg">'.__('Thank you for your donation.','wisdom_of_life').'</p>';
		}
		else{
			$result = $wpdb->insert('fw_donation', $array);
			echo '<p class="errormsg donationmsg">'.__('Sorry! unfortunetly the transaction is failed.','wisdom_of_life').'</p>';
		}
	}

} // class donation

//Donate_Widget Class
class FW_Fbplugin extends WP_Widget
{
	/** constructor */
	function __construct()
	{
		parent::__construct( /* Base ID */'fbplugin', /* Name */'Facebook Page Likebox', array( 'description' => 'This widget is used to show Facebook Page Fans and Allow users to Like Facebook Page' ) );
	}

	/** @see WP_Widget::widget */
	function widget($args, $instance)
	{
		global $wpdb;
		extract($args);
		$title = apply_filters( 'widget_title', $instance['title'] );
		echo $before_widget;
		if($title)
		echo $before_title . $title . $after_title;
	?>
    <div id="fb-root"></div>
	<script>(function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=343918698971500";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));</script>
	<?php
		echo $this->set_value($instance);
		echo $after_widget;
	}

	/** @see WP_Widget::update */
	function update($new_instance, $old_instance)
	{
		$instance = $old_instance;
		$instance['title'] 				= strip_tags($new_instance['title']);
		$instance['href'] 				= strip_tags($new_instance['href']);
		$instance['width']	 			= strip_tags($new_instance['width']);
		$instance['height']	 			= strip_tags($new_instance['height']);
		$instance['colorscheme']		= strip_tags($new_instance['colorscheme']);
		$instance['show_faces'] 		= strip_tags($new_instance['show_faces']);
		$instance['border_color']	 	= strip_tags($new_instance['border_color']);
		$instance['stream']			 	= strip_tags($new_instance['stream']);
		$instance['header']				= strip_tags($new_instance['header']);
		return $instance;
	}

	/** @see WP_Widget::form */
	function form($instance)
	{
		if ($instance)
		{
			$title 				= esc_attr($instance['title']);
			$page_url 			= esc_attr($instance['href']);
			$width	 			= esc_attr($instance['width']);
			$height	 			= esc_attr($instance['height']);
			$colorscheme		= esc_attr($instance['colorscheme']);
			$show_faces 		= esc_attr($instance['show_faces']);
			$border_color	 	= esc_attr($instance['border_color']);
			$stream			 	= esc_attr($instance['stream']);
			$header				= esc_attr($instance['header']);
		}
		else
		{
			$title 				= '';
			$page_url 			= '';
			$width	 			= 250;
			$height				= 320;
			$colorscheme		= 'light';
			$show_faces 		= '';
			$border_color	 	= '';
			$stream			 	= '';
			$header				= '';
		}
	?>
        <p>
            <label for="<?php echo $this->get_field_id('title'); ?>"><?php _e('Title','wisdom_of_life'); ?>:</label> 
            <input class="widefat" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo $title; ?>" />
        </p>
        <p>
            <label for="<?php echo $this->get_field_id('href'); ?>"><?php _e('Facebook Page URL','wisdom_of_life'); ?>:</label> 
            <input class="widefat" id="<?php echo $this->get_field_id('href'); ?>" name="<?php echo $this->get_field_name('href'); ?>" type="text" value="<?php echo $page_url; ?>" />
        </p>
        <p>
            <label for="<?php echo $this->get_field_id('width'); ?>"><?php _e('Width','wisdom_of_life'); ?>:</label> 
            <input id="<?php echo $this->get_field_id('width'); ?>" name="<?php echo $this->get_field_name('width'); ?>" type="text" value="<?php echo $width; ?>" style="width:50px;" />px
        </p>
         <p>
            <label for="<?php echo $this->get_field_id('height'); ?>"><?php _e('Height','wisdom_of_life'); ?>:</label> 
            <input id="<?php echo $this->get_field_id('height'); ?>" name="<?php echo $this->get_field_name('height'); ?>" type="text" value="<?php echo $height; ?>" style="width:50px;" />px
        </p>
        <p>
			<label for="<?php echo $this->get_field_id('colorscheme'); ?>"><?php _e('Color Scheme','wisdom_of_life'); ?>:</label>
            <select name="<?php echo $this->get_field_name('colorscheme'); ?>" id="<?php echo $this->get_field_id('colorscheme'); ?>">
            	<option value="light" <?php echo ($colorscheme == 'light') ? 'selected="selected"' : '';?>>Light</option>
                <option value="dark" <?php echo ($colorscheme == 'dark') ? 'selected="selected"' : '';?>>Dark</option>
            </select>
		</p>
        <p>
            <label for="<?php echo $this->get_field_id('show_faces'); ?>"><?php _e('Show Faces','wisdom_of_life'); ?>:</label> 
            <input id="<?php echo $this->get_field_id('show_faces'); ?>" name="<?php echo $this->get_field_name('show_faces'); ?>" type="checkbox" value="true" <?php echo ($show_faces) ? 'checked="checked"' : '';?> />
        </p>
        <p>
            <label for="<?php echo $this->get_field_id('border_color'); ?>"><?php _e('Border Color','wisdom_of_life'); ?>:</label> 
            <input class="widefat" id="<?php echo $this->get_field_id('border_color'); ?>" name="<?php echo $this->get_field_name('border_color'); ?>" type="text" value="<?php echo $border_color; ?>" style="width:100px;" />
        </p>
        <p>
            <label for="<?php echo $this->get_field_id('stream'); ?>"><?php _e('Show Stream','wisdom_of_life'); ?>:</label> 
            <input id="<?php echo $this->get_field_id('stream'); ?>" name="<?php echo $this->get_field_name('stream'); ?>" type="checkbox" value="true" <?php echo ($stream) ? 'checked="checked"' : '';?> />
        </p>
        <p>
            <label for="<?php echo $this->get_field_id('header'); ?>"><?php _e('Show Header','wisdom_of_life'); ?>:</label> 
            <input id="<?php echo $this->get_field_id('header'); ?>" name="<?php echo $this->get_field_name('header'); ?>" type="checkbox" value="true" <?php echo ($header) ? 'checked="checked"' : '';?> />
        </p>
	<?php 
	}
	
	function set_value($instance)
	{
		$data = '';
		foreach($instance as $k=>$v)
		{
			if($v) {
				$atr = 'data-'.str_replace('_', '-', $k);
				$data .= " $atr=\"$v\" ";
			}
			else {
				$atr = 'data-'.str_replace('_', '-', $k);
				$data .= " $atr=\"false\" ";
			}
			
		}
		return '<div class="fb-like-box" '.$data.'></div>';
	}

} // class donation


//Feedburner_Widget Class
class FW_Tbfeedburner extends WP_Widget
{
	/** constructor */
	function __construct()
	{
		parent::__construct( /* Base ID */'tbfeedburner', /* Name */'Feedburner', array( 'description' => 'A Feedburner Form' ) );
	}

	/** @see WP_Widget::widget */
	function widget($args, $instance)
	{
		extract($args);
		$title = apply_filters( 'widget_title', $instance['title'] );
		echo $before_widget;
		if($title)
		echo $before_title . $title . $after_title;
	?>
		<div class="newsletter">
            <p><?php echo $instance['feedtext']; ?></p>
            <form action="http://feedburner.google.com/fb/a/mailverify" id="newletter_sub" method="post" target="popupwindow">
			<?php $message = __('Enter any Valid Email Address','wisdom_of_life');?>
            <ul>
                <li>
                    <input type="text" value="<?php echo $message;?>" onfocus="if(this.value == '<?php echo $message;?>') { this.value = ''; }" onblur="if(this.value == '') { this.value = '<?php echo $message;?>'; }" name="email" id="email_address" class="textfield" />
                    <input type="hidden" value="<?php echo $instance['feedlink']; ?>" name="uri" id="uri" />
                    <input type="hidden" name="loc" value="en_US" />
                </li>
                <li><input class="go backcolr" type="submit" name="S" value="Submit" /></li>
            </ul>	
            </form>
        </div>
	<?php
		echo $after_widget;
	}

	/** @see WP_Widget::update */
	function update($new_instance, $old_instance)
	{
		$instance = $old_instance;
		$instance['title'] = strip_tags($new_instance['title']);
		$instance['feedlink'] = strip_tags($new_instance['feedlink']);
		$instance['feedtext'] = strip_tags($new_instance['feedtext']);
		return $instance;
	}

	/** @see WP_Widget::form */
	function form($instance)
	{
		$title = (isset($instance['title'])) ? esc_attr($instance['title']) : '';
		$link = (isset($instance['feedlink'])) ? esc_attr($instance['feedlink']) : '';
		$text = (isset($instance['feedtext'])) ? esc_attr($instance['feedtext']) : '';
	?>
        <p>
            <label for="<?php echo $this->get_field_id('title'); ?>"><?php _e('Title:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo $title; ?>" />
            <label for="<?php echo $this->get_field_id('feedlink'); ?>"><?php _e('Feedburner Link:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('feedlink'); ?>" name="<?php echo $this->get_field_name('feedlink'); ?>" type="text" value="<?php echo $link; ?>" />
            <label for="<?php echo $this->get_field_id('feedtext'); ?>"><?php _e('Enter Text:','wisdom_of_life'); ?></label> 
            <textarea class="widefat" id="<?php echo $this->get_field_id('feedtext'); ?>" name="<?php echo $this->get_field_name('feedtext'); ?>" ><?php echo $text; ?></textarea>
        </p>
	<?php 
	}
} // class Feedburner_Widget

// Class FW_Tweets to fetch latest tweets from twitter ID
class FW_Blogtwitter extends WP_Widget
{
	/** constructor */
	function __construct()
	{
		parent::__construct( /* Base ID */'blogtwitter', /* Name */'Blog + Twitter tab', array( 'description' => 'Blog and Twitter tab' ) );
	}

	/** @see WP_Widget::widget */
	function widget($args, $instance)
	{
		$default = array('title'=>'','post_status'=>'','twitter_status'=>'','twitter_id'=>'themebazaar','post_title'=>'Posts','twitter_title'=>'Tweets');
		$instance = array_merge($default, (array) $instance);
		
		if($instance['post_status'] != 'on' && $instance['twitter_status'] != 'on') return; //Don't display box if both options are off
		extract( $args );
		$title = @apply_filters( 'widget_title', $instance['title'] );
		echo $before_widget;
		
		$instance['twitter_id'] = ($instance['twitter_id']) ? $instance['twitter_id'] : 'themebazaar'; ?>
		<div class="widgettabs">
            <!-- Tabs -->
            <div class="tab_menu_container backcolr">
                <ul id="tab_menu1">
                    <?php if($instance['post_status'] == 'on'): ?>
                        <li><a class="current" rel="blogswidget"><?php echo ($instance['post_title']) ? $instance['post_title'] : 'Blogs';?></a></li>
					<?php endif;?>
                    <?php if($instance['twitter_status'] == 'on'): ?>
                        <li><a class="" rel="tweetsec"><?php echo ($instance['twitter_title']) ? $instance['twitter_title'] : 'Tweets';?></a></li>
					<?php endif;?>
                </ul>
                <div class="clear"></div>
            </div>
            <div class="clear"></div>
            <!-- widget tabs -->
            <div class="blogtweets">
                <div class="tab_container_in">
                    <!-- Blog --> 
                    <?php if($instance['post_status'] == 'on'): ?>
                    <div id="blogswidget" class="tab_sidebar_list blogsc">					
                        <ul>
                            <?php 
							query_posts('posts_per_page='.$instance['post_limit']);
							while(have_posts()): the_post();?>
                                <li>
                                    <div class="thumb">
										<a href="<?php the_permalink(); ?>">
											<?php if(has_post_thumbnail()): echo the_post_thumbnail('small-icon');
											else:?> <img src="<?php get_template_directory_uri();?>/images/noimg.gif" title="noimage" />
                                            <?php endif; ?>
                                        </a>
                                    </div>
                                    <div class="desc">
                                        <a href="<?php echo get_permalink(); ?>"><?php echo character_limiter(get_the_title(), 50);?></a>
                                        <p class="date italic"><?php echo the_time('F j, Y'); ?>, <a href="<?php comments_link();?>" class="cmnts"><?php echo comments_number( '0 comments', '1 comment', '% comments' ); ?></a></p>
                                    </div>
                                </li>
                           <?php endwhile;?>
                           <?php wp_reset_query();?>
                        </ul>
                    </div> 
                    <?php endif;?>
                    <!-- Twitter -->
                    <?php if($instance['twitter_status'] == 'on'): ?>
					<script type='text/javascript'>
						jQuery(function($){
							$("#tweetsec").tweet({
								username: "<?php echo end(explode('/',$instance['twitter_id']));?>",
								avatar_size: 32,
								count: <?php echo $instance['tweets_num'];?>,
								template: "{user}{join} {text}{time}",
								loading_text: "loading tweets..."
							});
						});
					</script> 
                    <div id="tweetsec" class="tab_sidebar_list">
                        <?php /*
						<ul>
                            <?php $this->fetch_tweets($instance['twitter_id'],$instance['tweets_num']);?>
                        </ul> */?>
                    </div>
                    <?php endif;?>
                    <div class="clear"></div>
                </div>
            </div>
        </div>
	<?php	echo $after_widget;
	}

	/** @see WP_Widget::update */
	function update( $new_instance, $old_instance )
	{
		$instance = $old_instance;
		$instance['twitter_title'] = strip_tags($new_instance['twitter_title']);
		$instance['post_status'] = strip_tags($new_instance['post_status']);
		$instance['twitter_id'] = strip_tags($new_instance['twitter_id']);
		$instance['tweets_num'] = strip_tags($new_instance['tweets_num']);
		$instance['post_title'] = strip_tags($new_instance['post_title']);
		$instance['twitter_status'] = strip_tags($new_instance['twitter_status']);
		$instance['post_limit'] = strip_tags($new_instance['post_limit']);

		return $instance;
	}

	/** @see WP_Widget::form */
	function form( $instance )
	{
		if ( $instance )
		{
			$twitter_title = esc_attr( $instance[ 'twitter_title' ] );
			$post_status = (esc_attr( $instance[ 'post_status' ] ) == 'on') ? 'checked="checked"' : '';
			$twitter_id = esc_attr($instance['twitter_id']);
			$tweets_num = esc_attr($instance['tweets_num']);
			$post_title = esc_attr($instance['post_title']);
			$twitter_status = (esc_attr( $instance[ 'twitter_status' ] ) == 'on') ? 'checked="checked"' : '';
			$limit =  esc_attr($instance['post_limit']);
		}
		else
		{
			$twitter_title = __( 'Latest Tweets', 'text_domain' );
			$post_status = '';
			$twitter_id = 'wordpress';
			$tweets_num = 1;
			$post_title = __( 'Recent Posts', 'text_domain' );
			$twitter_status = '';
			$limit = 5;
		}

	?>
    
        <p><input type="checkbox"  id="<?php echo $this->get_field_id('post_status'); ?>" name="<?php echo $this->get_field_name('post_status'); ?>" <?php echo $post_status; ?> >&nbsp;<label for="post_status">Active/Inactive Recent Posts</label></p>
		<p>
            <label for="<?php echo $this->get_field_id('post_title'); ?>"><?php _e('Title:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('post_title'); ?>" name="<?php echo $this->get_field_name('post_title'); ?>" type="text" value="<?php echo $post_title; ?>" />
            
			<label for="widget-recent-posts-3-number">Number of posts to show:</label>
			<input type="text" size="3" value="<?php echo $limit; ?>" name="<?php echo $this->get_field_name('post_limit'); ?>" id="<?php echo $this->get_field_id('post_limit'); ?>">
		</p>

		<p><input type="checkbox" name="<?php echo $this->get_field_name('twitter_status'); ?>" id="<?php echo $this->get_field_id('twitter_status'); ?>" <?php echo $twitter_status; ?> >&nbsp;<label for="twitter_status">Active/Inactive Twitter</label></p>
		<p>
            <label for="<?php echo $this->get_field_id('twitter_title'); ?>"><?php _e('Title:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('twitter_title'); ?>" name="<?php echo $this->get_field_name('twitter_title'); ?>" type="text" value="<?php echo $twitter_title; ?>" />
            <label for="<?php echo $this->get_field_id('twitter_id'); ?>"><?php _e('Twitter ID:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('twitter_id'); ?>" name="<?php echo $this->get_field_name('twitter_id'); ?>" type="text" value="<?php echo $twitter_id; ?>" />
            <label for="<?php echo $this->get_field_id('tweets_num'); ?>"><?php _e('Number of Tweets:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('tweets_num'); ?>" name="<?php echo $this->get_field_name('tweets_num'); ?>" type="text" value="<?php echo $tweets_num; ?>" />
		</p>
	<?php 
	}

	//function fetching feed from twitter
	function fetch_tweets($url, $num = 1)
	{
		include_once(ABSPATH . WPINC . '/feed.php');
		$url = stristr($url, 'twitter.com') ? $url : 'http://www.twitter.com/'.$url;
		$rss = fetch_feed($url);
		if(is_wp_error($rss))
		{
			echo 'Link Error' ;
			return;
		}
		
		$rss->set_timeout(120);
		$maxitems = $rss->get_item_quantity($num);
		$rss_items = $rss->get_items(0, $maxitems);
		
		if($maxitems == 0) echo '<p>No items.</p>';
		else
		{
			$i = 1;
			foreach($rss_items as $item)
			{
				$title = explode(':', $item->get_title());
				echo '<li><div class="desc"><a href="'.$item->get_permalink().'" rel="nofollow" target="_blank" class="colr"> '.ucwords($title[0]).'</a> '.character_limiter($title[1], 80).' </div>
						<p>'.$item->get_date().'</p></li>';
				if($i == $num) break;
				$i++;
			}
		}
	}
}


/**
* Feedburner_Widget Class
*/
class FW_Contactdetail extends WP_Widget
{
	/** constructor */
	function __construct()
	{
		parent::__construct( /* Base ID */'contactdetail', /* Name */'Contact Detail', array( 'description' => 'Show contact detail widget' ) );
	}

	/** @see WP_Widget::widget */
	function widget($args, $instance)
	{
		$default = array('title'=>'Contact Us','company'=>'Theme Bazaar','address'=>'','phone'=>'','fax'=>'','email'=>'info@themebazaar.net');
		$instance = array_merge($default, (array) $instance);
		extract($args);
		$title = apply_filters( 'widget_title', $instance['title'] );
		echo $before_widget;
		if($title)
		echo $before_title . $title . $after_title;
	?>
        <p>
        	<?php if($instance['company']) echo $instance['company']."<br />";?>
        	<?php if($instance['address']) echo $instance['address']."<br />";?>
            <?php if($instance['phone']) printf( __('Tel - %s','wisdom_of_life'), $instance['phone']);?><br />
            <?php if($instance['fax']) printf( __('Fax - %s','wisdom_of_life'), $instance['fax']);?><br />
            <?php if($instance['email']) printf( __('Email - %s','wisdom_of_life'),$instance['email']);?><br />
        </p>
	<?php
		echo $after_widget;
	}

	/** @see WP_Widget::update */
	function update($new_instance, $old_instance)
	{
		$instance = $old_instance;
		$instance['title'] = strip_tags($new_instance['title']);
		$instance['company'] = strip_tags($new_instance['company']);
		$instance['address'] = strip_tags($new_instance['address'], '<br>');
		$instance['phone'] = strip_tags($new_instance['phone']);
		$instance['fax'] = strip_tags($new_instance['fax']);
		$instance['email'] = strip_tags($new_instance['email']);
		return $instance;
	}

	/** @see WP_Widget::form */
	function form($instance)
	{
		$title = isset($instance['title']) ? esc_attr($instance['title']) : '';
		$company = isset($instance['company']) ? esc_attr($instance['company']) : '';
		$address = isset($instance['address']) ? esc_attr($instance['address']) : '';
		$phone = isset($instance['phone']) ? esc_attr($instance['phone']) : '';
		$fax = isset($instance['fax']) ? esc_attr($instance['fax']) : '';
		$email = isset($instance['email']) ? esc_attr($instance['email']) : '';

	?>
        <p>
            <label for="<?php echo $this->get_field_id('title'); ?>"><?php _e('Title:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo $title; ?>" />
            <label for="<?php echo $this->get_field_id('company'); ?>"><?php _e('Company Name:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('company'); ?>" name="<?php echo $this->get_field_name('company'); ?>" type="text" value="<?php echo $company; ?>" />
            <label for="<?php echo $this->get_field_id('address'); ?>"><?php _e('Address:','wisdom_of_life'); ?></label> 
            <textarea class="widefat" id="<?php echo $this->get_field_id('address'); ?>" name="<?php echo $this->get_field_name('address'); ?>" ><?php echo $address; ?></textarea>
            <label for="<?php echo $this->get_field_id('phone'); ?>"><?php _e('Phone Number:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('phone'); ?>" name="<?php echo $this->get_field_name('phone'); ?>" type="text" value="<?php echo $phone; ?>" />
            <label for="<?php echo $this->get_field_id('fax'); ?>"><?php _e('Fax Number:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('fax'); ?>" name="<?php echo $this->get_field_name('fax'); ?>" type="text" value="<?php echo $fax; ?>" />
            <label for="<?php echo $this->get_field_id('email'); ?>"><?php _e('Email Address:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('email'); ?>" name="<?php echo $this->get_field_name('email'); ?>" type="text" value="<?php echo $email; ?>" />
        </p>
	<?php 
	}

} // class Feedburner_Widget

//Social_Widget Class
class FW_Tbsocial_network extends WP_Widget
{
	/** constructor */
	function __construct()
	{
		parent::__construct( /* Base ID */'tbsocial_network', /* Name */'Social Network', array( 'description' => 'Social Network' ) );
	}
	
	/** @see WP_Widget::widget */
	function widget($args, $instance)
	{
		extract($args);
		$title = apply_filters( 'widget_title', $instance['title'] );
		echo $before_widget;
		if($title)
		echo '<div class="getsocial">' . $before_title . $title . $after_title;
		$settings = get_option(THEME_PREFIX.'social_network_settings');

		if($settings && is_array($settings) && $settings['status'] == 'active')
		{
			echo '<ul>';
			foreach($settings['DYNAMIC'] as $setting)
			{
				$target = (isset($settings['target']) && $settings['target'] == '_self') ? '_self' : '_blank';
				echo '<li><a href="'.$setting['link'].'" title="'.$setting['title'].'" target="'.$target.'" rel="nofollow"><img src="'.$setting['image_url'].'" alt="'.$setting['title'].'" /><span>'.$setting['title'].'</span></a></li>';
			}
			echo '</ul>';
		}
		echo '</div>'.$after_widget;
	}
	
	/** @see WP_Widget::update */
	function update($new_instance, $old_instance)
	{
		$instance = $old_instance;
		$instance['title'] = strip_tags($new_instance['title']);
		return $instance;
	}
	
	/** @see WP_Widget::form */
	function form($instance)
	{
		if ($instance)
			$title = esc_attr($instance['title']);
		else
			$title = __('Social Network', 'social_networking');
		?>
		<p>
            <label for="<?php echo $this->get_field_id('title'); ?>"><?php _e('Title:','wisdom_of_life'); ?></label>
            <input class="widefat" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo $title; ?>" />
		</p>
	<?php
	}
}

//Class FW_Recent_posts with images
class FW_Tbrecent_Posts extends WP_Widget
{
	/** constructor */
	function __construct()
	{
		parent::__construct( /* Base ID */'tbrecent_posts', /* Name */'Wisdom Latest Posts', array( 'description' => 'Latest post with images' ) );
	}

	/** @see WP_Widget::widget */
	function widget($args, $instance)
	{
		extract( $args );
		$title = apply_filters( 'widget_title', $instance['title'] );
		echo $before_widget;
		if ( $title )
		echo $before_title . $title . $after_title;
		
?>
		<div class="recentposts">
            <div class="blogsc" id="blogswidget">					
                <ul>
                	<?php
					query_posts('posts_per_page='.$instance['post_limit']);
					while(have_posts()): the_post();?>
                        <li>
                            <div class="thumb">
                                <a href="<?php the_permalink(); ?>">
									<?php if(has_post_thumbnail()):	the_post_thumbnail('home-middle-list');
									else:?><img src="<?php get_template_directory_uri();?>/images/noimg.gif" align="noimage" title="noimage" />
                                    <?php endif; ?>
                                </a>
                            </div>
                            <div class="desc">
                                <a href="<?php the_permalink(); ?>"><?php the_title(); ?></a>
                                <p class="date italic"><?php echo the_time('F j, Y'); ?>, <a href="<?php comments_link();?>" class="cmnts"><?php echo comments_number( '0 comments', '1 comment', '% comments' ); ?></a></p>
                            </div>
                        </li>
                    <?php endwhile; ?>
                </ul>
            </div>
        </div>
	<?php	echo $after_widget;
	}

	/** @see WP_Widget::update */
	function update( $new_instance, $old_instance )
	{
		$instance = $old_instance;
		$instance['title'] = strip_tags($new_instance['title']);
		$instance['post_limit'] = strip_tags($new_instance['post_limit']);
		
		return $instance;
	}

	/** @see WP_Widget::form */
	function form( $instance )
	{
		if ( $instance )
		{
			$post_title = esc_attr($instance['title']);
			$limit =  esc_attr($instance['post_limit']);
		}
		else
		{
			$post_title = __( 'Recent Posts', 'text_domain' );
			$limit = 5;
		}
	?>
		<p>
            <label for="<?php echo $this->get_field_id('title'); ?>"><?php _e('Title:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo $post_title; ?>" />
            
			<label for="widget-recent-posts-3-number">Number of posts to show:</label>
			<input type="text" size="3" value="<?php echo $limit; ?>" name="<?php echo $this->get_field_name('post_limit'); ?>" id="<?php echo $this->get_field_id('post_limit'); ?>">
		</p>
	<?php 
	}
}

//Class FW_Recent_Activities of Events
class FW_Tbrecent_Activities extends WP_Widget
{

	/** constructor */
	function __construct()
	{
		parent::__construct( /* Base ID */'tbrecent_activities', /* Name */'Recent Events', array( 'description' => 'List of recent Events' ) );
	}

	/** @see WP_Widget::widget */
	function widget($args, $instance)
	{
		global $_reserved_categories;
		extract( $args );
		$title = apply_filters( 'widget_title', $instance['title'] );
		echo $before_widget;
		if ( $title )
		echo $before_title . $title . $after_title;
		$event_cat = ($_reserved_categories['events']) ? '&cat='.$_reserved_categories['events'] : '';
?>
    <div class="recentact">
        <ul>
			<?php 
            query_posts('posts_per_page='.$instance['post_limit'].$event_cat);
            while(have_posts()): the_post();?>
                <li>
                    <div class="topse">
                        <div class="calndr">
                        	<?php $time = get_post_meta(get_the_ID(), 'fw_event_time', true); ?>
                            <span class="month backcolr"><?php echo date('Y', $time); ?></span>
                            <span class="day colr bold"><?php echo date('d', $time); ?></span>
                        </div>
                        <a class="title" href="<?php the_permalink();?>"><?php the_title(); ?></a>
                    </div>
                    <p class="by"><?php printf( __('By %s','wisdom_of_life'), the_author());?></p>
                </li>
            <?php endwhile; ?>
        </ul>
    </div>
	<?php	echo $after_widget;
	}

	/** @see WP_Widget::update */
	function update( $new_instance, $old_instance )
	{
		$instance = $old_instance;
		$instance['title'] = strip_tags($new_instance['title']);
		$instance['post_limit'] = strip_tags($new_instance['post_limit']);
		
		return $instance;
	}

	/** @see WP_Widget::form */
	function form( $instance )
	{
		if ( $instance )
		{
			$post_title = esc_attr($instance['title']);
			$limit =  esc_attr($instance['post_limit']);
		}
		else
		{
			$post_title = __( 'Recent Activities', 'text_domain' );
			$limit = 5;
		}
	?>
		<p>
            <label for="<?php echo $this->get_field_id('title'); ?>"><?php _e('Title:','wisdom_of_life'); ?></label> 
            <input class="widefat" id="<?php echo $this->get_field_id('title'); ?>" name="<?php echo $this->get_field_name('title'); ?>" type="text" value="<?php echo $post_title; ?>" />
            
			<label for="widget-recent-posts-3-number">Number of posts to show:</label>
			<input type="text" size="3" value="<?php echo $limit; ?>" name="<?php echo $this->get_field_name('post_limit'); ?>" id="<?php echo $this->get_field_id('post_limit'); ?>">
		</p>
	<?php 
	}
}

//Register social networking widget
add_action('widgets_init', create_function('', 'register_widget("FW_Tbsocial_network");' ) );
//Register Blog + Twitter tab widget
add_action('widgets_init', create_function('', 'register_widget("FW_Blogtwitter");' ) );
//register FW_Donate class
add_action( 'widgets_init', create_function( '', 'register_widget("FW_Donate");' ) );
//Register counter
add_action('widgets_init', create_function('', 'register_widget("FW_Eventcounter");' ) );
// register Feedburner widget
add_action( 'widgets_init', create_function( '', 'register_widget("FW_Tbfeedburner");' ) );
//register Contact Detail class
add_action( 'widgets_init', create_function( '', 'register_widget("FW_Contactdetail");' ) );
//register FW_Recent_Posts class
add_action( 'widgets_init', create_function( '', 'register_widget("FW_Tbrecent_Posts");' ) );
//register FW_Recent_Activities class
add_action( 'widgets_init', create_function( '', 'register_widget("FW_Tbrecent_Activities");' ) );
//register FW_Recent_Activities class
add_action( 'widgets_init', create_function( '', 'register_widget("FW_Fbplugin");' ) );

//AUTO REGISTER WIDGETS ON FIRST INSTALLATION
function fw_default_widgets($first_time = false)
{
	global $wp_widget_factory;
	global $wp_registered_sidebars;
	
	$sidebars_widgets = wp_get_sidebars_widgets(false);

	//DEFAULT THEME BAZAAR WIDGETS SETTINGS
	ob_start();
	include_once(get_template_directory().'/includes/backup/widget_data.php');
	$default_widgets = unserialize(base64_decode(ob_get_contents()));
	ob_end_clean();
	
	if(empty($default_widgets)) return;
	$registered_sidebars = array_keys($wp_registered_sidebars);
	$existing_sidebars = array_keys($sidebars_widgets);
	//$registered_sidebars = array_diff($registered_sidebars, array('wp_inactive_widgets'));
	$registered_sidebars = array_diff($registered_sidebars, (array) $existing_sidebars);

	foreach($registered_sidebars as $sidebar)
	{
		$sidebars_widgets[$sidebar] = (array) $sidebars_widgets[$sidebar];
	}
	
	$sidebars_widgets['wp_inactive_widgets'] = (array) $sidebars_widgets['wp_inactive_widgets'];

	foreach($default_widgets as $panel => $widgets)
	{
		$widgets = fw_replace_pseudo($widgets);

		if ( empty($sidebars_widgets[$panel]) ) $sidebars_widgets[$panel] = (array) $sidebars_widgets[$panel];
		elseif($first_time) $sidebars_widgets[$panel] = array();
		
		foreach($widgets as $k=>$widget)
		{	

			$settings = array();
			if(is_array($widget))
			{
				$settings = $widget;
				$widget = $k;
			}

			if ( !is_a($wp_widget_factory->widgets[$widget], 'WP_Widget') )
				continue;

			$widget_ids = array_keys((array) $wp_widget_factory->widgets[$widget]->get_settings());
			$widget_id_base = $wp_widget_factory->widgets[$widget]->id_base;

			$new_widget_number = $widget_ids ? max($widget_ids) + 1 : 1;
			
			//create a widget on the fly
			$new_settings = $wp_widget_factory->widgets[$widget]->get_settings();
			$new_settings[$new_widget_number] = ( ! empty($settings)) ? $settings : array();

			$wp_widget_factory->widgets[$widget]->_set($new_widget_number);
			$wp_widget_factory->widgets[$widget]->_register_one($new_widget_number);
			
			$widget_id = $widget_id_base.'-'.$new_widget_number;
			$sidebars_widgets[$panel][] = $widget_id;

			$wp_widget_factory->widgets[$widget]->save_settings($new_settings);
		}
	}

	wp_set_sidebars_widgets($sidebars_widgets);
}

//Hook to register widgets on first time installation
if(is_admin() && isset($_GET['page']) && $_GET['page'] == 'fw_theme_options' && isset($_GET['firstlook']))
{
	add_action( 'widgets_init', create_function( '', 'fw_default_widgets(true);' ), 12 );
}