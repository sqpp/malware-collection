<?php

//Evitar cache, para trabajar en tiempo real
header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
header("Expires: Sat, 1 Jul 2000 05:00:00 GMT"); // Fecha en el pasado
header("Access-Control-Allow-Origin: *");


//LLamado a las funciones
header("Content-type:application/json");
require_once ('../MySQL/functions.php');
$db = get_conection();
//Recibira el siguiente parametro

## Read value
$ROW          = $_POST['start']; //NÚMERO DE PAGINACIÓN
$DRAW         = $_POST['draw'];
$ROWSPERPAGE  = $_POST['length']; //CANTIDAD POR PÁGINA
$SEARCH_VALUE = $_POST['search']['value']; //VALOR BUSCADO

//VALIDAMOS LA CAPTURA DE PARAMETROS CORRECTOS
if( isset($_POST['TABLE']) && isset($_POST['FIELDS']) && isset($_POST['FILTER']) ){

  $TABLE    = $_POST['TABLE'];
  $FIELDS   = json_decode ($_POST['FIELDS'], true);
  $FILTERS  = json_decode ($_POST['FILTER'], true);
 
}else{ exit; }


//CONTAR CANTIDAD TOTAL DE REGISTROS SIN FILTRO
$COUNT_ALL_ROWS = count($db->get($TABLE, null, ['ID']));


//PREPARAR CONDICIONES DE BUSQUEDA

$C=0;
foreach ($FILTERS as $FILTER) {
  if($C==0) $db  -> where ($FILTER[0], $FILTER[1], $FILTER[2]);  
  else      $db  -> orWhere ($FILTER[0], $FILTER[1], $FILTER[2]); 
  $C++;
}  


//CONSULTA PÁGINADA
$db->pageLimit = $ROWSPERPAGE;
                $db->orderBy("ID","DESC");//Las ultimas primero
$DATAFILTERED = $db->withTotalCount()->get($TABLE, Array($ROW, $ROWSPERPAGE), $FIELDS);
//$DATAFILTERED = $db->arraybuilder()->paginate($TABLE, $ROW);


//CANTIDAD CON FILTRO SIN PAGINACIÓN
$COUNT_FILTERED_ROWS = count($DATAFILTERED);


//RESPUESTA 
$response = array(
  "draw" => intval($DRAW),
  "iTotalRecords" => intval($COUNT_FILTERED_ROWS),
  "iTotalDisplayRecords" => intval($COUNT_ALL_ROWS),
  "aaData" => $DATAFILTERED
);
//MOSTRAR
echo json_encode($response);

 ?>
