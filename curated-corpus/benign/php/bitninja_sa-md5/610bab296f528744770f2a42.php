<?php

namespace Drupal\blueray\Plugin\Block;
use \Drupal\node\Entity\Node;

use Drupal\Core\Block\BlockBase;

/**
 * Provides a 'Hello' Block.
 *
 * @Block(
 *   id = "zoom_block",
 *   admin_label = @Translation("zoom Block"),
 *   category = @Translation("zoom Block"),
 * )
 */
class zoomBlock extends BlockBase {

  /**
   * {@inheritdoc}
   */
  public function build() {
    \Drupal::service('page_cache_kill_switch')->trigger();
    $uid = \Drupal::currentUser()->id();
    if($uid){

   
    $nids_res = \Drupal::entityQuery('node')
    ->condition('type','student_reservations')
    ->condition('status', 1)
    ->condition('uid', $uid)
    ->execute();
    if(!empty($nids_res)) {         
    $nodes_res = Node::loadMultiple($nids_res);
    // print('<pre>');
    //   print_r( $nodes_res);
    //   die; 
    $nids=array();
    foreach ($nodes_res  as $key => $value) {
      if(!empty($value->get('field_student_leacture_')->getValue())){
          $leacturse=$value->get('field_student_leacture_')->getValue();
          foreach ($leacturse  as $keyN => $valueN) {
             $nids[]=$valueN['target_id'];
          }
      }
     
    }


     $nids_zoom = \Drupal::entityQuery('node')
     ->condition('type', 'zoom_class')
     ->condition('status', 1)
     ->condition('field_target_course',$nids,'IN')
     ->execute();
     $nodes_zoom = Node::loadMultiple($nids_zoom);
     $data=array();

     foreach ($nodes_zoom  as $key => $value1) {
        $from=$value1->get('field_open_from')->getValue()[0]['value'];
        $to=$value1->get('field_close_on')->getValue()[0]['value'];
        if(time()>=strtotime($from) && time()<=strtotime($to) ){
          $data[] = array(
            'title' => $value1->get('title')->getValue()[0]['value'],
            'open' => date('Y-m-d h:i:s a',strtotime('+2 hours',strtotime($value1->get('field_open_from')->getValue()[0]['value']))),
            'close' => date('Y-m-d h:i:s a',strtotime('+2 hours',strtotime($value1->get('field_close_on')->getValue()[0]['value']))),
            'link' => $value1->get('field_zoom_invite_link')->getValue()[0]['value'],
          );
        }
      }
     
    }

  }
     return [
      '#theme' => 'zoom',
      '#data' => $data,
    ];
  }
  public function getCacheMaxAge() {
    return 0;
}

}