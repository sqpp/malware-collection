<?php
// Preventing to direct access
defined('ABSPATH') or die('Direct access not acceptable!');

class ABRAC_SellAjaxCall
{

	public function __construct() {
        add_action("wp_ajax_abrac_sell_conversion_call", array(
            $this,
            "abrac_sell_conversion_call"
        ));
        add_action("wp_ajax_nopriv_abrac_sell_conversion_call", array(
            $this,
            "abrac_sell_conversion_call"
        ));

		add_action("wp_ajax_abrac_sell_listing_call", array(
            $this,
            "abrac_sell_listing_call"
        ));
        add_action("wp_ajax_nopriv_abrac_sell_listing_call", array(
            $this,
            "abrac_sell_listing_call"
        ));        
	}

	public function abrac_sell_conversion_call() {
		if(wp_doing_ajax()) {
			foreach ($_REQUEST as $key => $value) {
				$$key = $value;
			}
	        
	        /*moonpay handling start here*/
	        if(ABRAC_MOONPAY_ENABLE) {
	        	// Do Nothing...
	        }
	        /*moonpay handling end here*/
        	/*simplex handling start here*/
        	if(ABRAC_SIMPLEX_ENABLE){
        		$response = $this->get_simplex_sell_quote($cryptocurrencyCodeValue, $cryptoCurrencyAmountValue, $currencyCodeValue);
	        }
	        /*simplex handling end here*/

	        /*Trasak handling start here*/
	        if(ABRAC_TRANSAK_ENABLE){
	        	// Do Nothing...
	        }
			/*Trasak handling end here*/

        	/*Banxa handling start here*/
        	if(ABRAC_BANXA_ENABLE){
	        	// Do Nothing...
	        }
			/*Banxa handling stop here*/
			wp_send_json($response);
			wp_die();
		}
	}

	public function abrac_sell_listing_call() {
		if(wp_doing_ajax()) {
	        $timestamp              = time();
	        $externalCustomerId     = $timestamp . '.' . rand();
	        $externalTransactionId  = 'eti_' . $timestamp . '_aggregator';

	        $currencyAmountValue        = $_REQUEST['currencyAmountValue'];
	        $currencyCodeValue          = $_REQUEST['currencyCodeValue'];
	        $cryptocurrencyCodeValue    = $_REQUEST['cryptocurrencyCodeValue'];
	        $cryptocurrencyAmountValue  = $_REQUEST['cryptocurrencyAmountValue'];
	        $is_delete_transient        = $_REQUEST['is_delete_transient'];
	        $provider                   = $_REQUEST['provider'];
	        $referer_url 				= $_REQUEST['listing_page_base_url'];
	        if($provider == "simplex" && ABRAC_SIMPLEX_ENABLE) {
	            require_once ABRAC_PLUGIN_PATH . '/public/providers/sell/simplex.php';
	            $html = str_replace('SIMPLEX_OFF_PRICE', 'off-price', $simplex_html);
	        }
            $result['html'] = $html;
            wp_send_json($result);
            wp_die();
		}
	}

	private function get_simplex_sell_quote($cryptocurrencyCodeValue, $cryptoCurrencyAmountValue, $currencyCodeValue) {
		$time = time();
		$data = [
			"base_currency" => strtoupper($cryptocurrencyCodeValue),
			"base_amount" => ($cryptoCurrencyAmountValue*1000000),
			"quote_currency" => strtoupper($currencyCodeValue),
			"pp_payment_method" => "simplex_account",
			"account_id" => time(). '.' .rand()
		];
		$headers = [
			"Authorization" => "ApiKey ".ABRAC_SIMPLEX_SELL_API_KEY
		];
		$response = wp_remote_get(ABRAC_SIMPLEX_SELL_QUOTE_API_URL, [
			'headers' => $headers,
			'body' 	  => $data
		]);
		if($response['response']['code'] == 200) {
			$quote = json_decode($response['body'], true);
			$currencyAmountValue = ($cryptoCurrencyAmountValue*$quote['rate']);
			$currencyAmountValue = round($currencyAmountValue, 2);
			$quote['rate'] = round($quote['rate'], 2);
			$quote['quote_rate_in_usd'] = round($quote['quote_rate_in_usd'], 2);
			$quote['currencyAmountValue'] = $currencyAmountValue;
			$response = [
				"success" => true,
				"integration_type" => "simplex",
				"quote" => $quote,
				"account_id" => $data['account_id']
			];
		} else {
			$body = json_decode($response['body'], true);
			$response = [
				"success" => false,
				"integration_type" => "simplex",
				"error" => $body["_error"]["code"] == "amounts_too_small" ? "Amount is too small" : $response['response']['message']
			];
		}
		return $response;
	}
}

$abrac_sell_ajax_call = new ABRAC_SellAjaxCall;