<?php

function printMainTCategories ($parent = "")
{
	global $db, $sids, $sqltblpre,$host_name;
	$output="<table cellSpacing=\"0\" cellPadding=\"4\" width=\"100%\" bgColor=\"#ffffff\" border=\"0\">\n";
	$output.="<tr><td  class=\"af3_title\">\n";
	$output.="		View by Category:\n";
	$output.="</td></tr></table><br>\n";
	$output.="\n<table cellSpacing=\"0\" cellPadding=\"2\" width=\"95%\" align=\"center\" border=\"0\">\n<tr>";
	$query = "SELECT rubrik, titel FROM ".$sqltblpre."faqrubrik WHERE LENGTH(rubrik) = '".(strlen($parent)+3)."' AND LOCATE('$parent', rubrik)=1  ORDER BY rubrik";
 
	$result = $db->query($query);
	$step=0;
	if ($db->num_rows($result) > 0) {
		while (list($prubrik, $titel) = $db->fetch_row($result)) {
			$res = $db->query("SELECT id FROM ".$sqltblpre."faqdata WHERE  LOCATE('$prubrik', rubrik)=1 AND ".$sqltblpre."faqdata.active='yes'");
			$numq=$db->num_rows($res);
			$output .= "<td style=\"padding-left:10px; padding-right:10px;\" width=\"33%\"><a class=\"af3_links\" href=\"".$host_name."?".$sids."action=category&amp;cat_id=".$prubrik."\">".stripslashes($titel)."</a> (".$numq.")</td>";
			if ($step == 2) $output .= "</tr><tr>";
			$step++;
			if ($step == 3) $step = 0;
			}
		if ($step==0) {$output=substr($output,0,strlen($output)-4);}
		 else{
		     for ($i=1;$i<=(3-$step);$i++) $output .= "<td width=\"33%\">&nbsp;</td>";
			 $output .= "</tr>\n";}
		$output.="</table>";
		}
	else {
		$output .= "\tNo category found<br />";
		}
	return $output;
}

function printLineCategories ($rubrik = "")
{
	global $db, $sids, $sqltblpre;
	$LineCategories="<a class=\"af3_nov_links\" href=\"".$_SERVER["PHP_SELF"]."?".$sids."\">Poetry Main Page</a>";
    for ($s = 3; $s <= strlen($rubrik); $s += 3) {
	    $query = "SELECT rubrik, titel FROM ".$sqltblpre."faqrubrik WHERE ";
        $subrubrik = substr($rubrik, 0, $s);
        $query .= "  (LEFT(rubrik, ".strlen($subrubrik).") = '".$subrubrik."' AND LENGTH(rubrik)=".strlen($subrubrik).")";
		$result = $db->query($query);
		list($prubrik, $titel) = $db->fetch_row($result);
		$LineCategories.="<a class=\"af3_nov_links\" href=\"".$_SERVER["PHP_SELF"]."?".$sids."action=category&amp;cat_id=".$prubrik."\">&nbsp;&gt;&nbsp;".stripslashes($titel)."</a>";
        }
	
	return $LineCategories;
}
/*
 * Funktion für Umwandlung der Artikelnamen | @@ Thorsten, 2002-08-28
 * Last Update: @@ Thorsten, 2003-03-10
 */
function getThema($id)
{
	global $db, $sqltblpre, $no_cats;
	$query = "SELECT ".$sqltblpre."faqdata.thema FROM ".$sqltblpre."faqdata WHERE id = '".$id."'";
	$result = $db->query($query);
	if ($db->num_rows($result) > 0) {
		while ($row = $db->fetch_object($result)) {
			$output = $row->thema;
			}
		}
	else {
		$output = $no_cats;
		}
	return $output;
}

/*
 * Funktion für die Datumsumwandlung nach ISO 8601 | @@ Thorsten, 2001-04-30
 * Last Update: @@ Thorsten, 2003-10-26
 */
function makeDate($date)
{
	return substr($date,0,4)."-".substr($date,4,2)."-".substr($date,6,2)." ".substr($date,8,2).":".substr($date,10,2);
}
function makeClearDate($date)
{
	return substr($date,0,4)."-".substr($date,4,2)."-".substr($date,6,2);
}
function makeClearTime($date)
{
	return substr($date,8,2).":".substr($date,10,2).":".substr($date,12,2);
}
/*
 * Funktion für die Ausgabe der Anzahl der Artikel in der FAQ | @@ Thorsten, 2002-08-23
 * Last Update: @@ Thorsten, 2003-10-26
 */
function generateNumberOfArticles()
{
	global $db,  $sqltblpre;
	$num = $db->num_rows($db->query("SELECT id FROM ".$sqltblpre."faqdata WHERE active = 'yes'"));
	if ($num > 0) {
		return "<b>".$num."</b>";
	    }
    else {
        return "<b>0</b>";
		}
}


function printThemes($category,$id)
{
	global $db, $sids, $sqltblpre;
	
	$output = "";
	
	
	// get number of entries
	$numResult = $db->query("SELECT id FROM ".$sqltblpre."faqdata WHERE active = 'yes' AND rubrik = '".$category."' AND id != '".$id."'");
	$num = $db->num_rows($numResult);
	
//	removed
//	$result = $db->query("SELECT ".$sqltblpre."faqdata.id,  ".$sqltblpre."faqdata.thema, ".$sqltblpre."faqdata.rubrik FROM ".$sqltblpre."faqdata  WHERE ".$sqltblpre."faqdata.active = 'yes' AND ".$sqltblpre."faqdata.rubrik = '".$category."' AND ".$sqltblpre."faqdata.id != '".$id."' ORDER BY ".$sqltblpre."faqdata.datum desc");
//

	$result = $db->query("SELECT ".$sqltblpre."faqdata.id,  ".$sqltblpre."faqdata.thema, ".$sqltblpre."faqdata.rubrik FROM ".$sqltblpre."faqdata  WHERE ".$sqltblpre."faqdata.active = 'yes' AND ".$sqltblpre."faqdata.rubrik = '".$category."' ORDER BY ".$sqltblpre."faqdata.datum desc");

	$num = $db->num_rows($result);
	

	if ($num > 0) {
		
		$output .= "<ul type=\"square\">\n";
        while ($row = $db->fetch_object($result)) {
				
	        $output .= "<li><a class=\"af3_links\" href=\"".$_SERVER["PHP_SELF"]."?".$sids."action=article&amp;cat_id=".$row->rubrik."&amp;id=".$row->id."\">".stripslashes($row->thema)."</a> </li>";
		
// added
		if ($row->id == $id)
		{
			$output .= "<font face = 'arial' color='red'>*</font>";
			
		}
//
		
            }
        $output .= "</ul>\n";






        }
    else {
		$output = "No related questions";
		}
    
   
	return $output;
}

function printArticles($rubrik)
{
	global $db,$show_views,$show_ratings, $sids,  $sqltblpre;
	
	$result = $db->query("SELECT DISTINCT ".$sqltblpre."faqdata.id, ".$sqltblpre."faqdata.thema, ".$sqltblpre."faqdata.rubrik, ".$sqltblpre."faqdata.datum, ".$sqltblpre."faqdata.content, ".$sqltblpre."faqvisits.visits FROM ".$sqltblpre."faqvisits, ".$sqltblpre."faqdata WHERE ".$sqltblpre."faqdata.id = ".$sqltblpre."faqvisits.id  AND ".$sqltblpre."faqdata.active = 'yes' AND ".$sqltblpre."faqdata.rubrik = '".$rubrik."' ORDER BY ".$sqltblpre."faqdata.datum DESC");
	list($titel) = $db->fetch_row($db->query("SELECT titel FROM ".$sqltblpre."faqrubrik WHERE rubrik='".$rubrik."'"));
	$output = "<table cellSpacing=\"0\" cellPadding=\"4\" width=\"100%\"  border=\"0\" >\n";
	$output.= "<tr><td class=\"af3_title\" >";
	$output.= "Browse <strong>".$titel."</strong> Section";
	$output.= "</td></tr>\n";
	$output.= "<tr><td >";
	$output.= "There are ".$db->num_rows($result)." Poems found in this category:";
	$output.= "</td></tr></table>\n";

	if ($db->num_rows($result) > 0) {
		$i = 1;
		while ($row = $db->fetch_object($result)) {
		    $res = $db->query("SELECT ( ".$sqltblpre."faqvoting.vote / ".$sqltblpre."faqvoting.user ) AS num, ".$sqltblpre."faqvoting.user FROM ".$sqltblpre."faqvoting WHERE artikel='".$row->id."'");
	        list($num,$user)= $db->fetch_row($res);
			$output .= "<table align=\"center\" borderColor=\"#ffffff\" cellSpacing=\"0\" cellPadding=\"4\" width=\"95%\" bgColor=\"#ffffff\" border=\"0\">";
			$output .= "<tr><td align=\"left\" borderColor=\"#cccccc\" >";
			$output .= "<a class=\"af3_links\" href=\"".$_SERVER["PHP_SELF"]."?".$sids."action=article&amp;cat_id=".$row->rubrik."&amp;id=".$row->id."&amp;lang=".$row->lang."\">".stripslashes($row->thema)."</a>\n<br>";
	//**		$output .= makeShorterText(strip_tags($row->content), 30)."...<br>"; **//
			
			$output .= "<table cellSpacing=\"0\" cellPadding=\"0\" width=\"325\" border=\"0\" >\n";
			$output .= "<tr><td width=\"65\">";
			
			/* output ratings for each article */
			$rate= (int)(($num - 1) * 25/20);
			if ($show_ratings) {
			if ($rate>0){
			$output .= "<font  color=\"#FFCC33\" size=\"2\">";
			      for($j=1;$j<=5;$j++) {
				  $output .= "*";
				     if ($j>=$rate) $output .= "</font><font color=\"#999999\"  size=\"2\">";
				   }
		    $output .= "</font>";   
			} else {
			  $output .= "<font size=\"1\">Not Rated</font>";}
			}
			$output .="</td>\n";
			if ($show_views) $views=" Views: ".$row->visits;
			$output .= "<td style=\"color:#999999;font-size:10px;\" width=\"135\"> Last Update: ".makeClearDate($row->datum)."</td>\n";
			$output .= "<td style=\"color:#999999;font-size:10px;\" width=\"125\">".$views."</td>\n";
			$output .= "</tr></table>\n";
			$output .= "</td></tr></table>\n";
								
			
			
		
			$i++;
			}
		}
	else {
		$output.= "<p>No entries available.</p>";
		}
	return $output;
}


/*
 * Funktion für die Überprüfung von übergebenen Variablen | @@ Thorsten, 2003-01-30
 * Last Update: @@ Thorsten, 2003-01-30
 */
function checkIntVar($myInt)
{
	if (preg_match ("/^[0-9-]+$/", $myInt)) {
    	return TRUE;
		}
	else {
    	return FALSE;
		}
}

/*
 * Check, ob eine weitere Sprache eines Artikels vorhanden ist | @@ Thorsten, 2003-03-17
 * Last Update: @@ Thorsten, 2003-03-17
 */
function check4Language($id)
{
	global $db, $sqltblpre;
	$result = $db->query("SELECT lang FROM ".$sqltblpre."faqdata WHERE id = '".$id."'");
	if ($db->num_rows($result) > 0) {
		while ($row = $db->fetch_object($result)) {
			$output[] = $row->lang;
			}
		}
	return $output;
}

/*
 * Gibt "selected zurück", wenn übergebene Variable mit der Sprache des Browsers übereinstimmt | @@ Thorsten, 2003-03-21
 * Last Update: @@ Thorsten, 2003-03-24
 */
function acceptLanguage($articleLang, $lang)
{
	if ($articleLang == $lang) {
		if ($lang == trim(strtolower(substr($_SERVER["HTTP_ACCEPT_LANGUAGE"], 0, 2)))) {
			print " selected=\"selected\"";
			}
		}
}

/*
 * Funktion fuer Umwandlung der <br> in \n | @@ Thorsten, 2001-07-01
 * copyright Johannes Frömter von http://www.koehntopp.de/php
 * Last Update: @@ Thorsten - 2002-09-27
 */
function br2nl($str)
{
	return preg_replace("=<br(>|([\s/][^>]*)>)\r?\n?=i", "\n", $str);
}

/*
 * Funktion für Umwandlung der E-Mailadressen (Spam!) | @@ Thorsten, 2003-04-17
 * Last Update: @@ Thorsten, 2003-04-17
 */
function safeEmail($email)
{
	return str_replace(array('@', '.'), array(' at ', ' dot '), $email);
}

/*
 * Funktion für den Syntaxcheck von E-Mails | @@ Thorsten, 2004-01-19
 * Last Update: @@ Thorsten, 2004-01-19
 */
function checkEmail($sender)
{
    $pattern =  "#^[-!\#$%&\"*+\\./\d=?A-Z^_|'a-z{|}~]+".
                "@".
                "[-!\#$%&\"*+\\./\d=?A-Z^_|'a-z{|}~]+\.".
                "[-!\#$%&\"*+\\./\d=?A-Z^_|'a-z{|}~]+$#";
    if (isset($sender) && preg_match($pattern, $sender)) {
        return TRUE;
        }
    else {
        return FALSE;
        }
}



/*
 * Funktion für Reload-Sperre beim Voting | @@ Thorsten, 2003-05-15
 * Last Update: @@ Thorsten, 2003-05-15
 */
function votingCheck($id, $ip)
{
	global $db, $sqltblpre;
	$timeNow = (time() - 300);
	if ($db->num_rows($db->query("SELECT id FROM ".$sqltblpre."faqvoting WHERE artikel = '".$id."' AND (ip = '".$ip."' AND datum > '".$timeNow."')"))) {
		return FALSE;
		}
	return TRUE;
}



/*
 * Funktion für IP-Bann | @@ Thorsten, 2003-06-06
 * Last Update: @@ Thorsten, 2003-06-06
 */
function IPCheck($ip)
{
	global $bannedIP;
	$arrBannedIPs = explode(" ", $bannedIP);
	foreach ($arrBannedIPs as $oneIP) {
    	if ($oneIP == $ip) {
			return FALSE;
			}
		}
	return TRUE;
}




/******************************************************************************
 * Funktionen für das Usertracking
 ******************************************************************************/

/*
 * Trackt den User und zeichnet die Bewegungen auf | @@ Bastian, 2001-02-18
 * Last Update: @@ Thorsten, 2003-11-18
 */
function Tracking($action, $id)
{
	global $db, $tracking, $sid, $sqltblpre;
	if ($tracking) {
		if (isset($_REQUEST["sid"])) {
			$sid = $_REQUEST["sid"];
			}
		if ($action == "oldSession") {
			$sid = "";
			}
		if (strlen($sid) < 2) {
			$db->query("INSERT INTO ".$sqltblpre."faqsessions (IP,TIME) VALUES ('".$_SERVER["REMOTE_ADDR"]."', '".time()."')");
			list($sid) = $db->fetch_row($db->query("SELECT sid FROM ".$sqltblpre."faqsessions ORDER BY sid DESC LIMIT 0,1"));
			}
		$fp = fopen("./data/tracking".date("dmY"), "a");
		$flanz = "0";
		while (!flock($fp, LOCK_EX) && $flanz < 6) {
			sleep(1);
			$flanz++;
			}
		if ($flanz >= 6) {
			fclose($fp);
			}
		elseif (!empty($_SERVER["HTTP_REFERER"])) {
            if (!isset($_SERVER["QUERY_STRING"])) {
                $_SERVER["QUERY_STRING"] = "";
                }
			fputs($fp, $sid.";".str_replace(";", ",",$action).";".$id.";".$_SERVER["REMOTE_ADDR"].";".str_replace(";", ",", $_SERVER["QUERY_STRING"]).";".str_replace(";", ",", $_SERVER["HTTP_REFERER"]).";".str_replace(";", ",", $_SERVER["HTTP_USER_AGENT"]).";".time().";\n");
			flock($fp, LOCK_UN);
			fclose($fp);
			}
		}
}

/*
 * Testet ob die SID zu der IP passt |  @@ Bastian, 2001-04-07
 * Last Update: @@ Thorsten, 2003-03-06
 */
function CheckSID($sid, $ip)
{
	global $db, $sqltblpre;
	if ($db->num_rows($db->query("SELECT sid FROM ".$sqltblpre."faqsessions WHERE sid='".$sid."' AND IP='".$ip."' AND time > ".(time()-86400))) < 1) {
		Tracking("oldSession",$sid);
		}
}

/*
 * Funktion für Anzeige von Usern, die online sind | @@ Thorsten, 2001-05-02
 * Last Update: @@ Thorsten, 2004-01-21
 */
function userOnline()
{
	global $db, $sqltblpre, $tracking;
	if ($tracking) {
		$timeNow = (time() - 300);
		$result = $db->query("SELECT count(sid) FROM ".$sqltblpre."faqsessions WHERE time > '".$timeNow."' GROUP BY ip");
		if (isset($result)) {
			return $db->num_rows($result)." User online";
	        }
		}
}



/******************************************************************************
 * Funktionen für die Startseite
 ******************************************************************************/

/*
 * Zeigt die Top Ten an - die zehn am häufigsten besuchten Artikel der FAQ | @@ Thorsten - 2002-05-07
 * Last Update: @@ Thorsten, 2003-03-17
 */
function generateTopXX($XX)
{
	global $db, $sids,$host_name, $show_views,$show_ratings, $sqltblpre;
	
	$result = $db->query("SELECT DISTINCT ".$sqltblpre."faqdata.id, ".$sqltblpre."faqdata.thema, ".$sqltblpre."faqdata.rubrik, ".$sqltblpre."faqdata.datum, ".$sqltblpre."faqdata.content, ".$sqltblpre."faqvisits.visits FROM ".$sqltblpre."faqvisits, ".$sqltblpre."faqdata WHERE ".$sqltblpre."faqdata.id = ".$sqltblpre."faqvisits.id  AND ".$sqltblpre."faqdata.active = 'yes' ORDER BY ".$sqltblpre."faqvisits.visits DESC LIMIT 0,".$XX);
	$output = "<table cellSpacing=\"0\" cellPadding=\"4\" width=\"95%\" bgColor=\"#ffffff\" border=\"0\" >\n";
	$output.= "<tr><td class=\"af3_title\" >";
	$output.= "Top ".$XX." Poems\n";
	$output.= "</td></tr></table>\n";
	$output.= "";
	if ($db->num_rows($result) > 0) {
		$i = 1;
		while ($row = $db->fetch_object($result)) {
		    $res = $db->query("SELECT ( ".$sqltblpre."faqvoting.vote / ".$sqltblpre."faqvoting.user ) AS num, ".$sqltblpre."faqvoting.user FROM ".$sqltblpre."faqvoting WHERE artikel='".$row->id."'");
	        list($num,$user)= $db->fetch_row($res);
			$output .= "<table align=\"center\" borderColor=\"#ffffff\" cellSpacing=\"0\" cellPadding=\"4\" width=\"95%\" bgColor=\"#ffffff\" border=\"0\">";
			$output .= "<tr><td align=\"left\" borderColor=\"#cccccc\" >";
			$output .= "<a class=\"af3_links\" href=\"".$host_name."?".$sids."action=article&amp;cat_id=".$row->rubrik."&amp;id=".$row->id."&amp;lang=".$row->lang."\">".stripslashes($row->thema)."</a>\n<br>";
//**			$output .= makeShorterText(strip_tags($row->content), 30)."...<br>"; **//
			
			$output .= "<table cellSpacing=\"0\" cellPadding=\"0\" width=\"325\" border=\"0\" >\n";
			$output .= "<tr><td width=\"65\">";
			
			
			$rate= (int)(($num - 1) * 25/20);
			if ($show_ratings) {
			if ($rate>0){
			$output .= "<font  color=\"#FFCC33\" size=\"2\">";
			      for($j=1;$j<=5;$j++) {
				  $output .= "*";
				     if ($j>=$rate) $output .= "</font><font color=\"#999999\"  size=\"2\">";
				   }
		    $output .= "</font>";   
			} else {
			  $output .= "<font size=\"1\">Not Rated</font>";}
			}
			$output .="</td>\n";
			if ($show_views) $views=" Views: ".$row->visits;
			$output .= "<td style=\"color:#999999;font-size:10px;\" width=\"135\"> Last Update: ".makeClearDate($row->datum)."</td>\n";
			$output .= "<td style=\"color:#999999;font-size:10px;\" width=\"125\">".$views."</td>\n";
			$output .= "</tr></table>\n";
			$output .= "</td></tr></table>\n";
								
								
			
			
		
			$i++;
			}
		}
	else {
		$output.= "<br><p>No Top Ten available yet.</p>";
		}
	return $output;
}

/*
 * Zeigt die fünf neuesten Artikel an | @@ Thorsten - 2002-05-07
 * Last Update: @@ Thorsten, 2003-04-10
 */
function generateLastXX($XX)
{
	global $db, $sids, $host_name,  $sqltblpre,$show_views,$show_ratings;
	
	$result = $db->query("SELECT DISTINCT ".$sqltblpre."faqdata.id, ".$sqltblpre."faqdata.thema, ".$sqltblpre."faqdata.rubrik, ".$sqltblpre."faqdata.datum, ".$sqltblpre."faqdata.content, ".$sqltblpre."faqvisits.visits FROM ".$sqltblpre."faqvisits, ".$sqltblpre."faqdata WHERE ".$sqltblpre."faqdata.id = ".$sqltblpre."faqvisits.id  AND ".$sqltblpre."faqdata.active = 'yes' ORDER BY ".$sqltblpre."faqdata.datum DESC LIMIT 0,".$XX);
	$output = "<table  cellSpacing=\"0\" cellPadding=\"4\" width=\"100%\" bgColor=\"#ffffff\" border=\"0\" >\n";
	$output.= "<tr><td class=\"af3_title\" >";
	$output.= "Latest ".$XX." Poems\n";
	$output.= "</td></tr></table>\n";
	$output.= "";
	if ($db->num_rows($result) > 0) {
		$i = 1;
		while ($row = $db->fetch_object($result)) {
		    $res = $db->query("SELECT ( ".$sqltblpre."faqvoting.vote / ".$sqltblpre."faqvoting.user ) AS num, ".$sqltblpre."faqvoting.user FROM ".$sqltblpre."faqvoting WHERE artikel='".$row->id."'");
	        list($num,$user)= $db->fetch_row($res);
			$output .= "<table align=\"center\" borderColor=\"#ffffff\" cellSpacing=\"0\" cellPadding=\"4\" width=\"95%\" bgColor=\"#ffffff\" border=\"0\">";
			$output .= "<tr><td align=\"left\" borderColor=\"#cccccc\" >";
			$output .= "<a class=\"af3_links\" href=\"".$host_name."?".$sids."action=article&amp;cat_id=".$row->rubrik."&amp;id=".$row->id."&amp;lang=".$row->lang."\">".stripslashes($row->thema)."</a>\n<br>";
//**			$output .= makeShorterText(strip_tags($row->content), 30)."...<br>"; **//
			
			$output .= "<table cellSpacing=\"0\" cellPadding=\"0\" width=\"325\" border=\"0\" >\n";
			$output .= "<tr><td width=\"65\">";
			
			
			$rate= (int)(($num - 1) * 25/20);
			if ($show_ratings) {
			if ($rate>0){
			$output .= "<font  color=\"#FFCC33\" size=\"2\">";
			      for($j=1;$j<=5;$j++) {
				  $output .= "*";
				     if ($j>=$rate) $output .= "</font><font color=\"#999999\"  size=\"2\">";
				   }
		    $output .= "</font>";   
			} else {
			  $output .= "<font size=\"1\">Not Rated</font>";}
			}
			$output .="</td>\n";
			if ($show_views) $views=" Views: ".$row->visits;
			$output .= "<td style=\"color:#999999;font-size:10px;\" width=\"135\"> Last Update: ".makeClearDate($row->datum)."</td>\n";
			$output .= "<td style=\"color:#999999;font-size:10px;\" width=\"125\">".$views."</td>\n";
			$output .= "</tr></table>\n";
			$output .= "</td></tr></table>\n";
								
								
			
			
		
			$i++;
			}
		}
	else {
		$output.= "<br><p>No Last Ten available yet.</p>";
		}
	return $output;
}

/*
 * Kürzt einen String auf eine bestimmte Anzahl von Wörtern | @@ Thorsten - 2002-08-26
 * Last Update: @@ Thorsten, 2003-03-08
 */
function makeShorterText($str, $char)
{
	$str = ereg_replace("[[:space:]]+", " ", $str);
	$arrStr = explode(" ", $str);
	$shortStr = "";
	if (count($arrStr) > $char) {
		for ($j = 0; $j <= $char; $j++) {
			$shortStr .= $arrStr[$j]." ";
			}
//**		$shortStr .= "..."; **//
		$shortStr .= "";
		}
	else {
		$shortStr = $str;
		}
	return $shortStr;
}



/******************************************************************************
 * Funktionen für Artikelseiten
 ******************************************************************************/

/*
 * Funktion für das Zählen der Visits | @@ Bastian, 2001-02-15
 * Last Update: @@ Thorsten, 2003-03-30
 */
function logViews($myid, $lang)
{
	global $db, $sids, $sqltblpre;

/* added */
	$lang="en";

	
	$nVisits = "0";
	$heute = time();

	if ($result = $db->query ("SELECT visits FROM ".$sqltblpre."faqvisits WHERE id = '".$myid."' AND lang = '".$lang."'")) 
	{
		list($nVisits) = $db->fetch_row($result);
	}

	if ($nVisits == "0" || $nVisits == "") 
	{
		$db->query ("INSERT INTO ".$sqltblpre."faqvisits (id, lang, visits, last_visit) VALUES ('".$myid."', '".$lang."', '1', '".$heute."')");
	}
	else 
	{
		$db->query ("UPDATE ".$sqltblpre."faqvisits SET visits = visits+1, last_visit = '".$heute."' WHERE id = '".$myid."' AND lang = '".$lang."'");
	}
}

/*
 * Macht an den String nen / dran, falls keiner da ist
 * @@ Bastian, 2002-01-06
 */
function EndSlash($string)
{
	if( substr($string, strlen($string)-1, 1) != "/" ) {
		$string .= "/";
		}
	return $string;	
}


/*
 * Gibt die Kommentare zum Artikel aus | @@ Thorsten - 2002-08-29
 * Last Update: @@ Thorsten, 2003-04-17
 */
function generateComments($id)
{
	global $db, $sqltblpre;
	
	$result = $db->query("SELECT user,email,comment FROM ".$sqltblpre."faqcomments WHERE id = '".$id."'");
	$output = "";
	if ($db->num_rows($result) > 0) {
		while ($row = $db->fetch_object($result)) {
			$output .= "<p class=\"comment\">\n";;
			$output .= "<b>Comment of <a class=\"af3_links\" href=\"mailto:".safeEmail($row->email)."\">".$row->user."</a>:</b>\n";
			$output .= "<br />".ereg_replace("&lt;br /&gt;","<br />", stripslashes(htmlspecialchars($row->comment)))."\n</p>";
			}
		}
	return $output;
}



/******************************************************************************
 * Funktionen für den BB-Code-Parser
 ******************************************************************************/


/*
 * Funktion zum Entfernen von <br /> in Abschnitten zwischen <pr> | @@ Meikel Katzengreis, 2003-02-21
 * Last Update: @@ Thorsten, 2003-07-23
 */
function pre_core ($text)
{
	$text = preg_replace("=<br(>|([\s/][^>]*)>)\r?\n?=i", "\n", $text[1]);
    return $text;
}

/*
 * Funktion zum Entfernen von HTML-Tags bis auf <b>, <i>, <u>, und <a> | @@ Thorsten, 2003-02-23
 * Last Update: @@ Thorsten, 2003-07-17
 */
function safeHTML($html)
{
	$html = stripslashes($html);
	$html = strip_tags($html, "<b><i><u><a>");
	return $html;
}

/*
 * Funktion wandelt HTML Entities zurück | @@ Thorsten, 2003-03-27
 * Last Update: @@ Thorsten, 2003-03-27
 */
function unhtmlentities($html)
{
	$translation_table = get_html_translation_table (HTML_ENTITIES);
	$translation_table = array_flip ($translation_table);
	$content = strtr ($html, $translation_table);
	return preg_replace('/\&\#([0-9]+)\;/me', "chr('\\1')", $content);
}

/*
 * Funktion für PHP-Syntax-Highlighting | @@ Meikel Katzengreis, 2003-03-31
 * Last Update: @@ Thorsten, 2003-07-23
 */
function php_syntax($output)
{
    $ret = $output[1];
    $ret = wordwrap($ret, 120, "\n", 0);
    $ret = highlight_syntax(unhtmlentities($ret));
    return "<pre>".$ret."</pre>";
}

/*
 * Funktion für PHP-Syntax-Highlighting | @@ Meikel Katzengreis, 2003-03-31
 * Last Update: @@ Thorsten, 2003-07-23
 */
function highlight_syntax($code)
{
    return ob_highlight_syntax ($code);
}

/*
 * Funktion für BB-Code | @@ Meikel Katzengreis, 2003-07-23
 * Last Update: @@ Thorsten, 2003-07-23
 */
function code_core ($text)
{
    $text = preg_replace("=<br(>|([\s/][^>]*)>)\r?\n?=i", "\n", $text[1]);
    return $text;
}

/*
 * Funktion für BB-Code | @@ Meikel Katzengreis, 2003-07-23
 * Last Update: @@ Thorsten, 2004-01-20
 */
function code_syntax($output)
{
    $ret = $output[1];
    $ret = wordwrap($ret, 120, "\n", 0);
    $ret = htmlspecialchars($ret);
    return "<pre>".$ret."</pre>";
}



/*
 * Funktion für BB-Code | @@ Meikel Katzengreis, 2003-07-23
 * Last Update: @@ Thorsten, 2003-07-23
 */
function ob_highlight_syntax ($code)
{
    ob_start();
    @highlight_string($code);
    $code = ob_get_contents();
    ob_end_clean();
    return $code;
}


/*
 * Funktion zum Exportieren aller Artikel in eine XML-Datei | @@ Thorsten, 2003-03-03
 * Last Update: @@ Thorsten, 2003-03-24
 */
function generateXMLFile()
{
	global $db, $sqltblpre, $version, $metaCharset, $ubbcode;
	$categories = getCategories();
	
	$result = $db->query("SELECT id, lang, active, rubrik, keywords, thema, content, author, datum FROM ".$sqltblpre."faqdata ORDER BY id");
	if ($db->num_rows($result) > 0) {
		
		$my_xml_output = "<?xml version=\"1.0\" encoding=\"iso-8859-1\" standalone=\"yes\" ?>\n";
		$my_xml_output .= "<!-- XML-Output by Active FAQ ".$version." | Date: ".makeDate(date("YmdHis"))." -->\n";
		$my_xml_output .= "<FAQManager xmlns=\"hXXp://www.somedomain.com\">\n";
		$xml_fp = fopen("../xml/faq-manager.xml","w");
		while ($row = $db->fetch_object($result)) {
			
			if ($ubbcode == "true") {
				$xml_content = wordwrap(parseUBB($row->content));
				}
			else {
				$xml_content = wordwrap(stripslashes($row->content));
				}
			
			$xml_rubrik = $categories[$row->rubrik];
			$xml_thema = wordwrap($row->thema, 60);
			$xml_keywords = $row->keywords;
			if ($ubbcode == "true") {
				parseUBB($xml_content);
				}
			else {
				stripslashes($xml_content);
				}
			$xml_content = trim(htmlspecialchars(stripslashes(wordwrap($xml_content, 60))));
			
			if (is_writeable("../xml/")) {
				$my_xml_output .= "\t<article id=\"".$row->id."\">\n";
				$my_xml_output .= "\t<language>".$row->lang."</language>\n";
				$my_xml_output .= "\t<category>".htmlentities(strip_tags($xml_rubrik))."</category>\n";
				if ($xml_keywords) {
					$my_xml_output .= "\t<keywords>".$xml_keywords."</keywords>\n";
					}
				else {
					$my_xml_output .= "\t<keywords />\n";
					}
				$my_xml_output .= "\t<theme>".strip_tags($xml_thema)."</theme>\n";
				$my_xml_output .= "\t<content xmlns=\"http://www.w3.org/TR/REC-html40\">".strip_tags($xml_content)."</content>\n";
				if ($row->author) {
					$my_xml_output .= "\t<author>".$row->author."</author>\n";
					}
				else {
					$my_xml_output .= "\t<author />\n";
					}
				$my_xml_output .= "\t<date>".makeDate($row->datum)."</date>\n";
				$my_xml_output .= "\t</article>\n\n";
				}
			}
		$my_xml_output .= "</FAQManager>";
		fputs($xml_fp, $my_xml_output);
		fclose($xml_fp);
		}
	print "<p><a href=\"../xml/faq-manager.xml\" target=\"_blank\">XML File okay!</a></p>";
}


/******************************************************************************
 * Funktionen für die Volltextsuche
 ******************************************************************************/

/*
 * Suchfunktion für die Volltextsuche | @@ Thorsten - 2002-09-16
 * Last Update: @@ Thorsten, 2004-03-24
 */
function searchEngine($begriff)
{
	global $db, $sids,  $sqltblpre;
	
	$categories = getCategories();
	$seite = "";
	$output = "";
	
	if (isset($_REQUEST["seite"])) {
		$seite = $_REQUEST["seite"];
		}
	if (isset($_REQUEST["search"])) {
		$begriff = $_REQUEST["search"];
		}
	$begriff = trim($begriff);
	

  $words=explode(' ',$begriff);
  $query="SELECT id, lang, rubrik, thema, content  
             from ".$sqltblpre."faqdata WHERE (";	   
  foreach($words as $v)
   {
   if ($v) $sub.="(.*$v.*)|";
   } 
  $sub=substr($sub,0,strlen($sub)-1); 
  $query.="thema REGEXP \"$sub\" OR ";
  $query.="content REGEXP \"$sub\" OR ";
  $query.="keywords REGEXP \"$sub\"  ";
  $query.=')'; 
  /*  if (mysql_check("4.0.1") == FALSE) {
        // Search with MySQL 3.23.23+
           $query = "SELECT id, lang, rubrik, thema, content FROM ".$sqltblpre."faqdata WHERE MATCH (thema,content,keywords) AGAINST ('".$begriff."') AND active = 'yes'";
        }
    else {
        // Search with MySQL 4.0.1+
      $query = "SELECT id, lang, rubrik, thema, content FROM ".$sqltblpre."faqdata WHERE MATCH (thema,content,keywords) AGAINST ('".str_replace(" ", "* ", trim($begriff))."*' IN BOOLEAN MODE) AND active = 'yes'";
        }
		
    */
	$result = $db->query($query);
	$num = $db->num_rows($result);
	
    $seiten = ceil($num / 10);
	if (!$seite) {
		$seite = 1;
		}
	$y = $seite * 10; 
	$x = $y - 10;
	if ($y > $num) {
		$y = $num;
		}
	
    $result = $db->query($query." LIMIT ".$x.",10");
    $output = "<table cellSpacing=\"0\" cellPadding=\"4\" width=\"100%\" bgColor=\"#ffffff\" border=\"0\" >\n";
	$output.= "<tr><td class=\"af3_title\" >";
	$output.= "Search Results for \"".$begriff."\"";
	$output.= "</td></tr>\n";
	$output.= "<tr><td >";
	$output.= "There are ".$num." results found  for your query:";
	$output.= "</td></tr></table>\n";
	
	if ($num > 0) {
		
		if ($seiten > 1) {
			$output .= "<p><b>Page ".$seite." from ".$seiten."Pages</b></p>";
			}
		$output .= "<ol>\n";
	    for ($i = $x; $i < $y ; $i++) {
			list($id, $lang, $rubrik, $thema, $content) = $db->fetch_row($result);
			$rubriktext = $categories[$rubrik];
			$thema = substr(safeHTML($thema), 0, 45);
			
			$content = strip_tags(stripslashes($content));
				
			$content =  substr($content, 0, 80);
            $thema = preg_replace('/(((href|src)="[^"]*)?'.$begriff.'(?(1).*"))/umies', "highlight_no_links(\"\\1\")", $thema);
			$content = preg_replace('/(((href|src)="[^"]*)?'.$begriff.'(?(1).*"))/umies', "highlight_no_links(\"\\1\")", $content);
            $output .= "<li><b>".$rubriktext."</b>: <a class=\"af3_links\" href=\"".$_SERVER["PHP_SELF"]."?".$sids."action=article&amp;cat_id=".$rubrik."&amp;id=".$id."&amp;lang=".$lang."&amp;highlight=".$begriff."\">".stripslashes($thema)."...</a><br><div style=\"font-size: 10px;\"><b>Content: </b> ".stripslashes($content)."...</div><br></li>\n";
            }
        $output .= "</ol>\n";
        }
    else {
		$output = "<p>No entries available.</p>";
		}
    
    if ($num > 10) {
        $output .= "<p align=\"center\"><b>";
        $vor = $seite - 1; 
        $next = $seite + 1;
        if ($vor != 0) {
            $output .= "[ <a class=\"af3_links\" href=\"".$_SERVER["PHP_SELF"]."?".$sids."action=search&amp;&search=".$begriff."&amp;seite=".$vor."\">Previous</a> ]";
            }
        $output .= " ";
        if ($next <= $seiten) {
            $output .= "[ <a class=\"af3_links\" href=\"".$_SERVER["PHP_SELF"]."?".$sids."action=search&amp;search=".$begriff."&amp;seite=".$next."\">Next</a> ]";
            }
        $output .= "</b></p>";
		}
	return $output;
}
/******************************************************************************
 * Funktionen für die Volltextsuche
 ******************************************************************************/

/*
 * Suchfunktion für die Volltextsuche | @@ Thorsten - 2002-09-16
 * Last Update: @@ Thorsten, 2004-03-24
 */
function search_Query($begriff)
{	
  $begriff = trim($begriff);
  $words=explode(' ',$begriff);
  $query=" AND (";	   
  foreach($words as $v)
   {
   if ($v) $sub.="(.*$v.*)|";
   } 
  $sub=substr($sub,0,strlen($sub)-1); 
  $query.="thema REGEXP \"$sub\" OR ";
  $query.="content REGEXP \"$sub\" OR ";
  $query.="keywords REGEXP \"$sub\"  ";
  $query.=')'; 
	return $query;
}
/*
 * Funktion für das Herausfiltern von highlighting HTML aus URLs und Images | @@ Matthias Sommerfeld, 2003-07-14
 * Last Update: @@ Thorsten, 2003-11-11
 */
function highlight_no_links($string = "")
{
    if ("" == $string) {
        return "";
        }
    if ("href=" == substr($string, 0, 5) || "src=" == substr($string, 0, 4)) {
        return $string;
    }
    else {
        return "<span style=\"color: #FF0000; \">".$string."</span>";
    }
}






/******************************************************************************
 * Funktionen für die Benutzerauthentifozierung und Rechtevergabe
 ******************************************************************************/

/*
 * Überprüft die Rechte des Users bei einer bestimmten Aktion | @@ Bastian, 2001-02-18
 * Last Update: @@ Thorsten, 2003-10-02
 */
function Allowed($what, $user)
{
	global $db, $sqltblpre;
	list($rights, $what) = $db->fetch_row($db->query("SELECT ".$sqltblpre."faquser.rights, ".$sqltblpre."faqrights.id FROM ".$sqltblpre."faquser, ".$sqltblpre."faqrights WHERE ".$sqltblpre."faquser.ID = '".$user."' AND ".$sqltblpre."faqrights.SHORT = '".addslashes($what)."'"));
	for ($h = 1; $h <= strlen($rights); $h++) {
		$akt = substr($rights,($h-1), 1);
		if ($h == $what) {
			return $akt;
			}
		}
}

/*
 * Setzt die Rechte der User | @@ Bastian, 2001-02-18
 * Last Update: @@ Thorsten, 2003-10-02
 */
function GetRight($str)
{
    return $str;
}

/*
 * Logt den Admin | @@ Bastian, 2001-02-18
 * Last Update: @@ Thorsten, 2003-03-08
 */
function adminlog($text)
{
	global $db, $enableadminlog, $auth_user, $sqltblpre;
	if ($enableadminlog) {
		$db->query("INSERT INTO ".$sqltblpre."faqadminlog (ID,TIME,USER,TEXT,IP) VALUES ('','".time()."','".$auth_user."','".nl2br(addslashes($text))."','".$_SERVER["REMOTE_ADDR"]."')");
		}
}

/*
 * Zeigt User an, dass er keine Berechtigung hat. | @@ Bastian, 2001-02-18
 * Last Update: @@ Thorsten, 2002-09-19
 */
function na()
{
	print  "<b>You are not authorized.</b>";
}

/*
 * Checkt, ob eine SQL-Tabelle leer ist | @@ Thorsten 2002-01-10
 * Last Update: @@ Thorsten, 2003-03-24
 */
function emptyTable($table)
{
	global $db;
	if ($db->num_rows($db->query("SELECT * FROM ".$table)) < 1) {
		return TRUE;
		}
	else {
		return FALSE;
		}
}



/******************************************************************************
 * Funktionen für den Adminbereich
 ******************************************************************************/

/*
 * Funktion zum generieren vom "Umblättern" | @@ Bastian, 2002-01-03
 * Last Update: @@ Thorsten, 2002-12-18
 */
function PageSpan($code, $start, $end, $akt)
{
	for ($h = $start; $h<=$end; $h++) {
		if($h > $start) {
			$out .= ", ";
			}
		if($h != $akt) {
			$out .= str_replace("<NUM>", $h, $code).$h."</a>";
			}
		else {
			$out .= $h;
			}
		}
	
		$out = "Page: ".$out;
		return $out;
}

/*
 * Bastelt aus den Dateinamen des Tracking einen Timestamp | @@ Bastian, 2002-01-05
 * Last Update: @@ Thorsten, 2002-09-19
 */
function FileToDate($file)
{
	if (strlen($file) >= 16) {
		$tag = substr($file, 8, 2);
		$mon = substr($file, 10, 2);
		$yea = substr($file, 12, 4);
		$tim = mktime(1, 1, 1, $mon, $tag, $yea);
		return $tim;
		}
	else {
		return -1;
		}
}

/*
 * Funktion fuer das Wechseln des Tabellenhintergrunds | @@ Thorsten, 2001-04-10
 * Last Update: @@ Thorsten, 2002-09-19
 */
function rowcolor($zeile)
{
	if (($zeile/2) == floor($zeile/2)) {
		$retval = "#f5f5f5";
		}
	else {
		$retval = "#ffffff";
		}
	return $retval; 
}

/*
 * Bastelt nen Timestamp ausm Datum | @@ Bastian, 2001-04-09
 * Last Update: @@ Thorsten - 2002-09-27
 */
function mkts($datum,$zeit)
{
	if (strlen($datum) > 0) {
		$tag = substr($datum,0,strpos($datum,"."));
		$datum = substr($datum,(strpos($datum,".")+1),strlen($datum));
		$monat = substr($datum,0,strpos($datum,"."));
		$datum = substr($datum,(strpos($datum,".")+1),strlen($datum));
		$jahr = $datum;
	}
	else {
		$tag = date("d");
		$monat = date("m");
		$jahr = date("Y");
	}
	if (strlen($zeit) > 0) {
		$stunde = substr($zeit,0,strpos($zeit,":"));
		$zeit = substr($zeit,(strpos($zeit,":")+1),strlen($zeit));
		$minute = substr($zeit,0,strpos($zeit,":"));
		$zeit = substr($zeit,(strpos($zeit,":")+1),strlen($zeit));
		$sekunde = $zeit;
	}
	else {
		$stunde = date("H");
		$minute = date("i");
		$sekunde = date("s");
	}
	return mktime($stunde, $minute, $sekunde, $monat, $tag, $jahr);
}

// Hinweis: Die folgende Funktion muss weg, wenn Nested Sets kommen!
/*
 * Fügt eine Kategorie hinzu | @@ Bastian - 2002-01-29
 * Last Update: @@ Thorsten, 2003-03-06
 */
function AddCategory($TopCategory, $Titel, $secure)
{
	global $db, $sqltblpre;
	
	$datum = date("YmdHis");
	$result = $db->query("SELECT rubrik FROM ".$sqltblpre."faqrubrik WHERE LEFT(rubrik, ".strlen($TopCategory).") = '".$TopCategory."' AND LENGTH(rubrik) = ".(strlen($TopCategory)+3));
	$max = 0;
	while(list($rub) = $db->fetch_row($result)) {
		if( substr($rub, strlen($rub)-3, 3) > $max) {
			$max = substr($rub, strlen($rub)-3, 3);
			}
		}
	$max++;
	while(strlen($max) < 3) {
		$max = "0".$max;
		}
	$TopCategory .= $max;
	$db->query("INSERT INTO ".$sqltblpre."faqrubrik (rubrik, titel, datum, secure) VALUES ('".$TopCategory."', '".$Titel."', '".$datum."', '".$secure."')");
	return $TopCategory;
}
function GetNewCategoryID($TopCategory)
{
	global $db, $sqltblpre;
	
	$datum = date("YmdHis");
	$result = $db->query("SELECT rubrik FROM ".$sqltblpre."faqrubrik WHERE LEFT(rubrik, ".strlen($TopCategory).") = '".$TopCategory."' AND LENGTH(rubrik) = ".(strlen($TopCategory)+3));
	$max = 0;
	while(list($rub) = $db->fetch_row($result)) {
		if( substr($rub, strlen($rub)-3, 3) > $max) {
			$max = substr($rub, strlen($rub)-3, 3);
			}
		}
	$max++;
	while(strlen($max) < 3) {
		$max = "0".$max;
		}
	$TopCategory .= $max;
	return $TopCategory;
}

/*
 * Funktion für Umwandlung der Rubriknamen | @@ Thorsten, 2003-03-21
 * Last Update: @@ Thorsten, 2003-03-21
 */
function getCategories()
{
	global $db, $no_cats, $sqltblpre;
	$result = $db->query("SELECT rubrik, titel FROM ".$sqltblpre."faqrubrik ORDER by rubrik");
	if ($db->num_rows($result) > 0) {
		while ($row = $db->fetch_object($result)) {
			$output[$row->rubrik] = strip_tags($row->titel);
			}
		}
	else {
		$output[] = $no_cats;
		}
	return $output;
}

/*
 * Funktion für das Setzen der Hintergrundfarbe der Admin-Navigation | @@ Thorsten, 2003-04-17
 * Last Update: @@ Thorsten, 2003-04-17
 */
function adminColor($site)
{
	if ($site == $_REQUEST["aktion"]) {
		return "#f5f5f5";
		}
	else {
		return "#b0c4de";
		}
}



/******************************************************************************
 * Funktionen für das Backup
 ******************************************************************************/

/*
 * Funktion zum Zusammensetzen der zu sichernden SQL Queries | @@ Meikel, 2003-03-24
 * Last Update: @@ Thorsten, 2003-11-13
 */
function build_insert ($query, $table)
{
	global $db;
	if (!$result = $db->query($query)) {
		return;
		}
	$ret = array();
	$ret[] = "\n# Table: ".$table;
	while ($row = $db->fetch_assoc ($result)) {
		$p1 = array();
		$p2 = array();
		foreach ($row as $key => $val) {
            $val = safeSQL($val);
			$p1[] = $key;
			$p2[] = "'".$val."'";
			}
		$ret[] = "INSERT INTO ".$table." (".implode(",", $p1).") VALUES (".implode(",", $p2).");";
		}
	return $ret;
}

/*
 * Funktion zum Escapen von SQL Queries | @@ Thorsten, 2003-11-13
 * Last Update: @@ Thorsten, 2003-11-18
 */
function safeSQL($string)
{
    $str = "";
    $length = strlen($string);
    for ($i = 0; $i < $length; $i++) {
        $char = $string[$i];
        switch ($char) {
            case "'":           $str .= "\'";
                                break;
            case "\\":          $str .= "\\\\";
                                break;
            case "\n":          $str .= "\\n";
                                break;
            case "\r":          $str .= "\\r";
                                break;
            default:            $str .= $char;
            }
        }
    return $str;
}


/******************************************************************************
 * Verschiedene Funktionen
 ******************************************************************************/

/*
 * Funktion für das interne Linking | @@ Nick Georgakis, 2003-08-25
 * Last Update: @@ Thorsten, 2003-11-18
 */
function internalLink ($output) {
    global $db, $sqltblpre, $no_cats;
    if (sizeof($output) != 3) {
        return "<i><b>Article Link Error.</b></i>";
        }
   if (isset($_REQUEST["sid"])) {
        $thsids = "sid=".$_REQUEST["sid"]."&amp;";   
        }
    else {
        $thsids = "";
    }
    
    $query = "SELECT ".$sqltblpre."faqdata.thema,".$sqltblpre."faqdata.rubrik FROM ".$sqltblpre."faqdata WHERE id = '".$output[1]."' AND lang = '".$output[2]."'";
    
    $result = $db->query($query);
    
    if ($db->num_rows($result) > 0) {
        while ($row = $db->fetch_object($result)) {
            return "<a href=\"".$_SERVER["PHP_SELF"]."?".$thsids."action=article&amp;cat_id=".$row->rubrik."&amp;id=".$output[1]."&amp;lang=".$output[2]."\">".stripslashes($row->thema)."</a>";
            }
        }
    else {
        return "<i><b>Article not found</b></i>";
        }
    }

/*
 * Funktion für Versioncheck | @@ Thorsten, 2003-10-10
 * Last Update: @@ Thorsten, 2003-10-10
 */
function version_check ($ist = "", $soll = "", $err_msg = "")
{
    if (empty($ist) OR empty($soll)) {
        return FALSE;
        }
    $ist = explode(".", $ist);
    $soll = explode(".", $soll);
    for ($i = 0; $i < count($soll); $i++) {
        if ($ist[$i] <  $soll[$i]) {
            return FALSE;
            }
        if ($ist[$i] == $soll[$i]) {
            continue;
            }
        if ($ist[$i] >= $soll[$i]) {
            return TRUE;
            }
        }
    return TRUE;
}
function GenerateListCategories($rubrik){
global $sqltblpre,$db;
 $listCategories="";		
	$query = "SELECT rubrik, titel FROM ".$sqltblpre."faqrubrik ORDER BY rubrik";
	$result = $db->query($query);
	if ($db->num_rows($result) > 0) {
		while (list($prubrik, $titel) = $db->fetch_row($result)) {
			$layer = (strlen($prubrik) / 3) - 1;
			$listCategories.= "\t\t<option value=\"".$prubrik."\"";
			if (isset($_REQUEST["rubrik"]) && $prubrik == $rubrik) {
				$listCategories.=  " selected=\"selected\"";
				}
			$listCategories.=  ">";
			for ($h = 1; $h <= $layer; $h++):
				$listCategories.= "&nbsp;&nbsp;";
			endfor; 
			$listCategories.= $titel."</option>\n";
			}
		}
	else {
		$listCategories.= "No category found!";
		}
	return $listCategories;	
}
function printVote($saveVotingPATH, $saveVotingID, $saveVotingIP)
{
$output="<form style=\"MARGIN-BOTTOM: 0px\" action=\"".$saveVotingPATH."\" name=\"form_vote\" method=\"post\" onsubmit=\"if (this.vote.value=='') return false\">
	                               	<input type=\"hidden\" name=\"artikel\" value=\"".$saveVotingID."\">
		                            <input type=\"hidden\" name=\"userip\" value=\"".$saveVotingIP."\">
										<div align=\"center\">
											<select class=\"af3_field\" name=\"vote\">
											<option value=\"\" selected>Rate This:</option>
											<option value=\"5\">Excellent</option>
											<option value=\"4\">Very Good</option>
											<option value=\"3\">Good</option>											
											<option value=\"2\">Fair</option>	
											<option value=\"1\">Poor</option>
											</select>
											
											<input class=\"af3_btn\" type=\"submit\" value=\"Rate!\" name=\"Submit\">
											</div>
									</form>";
 return $output;
									}
/*
 * Funktion für MySQL-Versioncheck | @@ Thorsten, 2003-10-10
 * Last Update: @@ Thorsten, 2003-10-10
 */
 
 function stl2style($vars) {
  $styles_vars = array(
  array(0,0,0,0,1,1,1,1,1,1,"main_text","TD"),
  array(0,0,0,1,1,1,1,1,1,1,"title",".af3_title"),

  array(1,1,1,1,1,1,0,1,1,1,"form",".af3_field"),
  array(1,1,1,1,1,1,0,1,1,1,"button",".af3_btn"),

  array(0,0,0,0,1,1,1,1,1,1,"links","a.af3_links:link,a.af3_links:active,a.af3_links:visited"),
  array(0,0,0,0,1,1,1,1,1,1,"links_hover","a.af3_links:hover"),
  array(0,0,0,0,1,1,1,1,1,1,"nov_links","a.af3_nov_links:link,a.af3_nov_links:active,a.af3_nov_links:visited"),
  array(0,0,0,0,1,1,1,1,1,1,"nov_links_hover","a.af3_nov_links:hover")
  );
  
  $styles_stl = array('border_width','border_style','border_color','background_color','font_family','font_style','text_decoration','text_color','font_size','font_weight');
  
  $style = "<style type=\"text/css\">";
  
  reset($styles_vars);
  while (list(,$i) = each($styles_vars)) {
    
    $style .= $i[11].' {';
    
    if ($i[0] == 1 && $i[1] == 1 && $i[2] == 1) {
      if ($vars["{$i[10]}_{$styles_stl[0]}"] && $vars["{$i[10]}_{$styles_stl[1]}"] && $vars["{$i[10]}_{$styles_stl[2]}"]) {
        $style .= "border: {$vars["{$i[10]}_{$styles_stl[0]}"]}px {$vars["{$i[10]}_{$styles_stl[1]}"]} #{$vars["{$i[10]}_{$styles_stl[2]}"]};";
      }
    }
    if ($i[3] == 1 && $vars["{$i[10]}_{$styles_stl[3]}"]) {
      $style .= "background-color:#{$vars["{$i[10]}_{$styles_stl[3]}"]};";
    }
    if ($i[4] == 1 && $vars["{$i[10]}_{$styles_stl[4]}"]) {
      $style .= "font-family:{$vars["{$i[10]}_{$styles_stl[4]}"]};";
    }
    if ($i[5] == 1 && $vars["{$i[10] }_{$styles_stl[5]}"]) {
      $style .= "font-style:{$vars["{$i[10]}_{$styles_stl[5]}"]};";
    }
    if ($i[6] == 1 && $vars["{$i[10]}_{$styles_stl[6]}"]) {
      $style .= "text-decoration:{$vars["{$i[10]}_{$styles_stl[6]}"]};";
    }
    if ($i[7] == 1 && $vars["{$i[10]}_{$styles_stl[7]}"]) {
      $style .= "color: #{$vars["{$i[10]}_{$styles_stl[7]}"]};";
    }
    if ($i[8] == 1 && $vars["{$i[10]}_{$styles_stl[8]}"]) {
      $style .= "font-size:{$vars["{$i[10]}_{$styles_stl[8]}"]}px;";
    }
    if ($i[9] == 1 && $vars["{$i[10]}_{$styles_stl[9]}"]) {
      $style .= "font-weight:{$vars["{$i[10]}_{$styles_stl[9]}"]};";
    }
    
    $style .= "\n".'}';
  }
  
  $style .= "</style>";
  
  return $style;
}
function mysql_check($version)
{
    return version_check (mysql_get_server_info(), $version);
}

function Demo($user)
{
	global $db, $sqltblpre;
	list($demo) = $db->fetch_row($db->query("SELECT ".$sqltblpre."faquser.demo FROM ".$sqltblpre."faquser WHERE ".$sqltblpre."faquser.ID = '".$user."'"));
	return ($demo=='y') ? true: false;
}

?>