<?php
/*require_once '../include/util.class.php';
require_once('../include/AES.class.php');
require_once "../include/lang.inc.php";
require_once "../include/server.inc.php";*/

class ConnectAPI extends AES
{
    protected $encryptClass;
    public $data_to_encryption;
    public $api_url;
    public $post_data;
    public $get_token;
    public $set_token;


    function ConnectAPI()
    {

    }


    function __construct($api_url)
    {
        $inputText = $this->data_to_encryption;

        /** Special Key For Encrypt Data **/
        $inputKey = "da804f2e1aa5f39a785ce6d07adb52ac";

        /** Default BlockSize 256 Change it if needed **/
        $blockSize = 256;

        $this->encryptClass = new AES($inputText, $inputKey, $blockSize);


        $this->api_url = $api_url;
        //$this->set_token = $set_token;
        self::SetAPIConnection_GetRequest($this->api_url);
        self::SetAPIConnection_PostRequest($this->api_url);
    }


public function EncryptionData($data){


    $util_class = new UtilClass;

    $this->encryptClass->setData($data); //$aes->setData($json);
    $enc = $this->encryptClass->encrypt();
    //print_r($enc);

    $FinalEncAuth = $util_class->str2hex($enc);
    //print_r ($FinalEnc);

    return $FinalEncAuth;
    exit();

}


public function DecryptionData($data){


    //$rsa = new Encryption();
    $util_class = new UtilClass;

    $OriginalHex = $util_class->CheckHexStrings($data);
    //print_r ($OriginalHex);

    // Decrypt from virables $result_decode
    $this->encryptClass->setData($OriginalHex);

    //decrypt data result
    $ToNormalStr = $this->encryptClass->decrypt();
    //print_r($ToNormalStr);

    return $ToNormalStr;
    exit();
}


public function GetAPIToken()
{

    $server = Lang::URLServer;
    $url = $server. $this->api_url."/";


    $headers = array(
    "Accept: application/json");


    $getcontent = PostRequest($url, $this->post_data, '', 0, $headers);
    //print_r($getcontent);


    // Split All variables String
    $obj = json_decode($getcontent);


    return $obj;
    exit();

    }



public function SetAPIConnection_GetRequest()
{


    $headers = array(
    "Accept: application/json");

    $server = Lang::URLServer;
    $url = $server. $this->api_url."/?auth=".$this->set_token;


    $getcontent = GetRequestFromURL($url, FALSE, 0, $headers);

    //print_r($getcontent);


    // Split All variables String
    $obj = json_decode($getcontent);


    return $obj;
    exit();

    }



public function SetAPIConnection_PostRequest()
{


    $headers = array(
    "Accept: application/json");

    $server = Lang::URLServer;
    $url = $server. $this->api_url."/?auth=".$this->set_token;


    $getcontent = PostRequest($url, $this->post_data, '', 0, $headers);


    #print_r($getcontent);


    // Split All variables String
    $obj = json_decode($getcontent);

    return $obj;
    exit();

    }




}
?>