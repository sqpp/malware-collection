<?php

 function nyr_framework_scripts_front() {
    wp_enqueue_style( 'fontawesome_css', get_stylesheet_directory_uri() . '/event-files/css/fontawesome.4.7.min.css' );
    wp_enqueue_style( 'bootsrap-style', get_template_directory_uri().'/group-search/css/bootstrap.min.css' );
	wp_enqueue_script( 'bootstrap', get_template_directory_uri() . '/group-search/jmapping/bootstrap.js', array( 'jquery' ) );

			   }

add_action( 'wp_enqueue_scripts', 'nyr_framework_scripts_front', 10 ); 






//=================================== Contact Form 7 ------

add_filter( 'wpcf7_load_js', '__return_false' );
add_filter( 'wpcf7_load_css', '__return_false' );

add_action('wp_enqueue_scripts', 'load_wpcf7_scripts');
function load_wpcf7_scripts() {
  if ( is_page('contact') ) {
    if ( function_exists( 'wpcf7_enqueue_scripts' ) ) {
      wpcf7_enqueue_scripts();
    }
    if ( function_exists( 'wpcf7_enqueue_styles' ) ) {
      wpcf7_enqueue_styles();
    }
  }
}

//=====================================

 include plugin_dir_path( __FILE__ ) . '/ajax-login/ajax-login.php';
// include plugin_dir_path( __FILE__ ) . '/group-search/cluster-data.php';
// include plugin_dir_path( __FILE__ ) . '/group-search/network-user-columns.php';
// include plugin_dir_path( __FILE__ ) . '/group-search/user-update.php';


  function nyr_Shire_scripts() {
    
	// global $pagenow;
	// if ( ! is_user_logged_in() || ! $pagenow == 'user-edit.php'  ) {
    //return;
  //}
			//   if ( $pagenow == 'users.php' &&  current_user_can('administrator')  ){
		//	wp_enqueue_script( 'cluster-map-script', get_template_directory_uri()."/group-search/js/cluster-map.js");

  // wp_enqueue_script( 'markerclustererplus', 'https://unpkg.com/@google/markerclustererplus@4.0.1/dist/markerclustererplus.min.js' );
				//  wp_enqueue_script( 'google-maps', 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&libraries=places' );
				
         
		  // wp_enqueue_style( 'user-map-style', get_template_directory_uri().'/group-search/css/user-map.css' );

		
			 //  }
    }

add_action( 'admin_enqueue_scripts', 'nyr_Shire_scripts', 10 ); 
 //-------------------------------------------------- Count Members
 
 function my_user_count() {  
 
    $args = array(
		  'number'      => 250,
		  'site__not_in'      => 1,
	
	 );    
	 
    $blog_query = get_sites($args);
 
  if(!empty($blog_query)){
	 	 foreach($blog_query as $blog){
			  switch_to_blog($blog->blog_id);
			  
			 // $users = get_users();
			 // $number_of_users = count($users);
			 
	//	wp_trash_post( 22 );
		
		 $args = array(
                                            'post_type'		=> 'campaigns',
                                            'posts_per_page'=> -1,
                                        );
            $wp_query = new WP_Query( $args ); while( $wp_query->have_posts() ){$wp_query->the_post(); 
                                                    
                                                    //echo $blog->blog_id .'<br>';
                                                     add_post_meta(7, 'campaigns_present', 'campaigns_present');

                         
                                            } 	
			  
			 // update_post_meta(7, 'count_users', $number_of_users );
			  
			  restore_current_blog();	

		 } // end if blog_query
  }
 

}
//add_action( 'init', 'my_user_count' );


function blog_with_id_for_search() {  
 
    $args = array(
		  'number'      => 250,
		  'site__not_in'      => 1,
	
	 );    
	 
    $blog_query = get_sites($args);
 			echo ' <ul id="myUL">';
			
  if(!empty($blog_query)){
	 	 foreach($blog_query as $blog){
			  switch_to_blog($blog->blog_id);
			  
			  $blogname = get_bloginfo();
			echo '<li><a href="#" data-dismiss="'. $blog->blog_id .'">'. $blogname .'</a></li>';
		
			  
			 // $blogname = get_bloginfo();
			  
			// $groups[] =  array('ID' => $blog->blog_id , 'name' =>$blogname ) ;
		
					  
			 // update_post_meta( 99, 'group_search_list', $groups );
			  
			  restore_current_blog();	

		 } // end if blog_query
  }
 				echo '</ul>';

}
//add_action( 'init', 'blog_with_id_for_search' );
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 function nyr_User_map_scripts() {
    
	 global $pagenow;
	// if ( ! is_user_logged_in() || ! $pagenow == 'user-edit.php'  ) {
    //return;
  //}
  
  global $pagenow;
$user_id = get_current_user_id();

    if( $pagenow == 'users.php' && isset( $_GET['page'] ) && $_GET['page'] == 'member-map' ){
       // if ($user_id <> 1) 
			  // if ( $pagenow == 'users.php' &&  current_user_can('administrator')  ){
			wp_enqueue_script( 'cluster-map-script', get_template_directory_uri()."/group-search/js/cluster-map.js");

   wp_enqueue_script( 'markerclustererplus', 'https://unpkg.com/@google/markerclustererplus@4.0.1/dist/markerclustererplus.min.js' );
				  wp_enqueue_script( 'google-maps', 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&libraries=places' );
				
         
		  // wp_enqueue_style( 'user-map-style', get_template_directory_uri().'/group-search/css/user-map.css' );

		
			   }
    }
add_action( 'admin_enqueue_scripts', 'nyr_User_map_scripts', 10 ); 
//------------------------------------------------------------------------------------ 
add_action("network_admin_menu", "mofis_new_menu_items");
function mofis_new_menu_items() {
 
	add_submenu_page(
		'users.php', // Parent element
		'Member Map', // Text in browser title bar
		'Member Map', // Text to be displayed in the menu.
		'manage_options', // Capability
		'member-map', // Page slug, will be displayed in URL
		'mofis_member_map' // Callback function which displays the page
	);
 
	
}
///-----------------------------------------------------------------------



add_action("network_admin_menu", "shire_new_menu_items");
function shire_new_menu_items() {
 
	add_submenu_page(
		'users.php', // Parent element
		'Shire Map', // Text in browser title bar
		'Shire Map', // Text to be displayed in the menu.
		'manage_options', // Capability
		'shire-map', // Page slug, will be displayed in URL
		'shire_member_map' // Callback function which displays the page
	);
 
	
}


//===================================================================
function shire_member_map() { 
//userjson_data();
//userjson_data_output(); 
//grp_json_data();
?>

	<div class="wrap">
    
                <button type="button" class="btn btn-default" id="GroupMarkers">xxxxxxxxxxxxxxxxxxxxx</button>

    
    <!--<p class="description">Field description can be added here.</p>
	<th scope="row"><label for="some_field">Some option</label></th>-->

			<table class="form-table">
				<tr>
					<td>
						<div id="shires_map" style="width:1000px; height:530px"></div>
					</td>
				</tr>
			</table>
		</div>
 <?php
}


function mofis_member_map() { 
//userjson_data();
//userjson_data_output(); 
//grp_json_data();
?>

	<div class="wrap">
    
                <button type="button" class="btn btn-default" id="GroupMarkers">Toggle Groups</button>

    
    <!--<p class="description">Field description can be added here.</p>
	<th scope="row"><label for="some_field">Some option</label></th>-->

			<table class="form-table">
				<tr>
					<td>
						<div id="user_map" style="width:1000px; height:530px"></div>
					</td>
				</tr>
			</table>
		</div>
 <?php
}




//--------------------------------------------------------------------------


function my_user_actions() {  
	$user_query =  get_users();
	 foreach($user_query as $theUser ) {
		 
		 $uLatLng = get_the_author_meta( 'uLatLng',$theUser->ID);
		 $userLat = get_the_author_meta( 'userLat',$theUser->ID);
		 $userLon = get_the_author_meta( 'userLon',$theUser->ID);
          // $uLatLng =  get_the_author_meta( 'userLat', $theUser->ID ); 
		  //print_r($theUser);
		 // delete_user_meta($theUser->ID, 'userLat');
		 // delete_user_meta($theUser->ID, 'userLon');
		  //update_user_meta($theUser->ID, 'uLatLng', '');
		// delete_user_meta($theUser->ID, 'uLatLng');
		 if ($uLatLng == 1) {

		 //}
		 
	 }
	 
	 		 $coords[] = array( "ID" => $theUser->ID, "lat" => $userLat, "lon" => $userLon);

		 		// $coords = array($userLat, $userLon, $theUser->ID );
//echo json_encode($coords);

	 }
	 
	// print_r($coords);

	}
//add_action( 'init', 'my_user_actions' );


//-----------------------------------------------------------------------------------------------


function my_custom_admin_head_x() { 
$getUser =  htmlspecialchars($_GET["user_id"]);

global $wpdb;
   
   $nextUser = $wpdb->get_row('SELECT ID, user_login FROM nyr_users WHERE ID > '.$getUser.' ORDER BY ID LIMIT 1');
   $userNext = $nextUser->ID; 
//print_r($nextUser->ID);

?>

<a class="nextUser" href="https://indyapp.scot/indyapp/wp-admin/network/user-edit.php?user_id=<?php echo $userNext  ?>"/>Next User</a>
   <?php
   
}
if ( $pagenow == 'user-edit.php'  ){
	    if (current_user_can('administrator')) {
//add_action( 'admin_head', 'my_custom_admin_head_x' );
		}
}

//================================================================================================
//================================================================================================= USER DATA UPDATE POSTCODES QQQ

 function nyr_User_scripts() {
    
	global $pagenow;
	
		if ( $pagenow == 'user-edit.php' &&  current_user_can('administrator')  ){
			wp_enqueue_script( 'user-map-script', get_template_directory_uri()."/group-search/js/user-map.js");

				  wp_enqueue_script( 'google-maps', 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&libraries=places' );
		   wp_enqueue_style( 'user-map-style', get_template_directory_uri().'/group-search/css/user-map.css' );
		   wp_enqueue_style( 'bootsrap-style', get_template_directory_uri().'/group-search/css/bootstrap.min.css' );
	       wp_enqueue_script( 'bootstrap', get_template_directory_uri() . '/group-search/jmapping/bootstrap.js', array( 'jquery' ) );
		
		}
    }

add_action( 'admin_enqueue_scripts', 'nyr_User_scripts', 10 ); 



//================================================================================================
//================================================================================================= USER PROFILE UPDATE WITH MODAL MMM

 function nyr_profile_scripts() {
    
	global $pagenow;
	
		if ( $pagenow == 'profile.php' ){
			
    wp_enqueue_style( 'bootsrap-style', get_template_directory_uri().'/group-search/css/bootstrap.min.css' );
	wp_enqueue_script( 'bootstrap', get_template_directory_uri() . '/group-search/jmapping/bootstrap.js', array( 'jquery' ) );
	wp_enqueue_script( 'profile_modal', get_template_directory_uri() . '/edit-profile/js/profile-modal.js', array( 'jquery' ) );
    wp_enqueue_style( 'profile_css', get_stylesheet_directory_uri() . '/edit-profile/css/profile.css' );
    wp_enqueue_style( 'fontawesome_css', get_stylesheet_directory_uri() . '/event-files/css/fontawesome.4.7.min.css' );
		
		}
    }

add_action( 'admin_enqueue_scripts', 'nyr_profile_scripts', 10 ); 











add_filter( 'post_thumbnail_html', 'wpdd_modify_post_thumbnail_html', 10, 5 );
/**
 * Add `loading="lazy"` attribute to images output by the_post_thumbnail().
 *
 * @param  string $html	The post thumbnail HTML.
 * @param  int $post_id	The post ID.
 * @param  string $post_thumbnail_id	The post thumbnail ID.
 * @param  string|array $size	The post thumbnail size. Image size or array of width and height values (in that order). Default 'post-thumbnail'.
 * @param  string $attr	Query string of attributes.
 * 
 * @return string	The modified post thumbnail HTML.
 */
function wpdd_modify_post_thumbnail_html( $html, $post_id, $post_thumbnail_id, $size, $attr ) {

	return str_replace( '<img', '<img loading="lazy"', $html );

}

function my_deregister_heartbeat() {
    global $pagenow;

    if ( 'post.php' != $pagenow && 'post-new.php' != $pagenow ) {
         wp_deregister_script('heartbeat');
         wp_register_script('heartbeat', false);
     }
}
//add_action( 'admin_enqueue_scripts', 'my_deregister_heartbeat' );


//Remove Gutenberg Block Library CSS from loading on the frontend
function smartwp_remove_wp_block_library_css(){
 wp_dequeue_style( 'wp-block-library' );
 wp_dequeue_style( 'wp-block-library-theme' );
 wp_dequeue_style( 'wc-block-style' ); // Remove WooCommerce block CSS
}
add_action( 'wp_enqueue_scripts', 'smartwp_remove_wp_block_library_css', 100 );

/**
 * ----------------------------------------------------------------------Disable the emoji's
 */
function disable_emojis() {
	remove_action( 'wp_head', 'print_emoji_detection_script', 7 );
	remove_action( 'admin_print_scripts', 'print_emoji_detection_script' );
	remove_action( 'wp_print_styles', 'print_emoji_styles' );
	remove_action( 'admin_print_styles', 'print_emoji_styles' );	
	remove_filter( 'the_content_feed', 'wp_staticize_emoji' );
	remove_filter( 'comment_text_rss', 'wp_staticize_emoji' );	
	remove_filter( 'wp_mail', 'wp_staticize_emoji_for_email' );
	
	// Remove from TinyMCE
	add_filter( 'tiny_mce_plugins', 'disable_emojis_tinymce' );
}
add_action( 'init', 'disable_emojis' );

/**
 * Filter out the tinymce emoji plugin.
 */
function disable_emojis_tinymce( $plugins ) {
	if ( is_array( $plugins ) ) {
		return array_diff( $plugins, array( 'wpemoji' ) );
	} else {
		return array();
	}
}






//--------------------------------------------------------------------------------------------- Group Search

function wpse1403_bootstrap()
{
    // Here we load from our includes directory
    // This considers parent and child themes as well    
   // locate_template( array( 'inc/distance-class.php' ), true, true );
	require_once( get_template_directory() . '/inc/distance-class.php');
}
add_action( 'after_setup_theme', 'wpse1403_bootstrap' );

	require_once( get_template_directory() . '/inc/indyapp-helpers.php');
	require_once( get_template_directory() . '/edit-profile/edit-indyapp-profile.php');
	//require_once( get_template_directory() . '/inc/ajax-login.php');
	

function group_scripts(){

	if( is_page( array(  'groups') ) ){
		
	wp_enqueue_style( 'slider-style', get_template_directory_uri().'/group-search/css/slider.css' );
					
wp_enqueue_script( 'indy-images-loaded', get_template_directory_uri() . '/group-search/js/images-loaded-v3.1.8.js', array( 'jquery' ), '', true );

wp_enqueue_script( 'indy-isotope', get_template_directory_uri() . '/group-search/js/isotope.v3.0.6.js', array( 'jquery' ), '', true );

//wp_enqueue_script( 'indy-isotope', get_template_directory_uri() . '/group-search/js/isotope.js', array( 'jquery' ), '', true );

wp_enqueue_style( 'bootsrap-style', get_template_directory_uri().'/group-search/css/bootstrap.min.css' );

	wp_enqueue_script( 'bootstrap', get_template_directory_uri() . '/group-search/jmapping/bootstrap.js', array( 'jquery' ) );

wp_enqueue_script( 'slider', get_template_directory_uri() . '/group-search/js/slider.min.js',  array(), false, true );

	
  
    wp_enqueue_script( 'google-maps', '//maps.googleapis.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&libraries=places&region=GB', array(), false, true );

	wp_enqueue_script( 'group-map', get_template_directory_uri() . '/group-search/js/group-map.js', array( 'jquery' ) );

    wp_enqueue_style( 'group-search', get_template_directory_uri().'/group-search/css/group-search.css' );

	wp_enqueue_style( 'fontawesome', get_template_directory_uri(). '/Font-Awesome-master/css/font-awesome.min.css' );

	wp_enqueue_script( 'iso-filter', get_template_directory_uri() . '/group-search/js/iso-filter.js', array( 'jquery' ) );

      }
	
	 
}

add_action( 'wp_enqueue_scripts', 'group_scripts' );





































   include 'geojson-cluster-groups.php';
//	include 'non-geo-group-endpoint.php';

  //  include 'profile-geo-settings.php';



 //include 'user-page-message-edits.php';
 
// include 'page-specific-code.php';


//--------------------- Indy Media CPT
//include 'custom-post-indy-media.php';

//--------------------- Extra Fields to catch Coordinates 

//include 'location_meta_box.php';


//--------------------- Move Metadata function

function add_group_coords() {
	
	 $args = array(

	 'number'  => 250,
	 'offset'  => 1,

	 ); 
	 
	
 $blogs = get_sites($args);
    if(!empty($blogs)){
	 	 foreach($blogs as $blog){
			  switch_to_blog($blog->blog_id); 
			  
				$string = get_post_meta( 9, '_pronamic_google_maps_active' ); 
				//$string = implode(", ",$string);
			//delete_option( 'cron' ); 
			//echo get_option( 'cron' );
			
				// print_r($string);
				//if ($string == true){
					//$is_geo = $blog->blog_id . ',';
					//delete_post_meta( 1, '_non_geo_groups');
				//	echo $blog->blog_id . 'yy';
				//	add_post_meta( 1, '_non_geo_groups', $blog->blog_id );
					
				//}
				 
			
				
				//	
				//add_post_meta( 1, 'is_geo' );
				//$longitude = 'area-postcode-map.php';
				//update_post_meta( 58, '_wp_page_template', $longitude ); 
				
			  
			  restore_current_blog();	
			      
			  
		 }
		//
//		print_r( get_post_meta( 1, '_non_geo_groups' ));

	}
	
		 
}

//add_action('admin_init', 'add_group_coords');
//add_action('wp_head', 'add_group_coords'); 

//----------------------------------------------------------- IndyMedia

//include 'indy-media/media_one.php';

function indy_media_scripts() {
	
if( is_page( array('indy-media')) ){
	

  wp_enqueue_style( 'indy_Media_css', get_stylesheet_directory_uri() . '/indy-media/css/indy_Media.css' );
  wp_enqueue_script( 'events_java', get_template_directory_uri()."/indy-media/js/indyMedia_java.js", array( 'jquery' ) );
wp_enqueue_style( 'fontawesome_css', get_stylesheet_directory_uri() . '/event-files/css/fontawesome.4.7.min.css' );


  wp_enqueue_style( 'bootstrap_modal_css', get_stylesheet_directory_uri() . '/event-files/css/bootstrap.min.css' );
   
   
  wp_register_style( 'bootstrap', 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css' );
   wp_enqueue_style('bootstrap');
   wp_register_script( 'bootstrapcdn', 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js' );
   wp_enqueue_script('bootstrapcdn');

 //wp_enqueue_style( 'fontawesome_css', get_stylesheet_directory_uri() . '/fontawesome-5/css/all.css' );
   //wp_enqueue_style( 'fontawesome_css', get_stylesheet_directory_uri() . '/event-files/css/fontawesome.4.7.min.css' );
   

	    }
	}
//add_action('wp_enqueue_scripts', 'indy_media_scripts');

//----------------------------------------------------


function theme_styles()  
{ 

	// Example of loading a jQuery slideshow plugin just on the homepage
	//wp_register_style( 'flexslider', get_template_directory_uri() . '/css/flexslider.css' );

	// Load all of the styles that need to appear on all pages
	wp_enqueue_style( 'main_style', get_template_directory_uri() . '/style.css' );
	//wp_enqueue_style( 'custom', get_template_directory_uri() . '/css/custom.css' );

	// Conditionally load the FlexSlider CSS on the homepage
	if(is_page('home')) {
		//wp_enqueue_style('flexslider');
	}
	
	
	if( is_page( array('events-search', 'group-search', 'indy-media' , 'groups') ) ){
	
	//----------------------------------------------------- dequeue scripts
	
	wp_dequeue_style( 'pm-styles' );
    wp_deregister_style( 'pm-styles' );
	
	wp_dequeue_style( 'main_style' );
    wp_deregister_style( 'main_style' );
	
	wp_dequeue_style( 'dashicons' );
    wp_deregister_style( 'dashicons' );
	
	wp_dequeue_style( 'wdm-dashicons-font' );
    wp_deregister_style( 'wdm-dashicons-font' );
	
	wp_dequeue_style( 'wp-block-library' );
    wp_deregister_style( 'wp-block-library' );
	

	}
	

}
//add_action('wp_enqueue_scripts', 'theme_styles');
 
 //if ( is_admin() ) {
 //    wp_enqueue_script( 'google-maps', '//maps.googleapis.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&libraries=drawing,geometry&sensor=false' );

//}
//=============================== +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ Events Calendar

//-------------------------------------------------------------- Events Search

 //include 'event-files/ajax_zero.php';
 //include 'event-files/ajax_one.php';
 //include 'event-files/ajax_two.php';












function event_search_scripts() {
	
if( is_page( array('events-search') ) ){
	
	//----------------------------------------------------- dequeue scripts
	
//wp_enqueue_script( 'jquery' );
	wp_enqueue_script( 'google_map_events', 'https://maps.google.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&region=GB&libraries=places', true );
	  wp_enqueue_script( 'events_java', get_template_directory_uri()."/event-files/js/events_java.js", array( 'jquery' ) );

		

  wp_enqueue_style( 'event_search_css', get_stylesheet_directory_uri() . '/event-files/css/event_search.css' );
  wp_enqueue_script( 'markermanager', get_template_directory_uri() . '/event-files/jmap_front/markermanager.js', '', '', true );
//wp_enqueue_script( 'StyledMarker_popup', get_template_directory_uri() . '/event-files/jmap_js/StyledMarker.js', '', '', true );
wp_enqueue_script( 'jquery_metadata', get_template_directory_uri() . '/event-files/jmap_js/jquery.metadata.js', '', '', true );
wp_enqueue_script( 'jquery_jmapping', get_template_directory_uri() . '/event-files/jmap_front/jquery.jmapping.js', '', '', true );
	
    wp_enqueue_script( 'location_map_js', get_template_directory_uri() . '/event-files/js/location-map.js', true ); 
    wp_enqueue_script('jquery-ui-datepicker');
	wp_enqueue_style( 'datepicker-style', get_stylesheet_directory_uri() . '/event-files/css/datepicker.css' );
	wp_enqueue_script( 'events_date_picker', get_template_directory_uri()."/event-files/js/my-datepicker.js" );


  wp_enqueue_style( 'bootstrap_modal_css', get_stylesheet_directory_uri() . '/event-files/css/bootstrap.min.css' );
 //wp_enqueue_style( 'fontawesome_css', get_stylesheet_directory_uri() . '/fontawesome-5/css/all.css' );
   wp_enqueue_style( 'fontawesome_css', get_stylesheet_directory_uri() . '/event-files/css/fontawesome.4.7.min.css' );
   
   
   wp_register_style( 'bootstrap', 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css' );
   wp_enqueue_style('bootstrap');
   wp_register_script( 'bootstrapcdn', 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js' );
   wp_enqueue_script('bootstrapcdn');
  
  
	    }
	}
//add_action('wp_enqueue_scripts', 'event_search_scripts');





//--------------------------------------------------------------- 
//add_action('wp_footer','closeEventsLst');

function closeEventsLst(){ 
	if( is_page( 'events-search' ) ){ ?>

    <script>
	 function closeEventsLst() {
    	jQuery('.events-list').toggleClass('show');
    };
		 //--------------------------------------------------- close list on marker click

	 function closeEvents (){
	  jQuery('.events-list').removeClass('show');
     }
	 
 


    </script>
    
    <?php }
}


 



//=============================== +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ End Events Calendar



//-------------------------------------------------------------- Group Search

 //include 'group-files/group_ajax_shire.php';
 //include 'group-files/group_ajax_name.php';
 //include 'group-files/group_ajax_one.php';
 //include 'group-files/group_ajax_geo.php';
 //include 'group-files/group_ajax_zero.php';
// include 'group-files/group_ajax_zero_edit.php';
  
  
  //include 'map-all-groups-endpoint.php';
  //include 'map-user-endpoint.php';
  

function group_search_scripts() {

if( is_page( array('group-search', 'testmaptransient') ) ){
//wp_enqueue_script( 'jquery' );
	 wp_enqueue_script( 'groups_java', get_template_directory_uri()."/group-files/js/groups_java.js", array( 'jquery' ) );


   wp_enqueue_script( 'jquery_jmapping', get_template_directory_uri() . '/group-files/jmap_group/jquery.jmapping.js', '', '', true );

	wp_enqueue_script( 'google_map_groups', '//maps.googleapis.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&region=GB&libraries=places', true );

 
     // wp_enqueue_script( 'name_autofill', get_template_directory_uri()."/group-files/js/name-autofill.js" );

 
 
 
 
  wp_enqueue_script( 'markermanager', get_template_directory_uri() . '/group-files/jmap_group/markermanager.js', '', '', true );
//wp_enqueue_script( 'StyledMarker_popup', get_template_directory_uri() . '/group-files/jmap_js/StyledMarker.js', '', '', true );
wp_enqueue_script( 'jquery_metadata', get_template_directory_uri() . '/group-files/jmap_group/jquery.metadata.js', '', '', true );
	 wp_enqueue_style( 'group_search_css', get_stylesheet_directory_uri() . '/group-files/css/group_search.css' );

    wp_enqueue_script( 'location_map_js', get_template_directory_uri() . '/group-files/js/location-map.js', true ); 
   // wp_enqueue_script('jquery-ui-datepicker');
	//wp_enqueue_style( 'datepicker-style', get_stylesheet_directory_uri() . '/group-files/css/datepicker.css' );
	//wp_enqueue_script( 'groups_date_picker', get_template_directory_uri()."/group-files/js/my-datepicker.js" );


 // wp_enqueue_style( 'bootstrap_modal_css', get_stylesheet_directory_uri() . '/group-files/css/bootstrap.min.css' );
 //wp_enqueue_style( 'fontawesome_css', get_stylesheet_directory_uri() . '/fontawesome-5/css/all.css' );
   wp_enqueue_style( 'fontawesome_css', get_stylesheet_directory_uri() . '/group-files/css/fontawesome.4.7.min.css' );
   
   
   wp_register_style( 'bootstrap', 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css' );
   wp_enqueue_style('bootstrap');
   wp_register_script( 'bootstrapcdn', 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js' );
   wp_enqueue_script('bootstrapcdn');
  
  
	    }
	}
//add_action('wp_enqueue_scripts', 'group_search_scripts');









//--------------------------------------------------------------- 
//add_action('wp_footer','closeGroupsLst');

function closeGroupsLst(){ 
	if( is_page( 'group-search' ) ){ ?>

    <script>
	 function closeGroupsLst() {
    	jQuery('.groups-list').toggleClass('show');
    };
		 //--------------------------------------------------- close list on marker click

	 function closeGroups(){
	  jQuery('.groups-list').removeClass('show');
     }
	 
 


    </script>
    

    
    <?php }
}




//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ End group Seach






/**
*  ----------------------------------------------------- featured image meta box move
*/   
	function posttype_profile_image() {
	
		remove_meta_box('postimagediv', 'profiles', 'side');
	    add_meta_box('postimagediv', __('Group Image '), 'post_thumbnail_meta_box', 'profiles', 'normal', 'high');
	
	}
	   add_action('do_meta_boxes', 'posttype_profile_image');
	   //--------------------------------------------------------------------------------- change text featured image
	   function change_featured_image_text( $content ) {
	if ( 'profiles' === get_post_type() ) {
		$content = str_replace( 'Set featured image', __( 'Set group image'  ), $content );
		$content = str_replace( 'Remove featured image', __( 'Remove group image'  ), $content );
	}
	return $content;
}
//add_filter( 'admin_post_thumbnail_html', 'change_featured_image_text' );


//------------------------------------------------------------------------------------- post thumbnails / images
function setup_image_sizes() {
    if( function_exists('add_theme_support') ) {
        add_theme_support('post-thumbnails');
    }
    if ( function_exists( 'add_image_size' ) ) {
        add_image_size( 'profile-image', 520, 120, true );
        add_image_size( 'event-image', 65, 65, true );

    }

    function my_image_sizes($sizes){
        $custom_sizes = array(
            'profile-image' => 'Profile image'
        );
        return array_merge( $sizes, $custom_sizes );
    }


  if ( function_exists( 'add_image_size' ) ) {
        add_image_size( 'event-list-thumb', 75, 75, true );
		add_image_size( 'event-window-thumb', 180, 90, true );
		add_image_size( 'event-popup-thumb', 590, 430, true );

		
		add_image_size( 'group-list-thumb', 75, 75, true );
		add_image_size( 'group-window-thumb', 180, 90, true );
		add_image_size( 'group-popup-thumb', 590, 430, true );
		
			add_image_size( 'media-list-thumb', 150, 150, true );
		add_image_size( 'media-popup-thumb', 590, 430, true );
	
	
    }

    add_filter('image_size_names_choose', 'my_image_sizes');
}

add_action( 'after_setup_theme', 'setup_image_sizes' );
//----------------------------------------------------------------------------------------------------------


//------------------------------------------------------------------------------------------- to fix 4.7 bug

//add_filter( 'wp_mail_from', function() {
 //   return 'indyapp@nationalyesregistry.scot';
//} );

//--------------------------------------------------------------------------------------- remove admin bar from front end
function nyr_admin_bar_remove() {
        global $wp_admin_bar;

        /* **edit-profile is the ID** */
        $wp_admin_bar->remove_menu('edit-profile');
		$wp_admin_bar->remove_menu('your-profile');
 }

//add_action('wp_before_admin_bar_render', 'nyr_admin_bar_remove', 0);

//---------------------------------------------------------------------------------- rest api get all users




require 'geojson-users.php';

// Include Custom post type
	require 'custom-post-profile.php';
	
// Include Custom post type
	require 'custom-post-meetings.php';
	
	// Include Custom post type
	require 'custom-post-location.php';
	
		// Include Custom post type
	require 'custom-post-campaigns.php';
		// Include Custom post type
	require 'custom-post-events.php';
	// Include Custom post type
	require 'cpt-endpoints.php';
	// Include Custom post type
	require 'allendpoint.php';
	// Include Custom post type
	//require 'groups-endpoint.php';
	// Include Custom post type
	//require 'users-endpoint.php';
	// Include Custom post type
	require 'user-roles.php';
	// Include Custom post type
	//require 'admin-css.php';
	require 'mapdata.php';
	//require 'map-json-array.php';
    require 'petals-endpoint.php';
	
	//require 'group-endpoint.php';
	
  // require 'all-members-endpoint.php';
  // require 'forums-endpoint.php';	
	require 'chg-user-endpoint.php';
	require 'get-user-endpoint.php';
	require 'priv-msg-endpoint.php';
	require 'new-user-endpoint.php';
    require 'user-file-endpoint.php';
	
    require 'groups-rest-end.php';

   // require 'my-plugin.php';

   require 'protected-endpoint.php';

 
	
//-------------------------------------------------------------------------------------------------- add phone to user table
/*function new_contact_methods( $contactmethods ) {
    $contactmethods['phone'] = 'Phone Number';
    return $contactmethods;
}
add_filter( 'user_contactmethods', 'new_contact_methods', 10, 1 );


function new_modify_user_table( $column ) {
    $column['phone'] = 'Phone';
    return $column;
}
add_filter( 'manage_users_columns', 'new_modify_user_table' );

function new_modify_user_table_row( $val, $column_name, $user_id ) {
    switch ($column_name) {
        case 'phone' :
            return get_the_author_meta( 'phone', $user_id );
            break;
        default:
    }
    return $val;
}
add_filter( 'manage_users_custom_column', 'new_modify_user_table_row', 10, 3 ); */
//------------------------------------------------------------------------------------------------------------- date format
// create/update unixstartdate based on event_type.event_date update
add_action( 'updated_post_meta', 'my_updated_post_meta', 20, 4 );
function my_updated_post_meta( $meta_id, $object_id, $meta_key, $_meta_value ){
    if ( $meta_key == 'date-picker' && 'event_type' == get_post_type( $object_id ) ){
        $unixstartdate = strtotime( $_meta_value );
        update_post_meta( $object_id, 'unixstartdate', $unixstartdate );
    }
}


//--------------------------------------------------------------------hide admin menu parts

//------------------------------------------------------------------------------------------------------------------------



//------------------------------------------------------------------------------------------------------------------


//---------------------------------------------------------------------------- order posts by date picker


//---------------------------------------------------------------------------- front admin bar

add_filter('show_admin_bar', '__return_false');







//------------------------------------------------------------------------------------------------ remove profiles page link


//----------------------------------------------------------------------------------------------------------------------------------- remove add new


//function disable_profiles_new() {
    // Hide sidebar link
   // global $submenu;
   // unset($submenu['edit.php?post_type=profiles'][10]);

    // Hide link on listing page
  //  if (isset($_GET['post_type']) && $_GET['post_type'] == 'profiles') {
  //  }
//}
//add_action('admin_menu', 'disable_profiles_new');
//------------------------------------------------------------ remove add new locations

//function disable_new_posts() {
    // Hide sidebar link
  //  global $submenu;
  //  unset($submenu['edit.php?post_type=location'][10]);

    // Hide link on listing page
   // if (isset($_GET['post_type']) && $_GET['post_type'] == 'location') {
       
   // }
//}
//add_action('admin_menu', 'disable_new_posts');
//--------------------------------------------------------------------------------------------------------------------------

//register_post_type( 'location', array(
  //'capability_type' => 'post',
  //'capabilities' => array(
  //  'create_posts' => 'do_not_allow', // Removes support for the "Add New" function, including Super Admin's
 // ),
 // 'map_meta_cap' => true, // Set to false, if users are not allowed to edit/delete existing posts
//));

//------------------------------------------------------------------------------------- logout link
function wpse_141446_admin_bar_logout( $wp_admin_bar ) {
    if ( is_user_logged_in() ) {
        $wp_admin_bar->add_menu(
            array(
                'id'     => 'my-log-out',
                'parent' => 'top-secondary',
                'title'  => __( 'Log out' ),
                'href'   => wp_logout_url(),
            )
        );
    }
}

//add_action( 'admin_bar_menu', 'wpse_141446_admin_bar_logout', 100 );

//--------------------------------------------------------------------------------------------------tooltips files
	
	
//	add_action( 'wp_enqueue_scripts', 'my_register_javascript', 100 );

function my_register_javascript() {
   if( is_page( 91)  ) {

      wp_enqueue_style( 'lamusica-search', get_template_directory_uri(). '/css/search.css' );
wp_enqueue_style( 'lamusica-boostrap', get_template_directory_uri(). '/css/boostrap.min.css' );
wp_enqueue_script( 'lamusica-search', get_template_directory_uri() . '/js/onpage-search.js', '', '', true );

wp_enqueue_style( 'lamusica-fontawesome', get_template_directory_uri(). '/Font-Awesome-master/css/font-awesome.min.css' );

wp_enqueue_style( 'lamusica-lightbox', get_template_directory_uri(). '/css/jquery.smallipop.css' );

		
wp_enqueue_script( 'lamusica-retina', get_template_directory_uri() . '/js/jquery.smallipop.min.js', '', '', true );
}


}






//------------------------------------------------------------------------------------------------------------------------- image meta box / front page image link

/**
 * Adds a meta box to the post editing screen
 */
function prfx_custom_meta() {
    add_meta_box( 'prfx_meta', __( 'Home Page Link', 'prfx-textdomain' ), 'prfx_meta_callback', array('campaigns', 'profiles', 'Location', 'events', 'meetings') , 'side', 'low' );
}
//add_action( 'add_meta_boxes', 'prfx_custom_meta' );

function prfx_meta_callback( $post ) {
    ?><a href="<?php echo home_url(); ?> "><img src="https://nationalyesregistry.scot/indyapp/wp-content/uploads/2016/11/home-link.png" /></a> <?php
}

/**
 * Adds a meta box to the post editing screen
 */
 

//---------------------------------------------------------------------------------------------------------------------------------- maps meta box








//------------------------------------------------------------------------------------------------------------------------- Date picker

function add_e2_date_picker(){
    
//jQuery UI date picker file
wp_enqueue_script('jquery-ui-datepicker');
//jQuery UI theme css file

wp_enqueue_script('jquery-picker-info',  get_template_directory_uri() .'/js/picker.js');


wp_enqueue_script('jquery-ui-timepicker',  get_template_directory_uri() .'/js/jquery.ui.timepicker.js');

wp_enqueue_style('jquery-css-timepicker', get_template_directory_uri() . '/css/jquery.ui.timepicker.css');

wp_enqueue_style('e2b-admin-ui-css','https://ajax.googleapis.com/ajax/libs/jqueryui/1.9.0/themes/base/jquery-ui.css',false,"1.9.0",false);

	$current_user = wp_get_current_user();
	
	if ( $current_user->user_email != 'mrmofis@gmail.com'){
		wp_enqueue_style( 'admin-theme-styles', get_stylesheet_directory_uri() . '/admin.css' ); 
	
	}

}




        
      

    
           // add_action('admin_enqueue_scripts', 'add_e2_date_picker');  











//------------------------------------------------------------------------------------------------------------------------- hide links for profile
//add_filter('views_edit-profiles','wp37_update_profiles_quicklinks');
 
function wp37_update_profiles_quicklinks($views) {
 
     unset($views['publish']);
	 unset($views['trash']);
	 unset($views['draft']);
     unset($views['all']);
     return $views;
}


//add_filter( 'bulk_actions-edit-profiles', 'my_custom_bulk_actions' );
    function my_custom_bulk_actions( $actions ){
        unset( $actions[ 'bulk_actions' ] );
        return $actions;
    }
//-------------------------------------------------------------------------------------------------- Profile & Location admin redirects


 function disallowed_admin_pages(){
    global $pagenow;
    if($pagenow == 'edit.php' && isset($_GET['post_type']) && $_GET['post_type'] == 'profiles'){
        wp_redirect(admin_url('/post.php?post=7&action=edit', 'https'), 301);
        exit;
    }
	
	 if($pagenow == 'edit.php' && isset($_GET['post_type']) && $_GET['post_type'] == 'location'){
        wp_redirect(admin_url('/post.php?post=9&action=edit', 'https'), 301);
        exit;
    }
	
	 if($pagenow == 'index.php'){
        wp_redirect( home_url());
        exit;
    }
}
//add_action('admin_init', 'disallowed_admin_pages'); 
//----------------------------------------------------------------------------------------------------- reduce message size in users
/*function user_message_size() {
    global $pagenow;
    if($pagenow == 'users.php')echo'<style type="text/css">.wp-core-ui .notice.is-dismissible{width:60%;}</style>';
}
add_action( 'admin_init', 'user_message_size' );


add_action('admin_menu', 'add_custom_menu_position');

function add_custom_menu_position() {
	if ( !current_user_can('administrator') ) {  // If the user is not the administrator remove and add new menus

add_menu_page('FeaturedJobs', 'Featured Jobs', 'edit_posts', 'post.php?post=27&action=edit' ,18); 

add_menu_page( 'About', 'About', 'edit_posts', 'post.php?post=5&action=edit', '', 'dashicons-editor-help', 7 );
}    
} 
 
 if ( ! function_exists( 'toplevel_admin_menu_pages' ) ) {
function toplevel_admin_menu_pages(){
 {  // If the user is not the administrator remove and add new menus
        //Settings
    add_menu_page( 'Home', 'Home', 'edit_posts', 'post.php?post=15&action=edit', '', 'dashicons-admin-home', 6 );
    add_menu_page( 'About', 'About', 'edit_posts', 'post.php?post=15&action=edit', '', 'dashicons-editor-help', 7 );
    add_menu_page( 'Services', 'Services', 'edit_posts', 'post.php?post=15&action=edit', '', 'dashicons-admin-tools', 8 );
    }
  }
add_action( 'admin_menu', 'toplevel_admin_menu_pages' );
}
*/
 
//------------------------------------------------------------------------------------- Preview open in same window

//add_action('admin_footer','preview_same_window');

function preview_same_window(){ ?>
    <script type="text/javascript">
	 jQuery(function($){
      jQuery('.preview.button').unbind().removeAttr('target');
      setTimeout(function(){
       jQuery('.preview.button').unbind().removeAttr('target');
      },500);
    });
    </script>
    <?php
}
//------------------------------------------------------------------------------------------------------------------ hide preview

function posttype_admin_css() {
    global $post_type;
    $post_types = array(
                        /* set post types */
                        'profiles',
						'location',
						'meetings',
						'campaigns',
						'events',
                        
                  );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	#post-preview, #view-post-btn{ background: #7fcd2b; color: #fff; padding: 0; font-size: 1.3em; border: #69a32b 1px solid; 
	line-height: 35px; height: 35px; display: block;}
	 #post-preview, #view-post-btn a { text-shadow: 0 0px 1px #4e8810; padding-left: 90px;  padding-right: 90px; padding-bottom: 8px; padding-bottom: 10px; display: block; }
	.page-title-action,
	#edit-slug-buttons,
	#titlewrap{}
	#sample-permalink a {  }
	#sample-permalink:after{}
	#wp-admin-bar-view .ab-item { }
	#wp-admin-bar-view { }
	#titlediv .inside #edit-slug-box { display:none ; }
	.misc-pub-visibility,
	.edit-timestamp,
	.misc-pub-post-status { display: none; }
	.misc-pub-section #timestamp{ display: none!important; }
	#save-action { display: none; }
	</style>';
}
//add_action( 'admin_head-post-new.php', 'posttype_admin_css' );
//add_action( 'admin_head-post.php', 'posttype_admin_css' );

//----------------------------------------------------------------------------------------------- hide preview


function posttype_admin_delete() {
    global $post_type;
    $post_types = array(
                        /* set post types */
                        'profiles',
						'location',                 
                  );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	.page-title-action,
	div#delete-action { display:none; }
	</style>';
}
//add_action( 'admin_head-post-new.php', 'posttype_admin_delete' );
//add_action( 'admin_head-post.php', 'posttype_admin_delete' );
//====================================================================================
function postype_adminx_delete() {
    global $post_type;
    $post_types = array( 'profiles',  );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	#admin-demo-link-location,
	#admin-demo-link-meetings,
	#admin-demo-link-campaigns,
	#admin-demo-link-events{ display: none!important;}
	</style>';
}
//add_action( 'admin_head-post-new.php', 'postype_adminx_delete' );
//add_action( 'admin_head-post.php', 'postype_adminx_delete' );
//==========================================================================
function postype_admin_delete() {
    global $post_type;
    $post_types = array( 'location',  );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	#postbox-container-2 { margin-top:-20px; }
	#admin-demo-link-profiles
	#admin-demo-link-meetings,
	#admin-demo-link-campaigns,
	#admin-demo-link-events{ display: none!important;}
	</style>';
}
//add_action( 'admin_head-post-new.php', 'postype_admin_delete' );
//add_action( 'admin_head-post.php', 'postype_admin_delete' );
//=========================================================================================================================

function posttype_meetings_delete() {
    global $post_type;
    $post_types = array( 'meetings' );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	.edit-link-meetings{ display:block!important;  float: right; text-align: center; padding: 0;}
	#admin-demo-link-campaigns{ display: none!important;}
	#admin-demo-link-profiles{ display: none!important;}
	#admin-demo-link-campaigns{ display: none!important;}
	#admin-demo-link-events{ display: none!important;}
	</style>';
}
//add_action( 'admin_head-edit.php', 'posttype_meetings_delete' );


function posttype_campaigns_delete() {
    global $post_type;
    $post_types = array( 'campaigns' );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	.edit-link-campaigns{ display:block!important; float: right; text-align: center; padding: 0;}
	#admin-demo-link-location,
	#admin-demo-link-profiles,
	#admin-demo-link-meetings,
	#admin-demo-link-events{ display: none!important;}

	</style>';
}
add_action( 'admin_head-edit.php', 'posttype_campaigns_delete' );

function posttype_events_delete() {
    global $post_type;
    $post_types = array( 'events' );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	.edit-link-events{ display:block!important; float: right; text-align: center; padding: 0;}
	.pronamic-checkboxd { display:none!important;} 
	#admin-demo-link-location,
	#admin-demo-link-profiles,
	#admin-demo-link-meetings,
	#admin-demo-link-campaigns{ display: none!important;}

	</style>';
}
add_action( 'admin_head-edit.php', 'posttype_events_delete' );
//---------------------------------------------------------------------------------------------------------
function posttype_events_map() {
    global $post_type;
    $post_types = array( 'events' );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	.pronamic-checkboxd { display:none!important;} 
	#admin-demo-link-location,
	#admin-demo-link-profiles,
	#admin-demo-link-meetings,
	#admin-demo-link-campaigns{ display: none!important;}


	</style>';
}
add_action( 'admin_head', 'posttype_events_map' );


//-------------------------------------------------------------------------------------------------------------------------- hide view button
function posttype_view_delete() {
    global $post_type;
    $post_types = array( 'meetings','campaigns','events' );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	 .view-btn{ display:none!important}
	</style>';
}
add_action( 'admin_head-post-new.php', 'posttype_view_delete' );

function posttype_cancel_delete() {
    global $post_type;
    $post_types = array( 'meetings','campaigns','events' );
    if(in_array($post_type, $post_types))
    echo '
	<style type="text/css">
	 .cancel-btn{ display:none!important}
	</style>';
}
add_action( 'admin_head-post.php', 'posttype_cancel_delete' );
//------------------------------------------------------------------------------------------------------------------------ profile view meta
add_action( 'add_meta_boxes', 'add_profile_metabox' ); 
function add_profile_metabox() {
	add_meta_box('profile_meta_box', 'View', 'profile_meta_box', 'profiles', 'side', 'high');
}

function profile_meta_box( $post ) {
    ?><a class="view-btn"  href="<?php echo home_url(); ?>/profiles/group-profile/">View Now</a> <?php
}
//------------------------------------------------------------------------------------------------------------------------ location view meta
add_action( 'add_meta_boxes', 'add_location_metabox' ); 
function add_location_metabox() {
	add_meta_box('location_meta_box', 'View', 'location_meta_box', 'location', 'side', 'high');
}

function location_meta_box( $post ) {
    ?><a class="view-btn"  href="<?php echo home_url(); ?>/location/group-location/">View Now</a> <?php
}
//----------------------------------------------------------------------------------------------------------------------- meetings meta view
add_action( 'add_meta_boxes', 'add_meetings_metabox' ); 
function add_meetings_metabox() {
	add_meta_box('meetings_meta_box', 'View', 'meetings_meta_box', 'meetings', 'side', 'high');
}

function meetings_meta_box( $post ) {
    ?><a class="view-btn" href="<?php echo home_url(); ?>/meetings/">View Now</a> 
	<a class="cancel-btn" href="<?php echo home_url(); ?>/wp-admin/edit.php?post_type=meetings">Cancel</a><?php
}

//----------------------------------------------------------------------------------------------------------------------- campaigns meta view
add_action( 'add_meta_boxes', 'add_campaigns_metabox' ); 
function add_campaigns_metabox() {
	add_meta_box('campaigns_meta_box', 'View', 'campaigns_meta_box', 'campaigns', 'side', 'high');
}

function campaigns_meta_box( $post ) {
    ?><a class="view-btn" href="<?php echo home_url(); ?>/campaigns/">View Now</a> 
	<a class="cancel-btn" href="<?php echo home_url(); ?>/wp-admin/edit.php?post_type=campaigns">Cancel</a><?php
}
//----------------------------------------------------------------------------------------------------------------------- events meta view
add_action( 'add_meta_boxes', 'add_events_metabox' ); 
function add_events_metabox() {
	add_meta_box('meetings_meta_box', 'View', 'events_meta_box', 'events', 'side', 'high');
}

function events_meta_box( $post ) {
    ?><a class="view-btn" href="<?php echo home_url(); ?>/events/">View Now</a> 
	<a class="cancel-btn" href="<?php echo home_url(); ?>/wp-admin/edit.php?post_type=events">Cancel</a><?php
}



//------------------------------------------------------------------------------------------------------------- change publish button text

function custom_update_messages( $messages ) {
	global $post, $post_ID;

	$post_types = get_post_types( array( 'show_ui' => true, '_builtin' => false ), 'objects' );

	foreach( $post_types as $post_type => $post_object ) {

		$messages[$post_type] = array(
			0  => '', // Unused. Messages start at index 1.
			1  => sprintf( __( '%s updated. <a href="%s">View %s</a>' ), $post_object->labels->singular_name, esc_url( get_permalink( $post_ID ) ), $post_object->labels->singular_name ),
			2  => __( 'Custom field updated.' ),
			3  => __( 'Custom field deleted.' ),
			4  => sprintf( __( '%s updated.' ), $post_object->labels->singular_name ),
			5  => isset( $_GET['revision']) ? sprintf( __( '%s restored to revision from %s' ), $post_object->labels->singular_name, wp_post_revision_title( (int) $_GET['revision'], false ) ) : false,
			6  => sprintf( __( '%s published. <a href="%s">View %s</a>' ), $post_object->labels->singular_name, esc_url( get_permalink( $post_ID ) ), $post_object->labels->singular_name ),
			7  => sprintf( __( '%s saved.' ), $post_object->labels->singular_name ),
			8  => sprintf( __( '%s submitted. <a target="_blank" href="%s">Preview %s</a>'), $post_object->labels->singular_name, esc_url( add_query_arg( 'preview', 'true', get_permalink( $post_ID ) ) ), $post_object->labels->singular_name ),
			9  => sprintf( __( '%s scheduled for: <strong>%1$s</strong>. <a target="_blank" href="%2$s">Preview %s</a>'), $post_object->labels->singular_name, date_i18n( __( 'M j, Y @ G:i' ), strtotime( $post->post_date ) ), esc_url( get_permalink( $post_ID ) ), $post_object->labels->singular_name ),
			10 => sprintf( __( '%s draft updated. <a target="_blank" href="%s">Preview %s</a>'), $post_object->labels->singular_name, esc_url( add_query_arg( 'preview', 'true', get_permalink( $post_ID ) ) ), $post_object->labels->singular_name ),
			);
	}
	
	return $messages;
	}
add_filter( 'post_updated_messages', 'custom_update_messages' );

//------------------------------------------------------------------------------------------------------------- change publish button text


add_filter( 'gettext', 'change_publish_button', 10, 2 );

function change_publish_button( $translation, $text ) {

if ( $text == 'Publish' || $text == 'Update' )
    return 'Save';

return $translation;
}

//------------------------------------------------------------------------------------------------------------- change preview button text

add_filter( 'gettext', 'change_preview_button', 10, 2 );
function change_preview_button( $translation, $text ) {

if ( $text == 'Preview Changes' )
    return 'View Now';

return $translation;
}

//------------------------------------------------------------------------------------------------------------- change Users to Members
function change_users_menu_label() {
  global $menu;
  global $submenu;
  $menu[70][0] = __('Members');
  $submenu['users.php'][5][0] = __('Members');
  $submenu['users.php'][10][0] = __('Add Members');
  $submenu['users.php'][15][0] = __('Your Profile'); // Change name for categories
  echo '';
}

add_action( 'admin_menu', 'change_users_menu_label' );
 

 //add_action( 'init', 'change_users_object_label' );

  function change_users_object_label() {
  	global $wp_post_types;
  
  	//be sure to set this to the name of your post type!
  	$post_type_name = 'users';
		if( isset( $wp_post_types[ $post_type_name ] ) ) {
			  $labels = &$wp_post_types['users']->labels;
			  $labels->name = __('Members');
			  $labels->singular_name = __('Member');
			  $labels->add_new = __('Add Members');
			  $labels->add_new_item = __('Add Members');
			  $labels->edit_item = __('Edit Members');
			  $labels->new_item = __('Members');
			  $labels->view_item = __('View Members');
			  $labels->search_items = __('Search Members');
			  $labels->not_found = __('No Members found');
			  $labels->not_found_in_trash = __('No Members found in Trash');
		}
  
  }





//------------------------------------------------------------------------------------------------- Hide Administrators from user list

//add_action('pre_user_query','yoursite_pre_user_query');
function yoursite_pre_user_query($user_search) {
    $user = wp_get_current_user();

    if ( $user->roles[0] != 'administrator' ) { 
        global $wpdb;

        $user_search->query_where = 
        str_replace('WHERE 1=1', 
            "WHERE 1=1 AND {$wpdb->users}.ID IN (
                 SELECT {$wpdb->usermeta}.user_id FROM $wpdb->usermeta 
                    WHERE {$wpdb->usermeta}.meta_key = '{$wpdb->prefix}user_level' 
                    AND {$wpdb->usermeta}.meta_value = 0)", 
            $user_search->query_where
        );

    }
} 

//------------------------------------------------------------------------------------------------- hide person from user 
//add_action('pre_user_query','yoursite_pre_user_query2');
function yoursite_pre_user_query2($user_search) {
  global $current_user;
  $username = $current_user->user_login;

  if ($username != 'bracolist@hush.com') { 
    global $wpdb;
    $user_search->query_where = str_replace('WHERE 1=1',
      "WHERE 1=1 AND {$wpdb->users}.user_login != 'bracolist@hush.com'",$user_search->query_where);
  }
}


//add_action('pre_user_query','yoursite_pre_user_query3');
function yoursite_pre_user_query3($user_search) {
  global $current_user;
  $username = $current_user->user_login;

  if ($username != 'jock@nyr.scot') { 
    global $wpdb;
    $user_search->query_where = str_replace('WHERE 1=1',
      "WHERE 1=1 AND {$wpdb->users}.user_login != 'jock@nyr.scot'",$user_search->query_where);
  }
}



//------------------------------------------------------------------------------------------------------------- remove roles from dropdown select
function wdm_user_role_dropdown($all_roles) {

    global $pagenow;

    if( current_user_can('group_editor') && !current_user_can('administrator') && $pagenow == 'users.php' ) {
        // if current user is editor AND current page is user's listing page
        unset($all_roles['administrator']);
		 unset($all_roles['indyapp_member']);
		  unset($all_roles['national_member']);
		   unset($all_roles['national_member']);
		   unset($all_roles['national_editor']);
		    unset($all_roles['regional_admin']);
		 
    }

    return $all_roles;
}
//add_action('editable_roles','wdm_user_role_dropdown');

function user_role_dropdown($all_roles) {

    global $pagenow;

    if( current_user_can('group_editor') && $pagenow == 'user-new.php' ) {
        // if current user is editor AND current page is user's listing page
        unset($all_roles['administrator']);
		 unset($all_roles['restricted_member']);
		  unset($all_roles['indyapp_member']);
		 unset($all_roles['national_admin']);
		 unset($all_roles['national_member']);
		  unset($all_roles['regional_admin']);
		  		   unset($all_roles['national_editor']);


    }
	
	if( current_user_can('group_editor') && $pagenow == 'user-new-internet.php' ) {
        // if current user is editor AND current page is user's listing page
        unset($all_roles['administrator']);
		 unset($all_roles['restricted_member']);
		  unset($all_roles['indyapp_member']);
		  unset($all_roles['national_admin']);
		  unset($all_roles['national_member']);
		  		   unset($all_roles['national_editor']);

		   unset($all_roles['regional_admin']);
    }

    return $all_roles;
}
//add_action('editable_roles','user_role_dropdown');




/*

function user_role_dropdown2($all_roles) {

    global $pagenow;

    if( current_user_can('group_editor') && $pagenow == 'user-new-internet.php' ) {
        // if current user is editor AND current page is user's listing page
        unset($all_roles['administrator']);
		 unset($all_roles['restricted_member']);
		  unset($all_roles['indyapp_member']);
    }

    return $all_roles;
}
add_action('editable_roles','user_role_dropdown2'); */ 
//------------------------------------------------------------------------------------------------------------- remove national admin role from view

function wdm_user_role_dropdown2($all_roles) {

    global $pagenow;

    if( current_user_can('group_editor') && $pagenow == 'users.php' ) {
        // if current user is editor AND current page is user's listing page
        unset($all_roles['national_admin']);
    }

    return $all_roles;
}
//add_action('editable_roles','wdm_user_role_dropdown2');

function user_role_dropdown2($all_roles) {

    global $pagenow;

    if( current_user_can('group_editor') && $pagenow == 'user-new.php' ) {
        // if current user is editor AND current page is user's listing page
        unset($all_roles['national_admin']);
    }

    return $all_roles;
}
//add_action('editable_roles','user_role_dropdown2');
//--------------------------------------------------------------------------------------





//--------------------------------------------------------------------------------------------------------------------------------- get all users plugin
//-------------------------------------------------------------------------------------------------------------------------- Rest Api user endpoint


//-----------------------------------------------

//--------------------------------------------------------------------------------------------------------------------------------- remove Your Profile button

// Run the function on admin_init
//add_action('admin_init', 'remove_profile_menu');

// Removal function
function remove_profile_menu() {
  global $wp_roles;

  // Remove the menu. Syntax is `remove_submenu_page($menu_slug, $submenu_slug)`
  remove_submenu_page('users.php', 'profile.php');

  /* Remove the capability altogether. Syntax is `remove_cap($role, $capability)`
   * 'Read' is the only capability subscriber has by default, and allows access
   * to the Dashboard and Profile page. You can also remove from a specific user
   * like this:
   * $user = new WP_User(null, $username);
   * $user->remove_cap($capability); 
   */
  $wp_roles->remove_cap('subscriber', 'read');
}

//--------------------------------------------------------------------------------------------------------------------------------- get all sites in list
function theme_list_all_network_sites()
{
    global $wpdb;

    
	
	$result = '';
    $sites = array();
    $blogs = $wpdb->get_results($wpdb->prepare("SELECT * FROM $wpdb->blogs WHERE spam = '0' AND deleted = '0' and archived = '0' and public= %1'"));

    if(!empty($blogs))
    {
        foreach($blogs as $blog)
        {
            $details = get_blog_details($blog->blog_id);

            if($details != false)
            {
                $url = $details->siteurl;
                $name = $details->blogname;

                if(!(($blog->blog_id == 1) && ($show_main != 1)))
                {
                    $sites[$name] = $url;
                }
            }
        }

        ksort($sites);

        $count = count($sites);
        $current = 1;

        foreach($sites as $name=>$url)
        {
            $result.= '<a href="'.$url.'">'.$name.'</a>';
            $result.= ($current == $count) ? "\n" : ' | ';

            ++$current;
        }
    }

    return $result;
}
//add_shortcode('network_list', 'theme_list_all_network_sites');
//------------------------------------------------------------------------------------------------------------------------------ new blog list
// Output a single menu item
function projects_menu_entry($id, $title, $link_self)
{
    global $blog_id;
    if ($id == $blog_id && !$link_self)
        return;
    echo '<p class="sites-list">';
    if ($id == $blog_id)
        echo '<strong>';
    $url = get_home_url($id);
    if (substr($url, -1) != '/') {
        // Note: I added a "/" to the end of the URL because WordPress
        // wasn't doing that automatically in v3.0.4. YMMV.
        $url .= '/';
    }
  echo '<a target="_blank" class="sites-anchor" href="' . $url . '">' . $title . '</a>';
  	//echo $title;
    if ($id == $blog_id)
        echo '</strong>';
    echo '</p>';
}
// Output the whole menu
// If $link_self is false, skip the current site -
// used to display the menu on the homepage
function projects_menu($link_self = true)
{
    global $wpdb;
    echo '<ul id="site_list">';
    projects_menu_entry(1, 'Home', $link_self);
    $blogs = $wpdb->get_results("
        SELECT blog_id
        FROM {$wpdb->blogs}
        WHERE site_id = '{$wpdb->siteid}'
        AND spam = '0'
        AND deleted = '0'
        AND archived = '0'
        AND blog_id != 1
		ORDER BY blog_id ASC
    ");
	//$blogs = $wpdb->get_col( $wpdb->prepare( $query, $wpdb->siteid) );

    $sites = array();
    foreach ($blogs as $blog) {
        $sites[$blog->blog_id] = get_blog_option($blog->blog_id, 'blogname');
		
    }
    natsort($sites);
    foreach ($sites as $blog_id => $blog_title) {
        projects_menu_entry($blog_id, $blog_title, $link_self);
    }
    echo '</ul>';
}
// Adds a [bloglist] shortcode, so I can embed the menu into the static homepage.
// Note: I originally put it directly into the template, but that didn't work
// with WPtouch.

//----------------------------------------------------------------------


function projects_menu_entry2($id, $title, $link_self)
{
    global $blog_id;
    if ($id == $blog_id && !$link_self)
        return;
    echo '<p class="sites-list-2">';
    if ($id == $blog_id)
        echo '<strong>';
    $url = get_home_url($id);
   
  echo '<a class="sites-anchor-2" target="_blank" href="' . $url . '">' . $title . '</a>';
  	//echo $title;
    if ($id == $blog_id)
        echo '</strong>';
    echo '</p>';
}
// Output the whole menu
// If $link_self is false, skip the current site -
// used to display the menu on the homepage
function projects_menu2($link_self = true)
{
    global $wpdb;
    echo '<ul id="site_list">';
    projects_menu_entry2(1, 'Home', $link_self);
    $blogs = $wpdb->get_results("
        SELECT blog_id
        FROM {$wpdb->blogs}
        WHERE site_id = '{$wpdb->siteid}'
        AND spam = '0'
        AND deleted = '0'
        AND archived = '0'
        AND blog_id != 1
		ORDER BY blog_id ASC
    ");
	//$blogs = $wpdb->get_col( $wpdb->prepare( $query, $wpdb->siteid) );

    $sites = array();
    foreach ($blogs as $blog) {
        $sites[$blog->blog_id] = get_blog_option($blog->blog_id, 'blogname');
		
    }
    natsort($sites);
    foreach ($sites as $blog_id => $blog_title) {
        projects_menu_entry2($blog_id, $blog_title, $link_self);
    }
    echo '</ul>';
}
// Adds a [bloglist] shortcode, so I can embed the menu into the static homepage.
// Note: I originally put it directly into the template, but that didn't work
// with WPtouch.
//add_shortcode('editor_login', function($atts)
//{
  //  projects_menu2(false);
 

//---------------------------------------------------------------------------------------------------------------------------------------------


 
 


 //------------------------------------------------------------------------------------------------------ change Posts colum name
 
//add_filter('manage_users_columns', 'column_posts');

function column_posts( $columns ) 
{
    $columns['posts'] = 'Tasks Completed';
    return $columns;
}

//add_filter('manage_users_columns', 'column_names');
function column_names( $columns ) {
  unset($columns['name']);
  return $columns;
}
//-------------------------------------------------------------------------------------------------------------------------------

function blogs_of_user( $id ) {
    $blogs = get_blogs_of_user( $id );
    $html = '<ul>';
    foreach( $blogs as $blog ) {
        $html .= '<li>';
            $html .= '<a href="' . $blog->siteurl . '">' . $blog->blogname . '</a>';
        $html .= '</li>';
    }
    $html .= '</hl>';

    return $html;
}

//add_shortcode( 'get_all_users_site', 'get_all_users_site_cb' );
function get_all_users_site_cb() {
    global $wpdb;
    $html = '';
    $allusers = $wpdb->get_results( "SELECT ID, user_nicename FROM {$wpdb->users}" );
    foreach ( $allusers as $u ) {
        $html .= $u->user_nicename;
        $html .= blogs_of_user( $u->ID );
    }
}


  //------------------------------------------------------------------------------------------ trim date-picker expired posts
 

//----------------------------------------------------------------------------------------------------------- remove menu items if not admin
function remove_menus()
{
    global $menu;
    global $current_user;
    get_currentuserinfo();

    if($current_user->user_level < 10)
    {
        $restricted = array(__('Pages'),
                            __('Media'),
                            __('Links'),
                            __('Custom Post Name'),
                            __('Comments'),
                            __('Appearance'),
                            __('Plugins'),
                            __('Users'),
                            __('Tools'),
                            __('Settings'),
                            __('Posts'),

        );
        end ($menu);
        while (prev($menu)){
            $value = explode(' ',$menu[key($menu)][0]);
            if(in_array($value[0] != NULL?$value[0]:"" , $restricted)){unset($menu[key($menu)]);}
        }// end while

    }// end if
}
//add_action('admin_menu', 'remove_menus');



//add_action('template_redirect', 'last_mod_header');

//--------------------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------------------------------======




//========================================================================================= 


//create your function, that runs on cron
function myprefix_cron_function() {
    
	
	$now = date("Y-m-d");
    $today  = date("Y-m-d", strtotime($now));
    // Set our query arguments
    $args = array(
        'fields'         => 'ids', // Only get post ID's to improve performance
        'post_type'    => array('events','meetings'),
        'post_status'    => 'expired',
        'posts_per_page' => -1,
         'meta_query' => array(
					  array(
						'key' => 'date_picker',
						'value' => $today,
						'compare' => '<=',
						'type' => 'DATE'
  ))
);
    
    $q = get_posts( $args );

    // Check if we have posts to delete, if not, return false
    if ( !$q )
        return false;

    // OK, we have posts to delete, lets delete them
    foreach ( $q as $id )
        wp_trash_post( $id );
	
}






//add_action( 'init', 'register_daily_post_delete_event');

function register_daily_post_delete_event(){

    // As example, we need to get posts that has expired more than 7days ago
   // $past = strtotime( "today" ); //httpss://www.the-art-of-web.com/php/strtotime/
	//$today = date('Y-m-d', strtotime('-23 hours'));
	$now = date("Y-m-d");
    $today  = date("Y-m-d", strtotime('+23 hours', $now));
    // Set our query arguments
    $args = array(
        'fields'         => 'ids', // Only get post ID's to improve performance
        'post_type'    => 'events',
        'post_status'    => 'expired',
        'posts_per_page' => -1,
         'meta_query' => array(
					  array(
						'key' => 'date_picker',
						'value' => $today,
						'compare' => '<=',
						'type' => 'DATE'
  ))
);
    
    $q = get_posts( $args );

    // Check if we have posts to delete, if not, return false
    if ( !$q )
        return false;

    // OK, we have posts to delete, lets delete them
    foreach ( $q as $id )
        wp_delete_post( $id );
} 


//--------------------------------------------------------------------------- delete meetings

//add_action( 'init', 'register_daily_post_delete_meeting');

function register_daily_post_delete_meeting(){
    // As example, we need to get posts that has expired more than 7days ago
   // $past = strtotime( "today" ); //httpss://www.the-art-of-web.com/php/strtotime/
	$today = date('Y-m-d', strtotime('-23 hours'));
    // Set our query arguments
    $args = array(
        'fields'         => 'ids', // Only get post ID's to improve performance
        'post_type'    =>  array ('meetings','events'),
        'post_status'    => 'published',
        'posts_per_page' => -1,
         'meta_query' => array(
					  array(
						'key' => 'date_picker',
						'value' => $today,
						'compare' => '<=',
						'type' => 'DATE'
  ))
);
    
    $q = get_posts( $args );

    // Check if we have posts to delete, if not, return false
    if ( !$q )
        return false;

    // OK, we have posts to delete, lets delete them
    foreach ( $q as $id )
        wp_trash_post( $id );  
} 

//--------------------------------------------

//update_option('default_role','indyapp_member');


//--------------------------------------------------------------------------------------------------- ajax sign up


//require_once( get_template_directory() . '/libs/custom-ajax-auth.php' );

//-----------------------------------------------------------------


/*
 * Copy the contents of this file into your theme's functions.php or place this file in your
 * theme's folder and include it like this: <?php include_once('ft-hide-admin-users.php');?>
 * 
 * Visit http://fullthrottledevelopment.com/how-to-hide-the-adminstrator-on-the-wordpress-users-screen
 * for more help
 */
 
// Enqueue jQuery


// Remove administrator from dropdowns
//add_action( 'editable_roles' , 'ft_hide_adminstrator_editable_roles' );
function ft_hide_adminstrator_editable_roles( $roles ){
	if ( isset( $roles['administrator'] ) && !current_user_can('level_10') ){
		unset( $roles['administrator'] );
	}
	return $roles;
}






//Enqueue the Dashicons script
// enqueue Dashicons
//add_action( 'wp_enqueue_scripts', 'wdm_enqueue_dashicons' );
function wdm_enqueue_dashicons() {
    // wp_enqueue_style( 'wdm-dashicons-font', get_stylesheet_directory_uri(), array('dashicons'), '1.0' );
}


//---------------------------------------- REORDER USERS



//-------------------------------------------------------- silence migrate.min warning

// silencer script
function jquery_migrate_silencer() {
    // create function copy
    $silencer = '<script>window.console.logger = window.console.log; ';
    // modify original function to filter and use function copy
    $silencer .= 'window.console.log = function(tolog) {';
    // bug out if empty to prevent error
    $silencer .= 'if (tolog == null) {return;} ';
    // filter messages containing string
    $silencer .= 'if (tolog.indexOf("Migrate is installed") == -1) {';
    $silencer .= 'console.logger(tolog);} ';
    $silencer .= '}</script>';
    return $silencer;
}

// for the frontend, use script_loader_tag filter
//add_filter('script_loader_tag','jquery_migrate_load_silencer', 10, 2);
function jquery_migrate_load_silencer($tag, $handle) {
    if ($handle == 'jquery-migrate') {
        $silencer = jquery_migrate_silencer();
        // prepend to jquery migrate loading
        $tag = $silencer.$tag;
    }
    return $tag;
}

// for the admin, hook to admin_print_scripts
//add_action('admin_print_scripts','jquery_migrate_echo_silencer');
//function jquery_migrate_echo_silencer() {echo jquery_migrate_silencer();}

//----------------------- replace error message when registering

//add_filter('gettext', 'mycustom_func');
function mycustom_func($translated_text){
    if($translated_text == 'Sorry, that username already exists!'){
        $translated_text = 'Sorry, that email already exists!';
    }
    return $translated_text;
}

//---------------------------- replace message

//add_filter('gettext', 'mycustom_func2');
function mycustom_func2($translated_text2){
    if($translated_text2 == 'Sorry, you are not allowed to edit this item.'){
        $translated_text2 = 'Sorry, you are not an Editor for this group.';
    }
    return $translated_text2;
}


function ac_custom_column_settings_1b0b3d99() {

	ac_register_columns( 'wp-users', array(
		array(
			'columns' => array(
				'5aaab0f519b13' => array(
					'type' => 'column-display_name',
					'label' => 'Member Name',
					'width' => '15',
					'width_unit' => '%',
					'sort' => 'on',
					'name' => '5aaab0f519b13'
				),
				'email' => array(
					'type' => 'email',
					'label' => 'Email',
					'width' => '20',
					'width_unit' => '%',
					'edit' => 'off',
					'sort' => 'on',
					'filter' => 'off',
					'filter_label' => '',
					'name' => 'email'
				),
				'role' => array(
					'type' => 'role',
					'label' => 'Role',
					'width' => '15',
					'width_unit' => '%',
					'edit' => 'off',
					'sort' => 'off',
					'filter' => 'off',
					'filter_label' => '',
					'name' => 'role'
				),
				'posts' => array(
					'type' => 'posts',
					'label' => 'Tasks Completed',
					'width' => '',
					'width_unit' => '%',
					'sort' => 'off',
					'name' => 'posts'
				)
			),
			
		)
	) );
}
//add_action( 'ac/ready', 'ac_custom_column_settings_1b0b3d99' );


	// private message css
//wp_enqueue_style('pm-styles', get_template_directory_uri() . '/tab-style.css');

//------------------------------------------------------------- slide nav

function my_custom_java() {
    echo '


 <style>

#map-canvas {
        height: 400px;
        width: 100%;
		background: #555;
       }
	   #map-outer { 
	   padding: 20px;}
	   
	   
	   #info {
  color: #222;
}

.lngLat {
  color: #fff;
  margin-bottom: 5px;
}
.lngLat .one {
  padding-left: 250px;
}
.lngLat .two {
  padding-left: 34px;
}

#clipboard-btn {
  float: left;
  margin-right: 10px;
  padding: 6px 8px;
  -moz-border-radius: 3px;
  -webkit-border-radius: 3px;
  border-radius: 3px;
}

#info {
  height: 140px;
 margin: 0 auto;
 display: block;
  margin-bottom: 30px;
  border: solid 2px #eee;
  -moz-border-radius: 3px;
  -webkit-border-radius: 3px;
  border-radius: 3px;

}

#info, .lngLat {
  font-family: arial, sans-serif;
  font-size: 13px;
  padding-top: 10px;
    max-width: 280px;

}
	   
	   
	   
	   
	   
</style>

';
}
//add_action('wp_head', 'my_custom_java');


// Add hook for admin <head></head>
//add_action('admin_head', 'my_custom_java');


//------------------------------------------------------- new menu bar items

 




//----------------------------------- allow untrash meetings and events	
	
	
function delete_date_events() {
	global $post;
	$allposts = get_posts( 'numberposts=-1&post_type=events&post_status=trash' );
    foreach( $allposts as $postinfo ) {
    delete_post_meta( $postinfo->ID, 'date_picker', '' );
	
}}
add_action('init', 'delete_date_events');
	
function delete_date_meetings() {
	global $post;
	$allposts = get_posts( 'numberposts=-1&post_type=meetings&post_status=trash' );
    foreach( $allposts as $postinfo ) {
    delete_post_meta( $postinfo->ID, 'date_picker', '' );
	
}}
//add_action('init', 'delete_date_meetings');
	
 
 

 
 
 
 
 
 





   // require 'geojson-endpoint-areas.php';
    //require 'geojsonSet-endpoint.php';
    //require 'geojson-endpoint.php';
    require 'geojson-all-groups.php';

//--------------------------------------------------------------------------------- Admin Area Location tabs

 function orn_admin_register() {
    
     

       wp_enqueue_script( 'google-maps', 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&libraries=drawing' );
       
       

            wp_enqueue_script( 'bootstrap.min.js', get_template_directory_uri()."/js/bootstrap.min.js", array( 'jquery' ) );
            wp_enqueue_script( 'mytab.js', get_template_directory_uri()."/js/mytab.js");
           //wp_enqueue_script( 'mymap.js', get_template_directory_uri()."/js/mymap.js");
		   
		   if($pagenow == 'edit.php' && isset($_GET['post_type']) && $_GET['post_type'] == 'location'){

		    wp_enqueue_script( 'area_Create.js', get_template_directory_uri()."/js/area_Create.js");
		    wp_enqueue_script( 'area_View.js', get_template_directory_uri()."/js/area_View.js");
			
		   }

            wp_enqueue_style( 'lamusica-fontawesome', get_template_directory_uri(). '/Font-Awesome-master/css/font-awesome.min.css' );

      wp_enqueue_style('mytabcss.css', get_template_directory_uri().'/css/mytabcss.css', false);
    }

 //  add_action( 'admin_enqueue_scripts', 'orn_admin_register' ); 

 
 //--------------------------------------------------------------------------------------------------------
 

//--------------------------------------------------------------------------------------------------------


 function send_emails_on_new_event( $post ) {
 $blogname = wp_specialchars_decode(get_option('blogname'), ENT_QUOTES);
 $tag = ' has updated their group bounds .';
 $title = $blogname . $tag   ;
 ///nationalyesregistry@gmail.com
   
 		$current_user = wp_get_current_user();

      $emails  = 'mrmofis@gmail.com';

    $headers = 'From: Indyapp Admin <mrmofis@gmail.com>';
   // $title   = '' ;
    $message = 'Pease visit and approve!  ';
	$message .= get_bloginfo('url') .'/group-area-postcodes/';
	
	//$args = array( 'role'    => 'group_editor',);
   //$users = get_users( $args );

    if ( get_post_type( $post->ID ) === 'location' ) {
		//foreach ( $users as $user ) {

        wp_mail( $emails, $title, $message, $headers );
		
//}
    }
}
//add_action( 'pre_post_update', 'send_emails_on_new_event' );



//---------------------------------------------------------------------------------------------------

//-------------------------------------------- postcode map


function my_page_postcode()
{
   if( is_page( array( 'group-area-postcodes' ) ) )
    {
//wp_enqueue_script( 'google_js', 'http://maps.google.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&libraries=places,drawing,geometry '', '' ); 
//http://maps.google.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&libraries=places,drawing,geometry&#038;sensor=false
		
        // wp_deregister_script('jquery');
      // wp_register_script('jquery', false);
         wp_enqueue_script( 'moe-mapfunctions.js', get_template_directory_uri() . '/js/postcodes/mapfunctions_postcode_output.js' );
	 wp_enqueue_script( 'moe-polygonfunctions.js', get_template_directory_uri() . '/js/postcodes/polygonfunctions_postcode_output.js' );
	   wp_enqueue_script( 'moe-coord-transform.js', get_template_directory_uri(). '/js/postcodes/coord-transform.js' );
	          wp_enqueue_script( 'moe-geotools.js', get_template_directory_uri(). '/js/postcodes/geotools.js' );
		wp_enqueue_script( 'moe-markerclusterer.js', get_template_directory_uri(). '/js/postcodes/markerclusterer.js' );
          wp_enqueue_style('moe-mapstyle', get_template_directory_uri() . '/css/mapstyle.css');


    }
}
//add_action( 'wp_enqueue_scripts', 'my_page_postcode' );

//------------------------------------------------------------------------------------------------------- Single Area Map
 
 function area_single_map()
{
   if( is_page( array( 'single-group-area' ) ) )
    {
		wp_enqueue_script( 'google_js', 'https://maps.googleapis.com/maps/api/js?key=AIzaSyCqdVTrCY3q88htGoUEnPHGEUwAD0oesBE&#038;libraries=places', '', '' ); 
         wp_enqueue_script( 'area_single_map.js', get_template_directory_uri() . '/js/area_single_map.js' );

    }
}
//add_action( 'wp_enqueue_scripts', 'area_single_map' );



/**
*  --------------------------------------------------------------------------------------------------- event image meta box move
*/   
	function posttype_event_image() {
	if ( 'events' === get_post_type() ) {
		remove_meta_box('postimagediv', 'events', 'side');
	    add_meta_box('postimagediv', __('Event Image '), 'post_thumbnail_meta_box', 'events', 'normal', 'high');
	
	}
	}
	   add_action('do_meta_boxes', 'posttype_event_image');
	   //--------------------------------------------------------------------------------- change text event image
	   function change_event_image_text( $content ) {
	if ( 'events' === get_post_type() ) {
		$content = str_replace( 'Set featured image', __( 'Add event image'  ), $content );
		$content = str_replace( 'Remove featured image', __( 'Remove event image'  ), $content );
	}
	return $content;
}
//add_filter( 'admin_post_thumbnail_html', 'change_event_image_text' );
 
//-------------------------------------------------------------------------------------------------------------------------


//add_action( 'admin_head-post-new.php', 'posttype_location_popup' );
//add_action( 'admin_head-post.php', 'posttype_location_popup' );

//zzzadd_filter( 'post_updated_messages', 'codex_book_updated_messages' );
/**
 * Book update messages.
 *
 * See /wp-admin/edit-form-advanced.php
 *
 * @param array $messages Existing post update messages.
 *
 * @return array Amended post update messages with new CPT update messages.
 */


//-----------------------------------------///////////////////////////////////////////// Profile page fields




//update_user_meta($user_id, 'description', $website);

//if($pagenow == 'edit.php' && isset($_GET['post_type']) && $_GET['post_type'] == 'location'){

//add_action( 'admin_head', 'tr_head' );
	// }
	 
function tr_head() {
	
	echo ' <link rel="preload" href="https://nationalyesregistry.scot/indyapp/group-areas.json" as="json" type="application/json" crossorigin>
	<link rel="preload" href="https://nationalyesregistry.scot/indyapp/area_Set_markers.json" as="json" type="application/json" crossorigin>
	<link rel="preload" href="https://nationalyesregistry.scot/indyapp/area_Not_set.json" as="json" type="application/json" crossorigin> ';
	//$GLOBALS['tr_time_start'] = microtime( true );
}





?>