<?php
include_once("libs/libs-sysconfig.php");
//---
$cart = new Cart;

class Cart
{
    public function __construct()
    {
        global $nc_cfg;
        //---
        switch($_REQUEST['func']){
            case "add_product":
                $this->addViaProduct();
                break;
            case "add_list":
                $this->addViaProductList();
                break;
            case "replace":
                $this->replace();
                break;
            case "del":
                $this->del();
                break;
            case "addone":
                $this->addone();
                break;
            case "replace_coupon":
                $this->replaceCoupon();
                break;
            case "replace_points":
                $this->replacePoints();
                break;
            case "replace_offer_discount":
                $this->replaceOfferDiscount();
                break;
            case "add_tryeat":
                $this->tryeat();
                break;
            case "add_blogger_addone":
                $this->bloggerAddone();
                break;
            case "add_bloggerAddone":
                $this->AddBloggerAddone();
                break;
            case "add_list2":
                $this->addViaProductList2();
                break;
            case "del2":
                $this->del2();
                break;
            case "copy_cart":
                $this->copyCart();
                break;
            default:    //show count
                $this->showCount();
                break;
        }
    }

    private function addViaProduct()
    {
        if(empty($_SESSION['cart']))
        {
            $_SESSION['cart'][] =array(
                'id'        =>$_REQUEST['p_id'],
                'name'      =>$_REQUEST['p_name'],
                'spec'      =>$_REQUEST['p_spec'],
                'price'     =>$_REQUEST['p_price'],
                'amount'    =>$_REQUEST['p_amount'],
                'note'      =>$_REQUEST['p_note'],
                'point'     =>$_REQUEST['p_point'],
            );
            if(!empty($_REQUEST['blogger_id'])) $_SESSION['blogger_id'] =$_REQUEST['blogger_id'];
        }
        else
        {
            //--- 搜尋產品及其規格已存在購物車內累加數量
            foreach($_SESSION['cart'] as $key => $val){
                if($_SESSION['cart'][$key]['id']==$_REQUEST['p_id'])
                {
                    $spec =(!empty($_REQUEST['p_spec'])) ? $_REQUEST['p_spec'] : "";
                    if($_SESSION['cart'][$key]['spec']==$spec)
                    {
                        $amount =$_SESSION['cart'][$key]['amount']+$_REQUEST['p_amount'];
                        $_SESSION['cart'][$key]['amount'] =$amount;
                        $finded =1;
                        break;
                    }
                }
            }
            //--- 產品不存在購物車內就放入
            if(empty($finded))
            {
                $_SESSION['cart'][] =array(
                    'id'        =>$_REQUEST['p_id'],
                    'name'      =>$_REQUEST['p_name'],
                    'spec'      =>$_REQUEST['p_spec'],
                    'price'     =>$_REQUEST['p_price'],
                    'amount'    =>$_REQUEST['p_amount'],
                    'note'      =>$_REQUEST['p_note'],
                    'point'     =>$_REQUEST['p_point'],
                );
                if(!empty($_REQUEST['blogger_id'])) $_SESSION['blogger_id'] =$_REQUEST['blogger_id'];
            }
        }
        //var_dump($_REQUEST);
        //var_dump($_SESSION['cart']);
    }

    private function addViaProductList()
    {
        if(empty($_SESSION['cart']))
        {
            $_SESSION['cart'][] =array(
                'id'        =>$_REQUEST['id'],
                'name'      =>$_REQUEST['name'],
                'spec'      =>$_REQUEST['spec'],
                'price'     =>$_REQUEST['price'],
                'amount'    =>$_REQUEST['amount'],
                'note'      =>$_REQUEST['note'],
            );
        }
        else
        {
            //--- 搜尋產品及其規格已存在購物車內累加數量
            foreach($_SESSION['cart'] as $key => $val){
                if($_SESSION['cart'][$key]['id']==$_REQUEST['id'])
                {
                    $spec =(!empty($_REQUEST['spec'])) ? $_REQUEST['spec'] : "";
                    if($_SESSION['cart'][$key]['spec']==$spec)
                    {
                        $amount =$_SESSION['cart'][$key]['amount']+$_REQUEST['amount'];
                        $_SESSION['cart'][$key]['amount'] =$amount;
                        $finded =1;
                        break;
                    }
                }
            }
            //--- 產品不存在購物車內就放入
            if(empty($finded))
            {
                $_SESSION['cart'][] =array(
                    'id'        =>$_REQUEST['id'],
                    'name'      =>$_REQUEST['name'],
                    'spec'      =>$_REQUEST['spec'],
                    'price'     =>$_REQUEST['price'],
                    'amount'    =>$_REQUEST['amount'],
                    'note'      =>$_REQUEST['note'],
                );
            }
        }
    }

    private function replace()
    {
        global $nc_cfg;
        //---
        if(!empty($_POST) && !empty($_SESSION['cart']))
        {
            foreach($_POST['amount'] as $key =>$val){
                $_SESSION['cart'][$key]['amount'] =$val;
            }
        }
    }

    private function replaceCoupon()
    {
        global $nc_cfg;
        //---
        $_POST['coupon'] =(!empty($_POST['coupon'])) ? $_POST['coupon'] : 0;
        $_SESSION[$nc_cfg['sess_cookie_name']]['coupon'] =(!empty($_SESSION[$nc_cfg['sess_cookie_name']]['coupon'])) ? $_SESSION[$nc_cfg['sess_cookie_name']]['coupon'] : 0;
        if(!empty($_POST['coupon']))
        {
            $_SESSION[$nc_cfg['sess_cookie_name']]['points'] =0; //清除紅利點數
            $_SESSION[$nc_cfg['sess_cookie_name']]['discount'] =0; //清除折扣
            $_SESSION[$nc_cfg['sess_cookie_name']]['offer_discount'] =0; //清除折扣碼
        }
        if($_SESSION[$nc_cfg['sess_cookie_name']]['coupon']!=$_POST['coupon']) $_SESSION[$nc_cfg['sess_cookie_name']]['coupon'] =$_POST['coupon'];
    }

    private function replacePoints()
    {
        global $nc_cfg;
        //---
        $_POST['points'] =(!empty($_POST['points'])) ? $_POST['points'] : 0;
        $_SESSION[$nc_cfg['sess_cookie_name']]['points'] =(!empty($_SESSION[$nc_cfg['sess_cookie_name']]['points'])) ? $_SESSION[$nc_cfg['sess_cookie_name']]['points'] : 0;
        if(!empty($_POST['points']))
        {
            $_SESSION[$nc_cfg['sess_cookie_name']]['coupon'] =0; //清除折價券
            $_SESSION[$nc_cfg['sess_cookie_name']]['discount'] =0; //清除折扣
            $_SESSION[$nc_cfg['sess_cookie_name']]['offer_discount'] =0; //清除扣碼
        }
        if($_SESSION[$nc_cfg['sess_cookie_name']]['points']!=$_POST['points']) $_SESSION[$nc_cfg['sess_cookie_name']]['points'] =$_POST['points'];
    }

    private function del()
    {
        if(!empty($_POST) && !empty($_SESSION['cart']))
        {
            $ckey =$_POST['key'];
            unset($_SESSION['cart'][$ckey]);
            $ct =0;
            //--- resort $_SESSION['cart']
            foreach($_SESSION['cart'] as $key => $val){
                if($key>$ckey)
                {
                    $_SESSION['cart'][$ckey] =$_SESSION['cart'][$key];
                    unset($_SESSION['cart'][$key]);
                    $ckey++;
                }
                if($val['note']=="部落客加購商品") $ct++;
            }
            if($ct==count($_SESSION['cart'])) unset($_SESSION['cart']);
            if(count($_SESSION['cart'])==0 && !empty($_SESSION['blogger_id'])) unset($_SESSION['blogger_id']); //清除部落客ID
        }
    }

    private function showCount()
    {
        $data =array();
        if(!empty($_SESSION['cart']))
        {
            $data['count'] =count($_SESSION['cart']);
        }
        else
        {
            $data['count'] =0;
        }
        echo json_encode($data);
    }

    //--- 產品加購放入購物車
    private function addone()
    {
        $result =array();
        if(!empty($_SESSION['cart']))
        {
            $result['status'] ="0";
            foreach($_SESSION['cart'] as $key => $val){
                if($val['id']==$_REQUEST['addone-set-id'])
                {
                    $result['status'] ="1"; //購物車已有上面產品
                    break;
                }
            }
            if($result['status']==1)
            {
                if(!empty($_REQUEST['addone-id']))
                {
                    foreach($_REQUEST['addone-id'] as $key => $val){
                        if(!empty($_REQUEST['addone-amount'][$val]))
                        {
                            //--- 已加入購物車內
                            //--- 搜尋產品及其規格已存在購物車內累加數量
                            $finded =0;
                            foreach($_SESSION['cart'] as $key2 => $val2){
                                if($_SESSION['cart'][$key2]['id']==$val)
                                {
                                    $addoneSpec =(!empty($_REQUEST['addone-spec'][$val])) ? $_REQUEST['addone-spec'][$val] : "";
                                    if($_SESSION['cart'][$key2]['spec']==$addoneSpec)
                                    {
                                        $amount =$_SESSION['cart'][$key2]['amount']+$_REQUEST['addone-amount'][$val];
                                        $_SESSION['cart'][$key2]['amount'] =$amount;
                                        $finded =1;
                                        break;
                                    }
                                }
                            }
                            //--- 尚未加入購物車內
                            if(empty($finded))
                            {
                                $_SESSION['cart'][] =array(
                                    'id'        =>$val,
                                    'name'      =>$_REQUEST['addone-name'][$val],
                                    'spec'      =>(!empty($_REQUEST['addone-spec'][$val])) ? $_REQUEST['addone-spec'][$val] : "",
                                    'price'     =>$_REQUEST['addone-price'][$val],
                                    'amount'    =>$_REQUEST['addone-amount'][$val],
                                    'note'      =>$_REQUEST['addone-set-name']."--加購商品",
                                );
                            }
                        }
                    }
                }
                else
                {
                    $result['status'] ="2"; //未勾選加購產品
                }
            }
        }
        else
        {
            $result['status'] ="0"; //購物車為空
        }
        echo json_encode($result);
        //var_dump($_POST);
        //var_dump($_SESSION['cart']);
    }

    private function replaceOfferDiscount()
    {
        global $nc_cfg,$db;
        //---
        $prefix =$nc_cfg['prefix'];
        //---
        $_POST['offer_discount'] =(!empty($_POST['offer_discount'])) ? $_POST['offer_discount'] : 0;
        $_SESSION[$nc_cfg['sess_cookie_name']]['offer_discount'] =(!empty($_SESSION[$nc_cfg['sess_cookie_name']]['offer_discount'])) ? $_SESSION[$nc_cfg['sess_cookie_name']]['offer_discount'] : "";
        if(!empty($_POST['offer_discount']))
        {
            $_SESSION[$nc_cfg['sess_cookie_name']]['coupon'] =0; //清除折價券
            $_SESSION[$nc_cfg['sess_cookie_name']]['points'] =0; //清除紅利點數
            $_SESSION[$nc_cfg['sess_cookie_name']]['discount'] =0; //清除折扣
        }
        //---
        $sql ="select * from offer_discount where ".$prefix."_od_status =1 and ".$prefix."_od_code = :code and ".$prefix."_od_startdate <= :startdate and ".$prefix."_od_enddate >= :enddate";
        $rs = $db->prepare($sql);
        $rs->setFetchMode(PDO::FETCH_ASSOC);
        $rs->bindValue(":code",$_POST['offer_discount'],PDO::PARAM_STR);
        $rs->bindValue(":startdate",date("Y-m-d"),PDO::PARAM_STR);
        $rs->bindValue(":enddate",date("Y-m-d"),PDO::PARAM_STR);
        $rs->execute();
        $row = $rs->fetch();
        $data =array();
        if(!empty($row))
        {
            if($_POST['money'] >= $_SESSION[$nc_cfg['sess_cookie_name']][$prefix.'_sc_offer_discount_limit'])
            {
                if($_SESSION[$nc_cfg['sess_cookie_name']]['offer_discount'] != $_POST['offer_discount']) $_SESSION[$nc_cfg['sess_cookie_name']]['offer_discount'] =$_POST['offer_discount'];
                $data['status'] =0; //可以使用
                $data['amount'] =$row[$prefix.'_od_discount_amount'];
            }
            else
            {
                $data['status'] =2; //無法使用，未滿底消。
                $data['amount'] =$_SESSION[$nc_cfg['sess_cookie_name']][$prefix.'_sc_offer_discount_limit'];
            }
        }
        else
        {
            $data['status'] =1; //不存在或過期
        }
        echo json_encode($data);
    }

    //--- 試用品放入購物車
    private function tryeat()
    {
        $result =array();
        if(!empty($_REQUEST['tryeat-id']))
        {
            foreach($_REQUEST['tryeat-id'] as $key => $val){
                if(!empty($_REQUEST['tryeat-amount'][$val]))
                {
                    //--- 已加入購物車內
                    //--- 搜尋產品及其規格已存在購物車內累加數量
                    $finded =0;
                    foreach($_SESSION['cart'] as $key2 => $val2){
                        if($_SESSION['cart'][$key2]['id']==$val)
                        {
                            $tryeatSpec =(!empty($_REQUEST['tryeat-spec'][$val])) ? $_REQUEST['tryeat-spec'][$val] : "";
                            if($_SESSION['cart'][$key2]['spec']==$tryeatSpec)
                            {
                                $amount =$_SESSION['cart'][$key2]['amount']+$_REQUEST['tryeat-amount'][$val];
                                $_SESSION['cart'][$key2]['amount'] =$amount;
                                $finded =1;
                                break;
                            }
                        }
                    }
                    //--- 尚未加入購物車內
                    if(empty($finded))
                    {
                        $_SESSION['cart'][] =array(
                            'id'        =>$val,
                            'name'      =>$_REQUEST['tryeat-name'][$val],
                            'spec'      =>(!empty($_REQUEST['tryeat-spec'][$val])) ? $_REQUEST['tryeat-spec'][$val] : "",
                            'price'     =>$_REQUEST['tryeat-price'][$val],
                            'amount'    =>$_REQUEST['tryeat-amount'][$val],
                            'note'      =>"試用品",
                        );
                    }
                }
            }
            //---
            if(!empty($_REQUEST['tryeat-qa1'])) $_SESSION['tryeat-qa1'] =implode(",",$_REQUEST['tryeat-qa1']);
            if(!empty($_REQUEST['tryeat-qa2'])) $_SESSION['tryeat-qa2'] =implode(",",$_REQUEST['tryeat-qa2']);
            if(!empty($_REQUEST['tryeat-qa2'])) $_SESSION['tryeat-qa3'] =implode(",",$_REQUEST['tryeat-qa3']);
            $result['status'] =1;
        }
        else
        {
            $result['status'] =0; //未勾選加購產品
        }
        echo json_encode($result);
    }

    private function bloggerAddone()
    {
        $result =array();
        if(!empty($_SESSION['cart']))
        {
            $result['status'] ="0";
            foreach($_SESSION['cart'] as $key => $val){
                if($val['id']==$_REQUEST['set_id'])
                {
                    $result['status'] ="1"; //購物車已有上面產品
                    break;
                }
            }
            if($result['status']==1)
            {
                //--- 搜尋產品及其規格已存在購物車內累加數量
                foreach($_SESSION['cart'] as $key => $val){
                    if($_SESSION['cart'][$key]['id']==$_REQUEST['id'])
                    {
                        $spec =(!empty($_REQUEST['spec'])) ? $_REQUEST['spec'] : "";
                        if($_SESSION['cart'][$key]['spec']==$spec)
                        {
                            $amount =$_SESSION['cart'][$key]['amount']+$_REQUEST['amount'];
                            $_SESSION['cart'][$key]['amount'] =$amount;
                            $finded =1;
                            break;
                        }
                    }
                }
                //--- 產品不存在購物車內就放入
                if(empty($finded))
                {
                    $_SESSION['cart'][] =array(
                        'id'        =>$_REQUEST['id'],
                        'name'      =>$_REQUEST['name'],
                        'spec'      =>$_REQUEST['spec'],
                        'price'     =>$_REQUEST['price'],
                        'amount'    =>$_REQUEST['amount'],
                        'note'      =>$_REQUEST['note'],
                    );
                }
            }
        }
        else
        {
            $result['status'] ="0"; //購物車為空
        }
        echo json_encode($result);
    }

    private function AddBloggerAddone()
    {
        $result =array();
        if(!empty($_SESSION['cart']))
        {
            $result['status'] ="0";
            foreach($_SESSION['cart'] as $key => $val){
                //if($val['id']==$_REQUEST['set_id'])
                if (in_array($val['id'], explode(',',$_REQUEST['set_id'])))
                {
                    $result['status'] ="1"; //購物車已有上面產品
                    break;
                }
            }
            if($result['status']==1)
            {
                //--- 搜尋產品及其規格已存在購物車內累加數量
                foreach($_SESSION['cart'] as $key => $val){
                    if($_SESSION['cart'][$key]['id']==$_REQUEST['id'])
                    {
                        $spec =(!empty($_REQUEST['spec'])) ? $_REQUEST['spec'] : "";
                        if($_SESSION['cart'][$key]['spec']==$spec)
                        {
                            $amount =$_SESSION['cart'][$key]['amount']+$_REQUEST['amount'];
                            $_SESSION['cart'][$key]['amount'] =$amount;
                            $finded =1;
                            break;
                        }
                    }
                }
                //--- 產品不存在購物車內就放入
                if(empty($finded))
                {
                    $_SESSION['cart'][] =array(
                        'id'        =>$_REQUEST['id'],
                        'name'      =>$_REQUEST['name'],
                        'spec'      =>$_REQUEST['spec'],
                        'price'     =>$_REQUEST['price'],
                        'amount'    =>$_REQUEST['amount'],
                        'note'      =>$_REQUEST['note'],
                    );
                }
            }
        }
        else
        {
            $result['status'] ="0"; //購物車為空
        }
        echo json_encode($result);
    }

    private function addViaProductList2()
    {
        if(empty($_SESSION['cart2']))
        {
            $_SESSION['cart2'][] =array(
                'id'                =>$_REQUEST['id'],
                'name'              =>$_REQUEST['name'],
                'spec'              =>$_REQUEST['spec'],
                'price'             =>$_REQUEST['price'],
                'amount'            =>$_REQUEST['amount'],
                'note'              =>$_REQUEST['note'],
                'full_piece_flag'   =>$_REQUEST['full_piece_flag'],
            );
        }
        else
        {
            //--- 搜尋產品及其規格已存在購物車內累加數量
            foreach($_SESSION['cart2'] as $key => $val){
                if($_SESSION['cart2'][$key]['id']==$_REQUEST['id'])
                {
                    $spec =(!empty($_REQUEST['spec'])) ? $_REQUEST['spec'] : "";
                    if($_SESSION['cart2'][$key]['spec']==$spec)
                    {
                        $amount =$_SESSION['cart2'][$key]['amount']+$_REQUEST['amount'];
                        $_SESSION['cart2'][$key]['amount'] =$amount;
                        $finded =1;
                        break;
                    }
                }
            }
            //--- 產品不存在購物車內就放入
            if(empty($finded))
            {
                $_SESSION['cart2'][] =array(
                    'id'                =>$_REQUEST['id'],
                    'name'              =>$_REQUEST['name'],
                    'spec'              =>$_REQUEST['spec'],
                    'price'             =>$_REQUEST['price'],
                    'amount'            =>$_REQUEST['amount'],
                    'note'              =>$_REQUEST['note'],
                    'full_piece_flag'   =>$_REQUEST['full_piece_flag'],
                );
            }
        }
    }

    private function del2()
    {
        if(!empty($_POST) && !empty($_SESSION['cart2']))
        {
            $ckey =$_POST['key'];
            unset($_SESSION['cart2'][$ckey]);
            //--- resort $_SESSION['cart']
            foreach($_SESSION['cart2'] as $key => $val){
                if($key>$ckey)
                {
                    $_SESSION['cart2'][$ckey] =$_SESSION['cart2'][$key];
                    unset($_SESSION['cart2'][$key]);
                    $ckey++;
                }
            }
        }
    }

    private function copyCart()
    {
        $data =array();
        if(!empty($_SESSION['cart2']))
        {
            foreach($_SESSION['cart2'] as $key =>$val){
                $_SESSION['cart'][] =$_SESSION['cart2'][$key];
            }
            if(!empty($_SESSION['cart'])) unset($_SESSION['cart2']);
            $data['status'] =1;
        }
        else
        {
            $data['status'] =2;
        }
        echo json_encode($data);
    }
}
?>