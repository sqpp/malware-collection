<?php

	require '../includes.php';
	//require 'isleagueready.php';

	$db = Connect();

	$TeamID = filter_input(INPUT_POST, 'TeamID', FILTER_SANITIZE_STRING);
	$WhichMatch = filter_input(INPUT_POST, 'WhichMatch', FILTER_SANITIZE_STRING);
	$WhichTactic = filter_input(INPUT_POST, 'WhichTactic', FILTER_SANITIZE_STRING);
	$Value = filter_input(INPUT_POST, 'Value', FILTER_SANITIZE_STRING);
	
	// Check for errors in input or unacceptable numbers (e.g negative numbers in this case).
	// Report an error and cancel the script if any of these fail.
	
	if (!is_numeric($TeamID) or !is_numeric($WhichMatch) or !is_numeric($WhichTactic)) {
		die ("Something isn't right");
	}

	//die ($TeamID . " " . $WhichMatch . " " . $WhichTactic . " " . $Value);
	//if ( IsLeagueReady ($db, $WhichLeagueID, $WhichDay) == false ) {
	//	die(); // If the synch-check didn't match, kill the program so that the order isn't carried out.
	//}
	
	$FinalValue = $Value;
	// Convert checkbox values (false and true) into integers (0 and 1)
	if (trim($FinalValue) == 'false') { $FinalValue = 0; }
	if (trim($FinalValue) == 'true') { $FinalValue = 1; }
	//die ("Value : " . $Value . " " . gettype($Value) . "    FinalValue : " . $FinalValue . " " . gettype($FinalValue));
	
	try {
		$Team = new Team;
		$Team->Load($TeamID);

		if ($WhichTactic == 1) {
			$Team->TacticsArray[$WhichMatch]->Aggression = $FinalValue;
		} else if ($WhichTactic == 2) {
			$Team->TacticsArray[$WhichMatch]->Approach = $FinalValue;
		} else if ($WhichTactic == 3) {
			$Team->TacticsArray[$WhichMatch]->Marking = $FinalValue;
		} else if ($WhichTactic == 4) {
			 $Team->TacticsArray[$WhichMatch]->TacticalSubs = $FinalValue;
		} else if ($WhichTactic == 5) {
			$Team->TacticsArray[$WhichMatch]->PlayYouthSubs = $FinalValue;
		} else if ($WhichTactic == 6) {
			$Team->TacticsArray[$WhichMatch]->BringOn3rdSub = $FinalValue;
		} else if ($WhichTactic == 7) {
			$Team->TacticsArray[$WhichMatch]->FreshLegs = $FinalValue;
		}
		
		// Re-encode just the tactics part back to the JSON string.
		$Team->TacticsJSON = json_encode($Team->TacticsArray);
			
		$db->beginTransaction();
		
		// Now resave just the tactics section.
        $query = $db->prepare("UPDATE teams SET "
		. "TacticsJSON = :NewTactics "
		. "WHERE ID = :TeamID");
		
		$query->bindParam(':NewTactics', $Team->TacticsJSON, PDO::PARAM_STR);
		$query->bindParam(':TeamID', $TeamID, PDO::PARAM_INT);
		
		$query->execute();
		$db->Commit();
		
	}
	 
	catch (PDOException $ex) {
		Echo $ex->getMessage();
	}
