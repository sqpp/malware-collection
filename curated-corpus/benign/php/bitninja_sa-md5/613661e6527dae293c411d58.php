<?php

require_once('../../config/config.inc.php');

require_once('../../init.php');

require_once ('../../farma_script/functions.php');

//require_once('farmafront.php');

//require_once('controllers/admin/marketingmenuController.php');


//INDIVIDUO UNA CHIAMATA
$action = Tools::getValue('action');
if ($action) {
    //E IN BASE ALLA ACTION LA INVIO ALLA FUNZIONE DEL RELATIVO MODULO CON UNA IF
    //INTERCETTO LA CHIAMATA AJAX PER IL MODULO MARKETING MENU
    if ($action == "marketingMenu") {
        $datiForm = Tools::getValue('dati');
        $numeroCategorie = Tools::getValue('categorie');
        //CICLO I DATI RICEVUTI DALLA CHIAMATA AJAX

        for ($i=0; $i < $numeroCategorie; $i++){
            //SE SONO POPOLATI INSERISCO IL RECORD
            if(!empty($datiForm[$i][1])) {
                $frcm = explode(',',$datiForm[$i][1]);
                $stringa = '';
                $frcms = '';
                for($a=0; $a < count($frcm); $a++){
                    if($frcm[$a] !== ""){
                        $frcms = $frcms.','.$frcm[$a];
                        if($frcms[0] == ','){
                            $frcms = ltrim($frcms, ',');
                        }
                        $idProdotto = Db::getInstance()->getValue("SELECT id_product FROM "._DB_PREFIX_."product WHERE reference = 'FRCM".$frcm[$a]."'");
                        $stringa = $stringa.",".$idProdotto;

                    }
                }
                if($stringa[0] == ','){
                    $stringa = ltrim($stringa, ',');
                }
                $inserimento = 'INSERT INTO cu_ff_marketingmenu (id_categoria, id_prodotto, frcm) VALUES ('.$datiForm[$i][0].', "'.$stringa.'", "'.$frcms.'") ON DUPLICATE KEY UPDATE id_prodotto = "'.$stringa.'", frcm = "'.$frcms.'"';
                Db::getInstance()->execute($inserimento);
            }
            //SE SONO VUOTI ELIMINO IL RECORD DALLA TABELLA
            else{
                Db::getInstance()->execute('DELETE FROM cu_ff_marketingmenu WHERE id_categoria = '.$datiForm[$i][0]);
            }
        }

        echo '<div class="positivo">CONGRATULAZIONI! INSERIMENTO RIUSCITO</div>';
        exit;
    }
    elseif ($action == "marketingCategory"){
        $lingua = Tools::getValue('lingua');
        $idCategoria = Tools::getValue('idCategoria');
        $contenuto = Tools::getValue('contenuto');
        $sanitized = Db::getInstance()->escape($contenuto,true);
        // $contenuto = addslashes(htmlentities($editor));
        if($contenuto == NULL){
            echo'<div class="esito-negativo"> INSERISCI UN CONTENUTO </div>';
        }
        elseif ($idCategoria == NULL or $idCategoria == 0){
            echo'<div class="esito-negativo"> ID DI CATEGORIA NON VALIDO </div>';
        }
        else {
            echo '<div class="esito-positivo"> INSERIMENTO EFFETTUATO </div>';
            Db::getInstance()->execute("INSERT INTO `cu_ff_marketingcategory`  (`id_categoria`, `testo-" . $lingua . "`) VALUES ('" . $idCategoria . "','" . $sanitized . "')ON DUPLICATE KEY UPDATE `testo-" . $lingua . "` = '" . $sanitized . "'");
            // Db::getInstance()->execute("UPDATE cu_ff_marketingcategory SET `testo-".$lingua."` = '".$sanitized."' WHERE id_categoria = ".$idCategoria);
        }
    }
    elseif ($action == "marketingCategoryDelete"){
        $idElimina = Tools::getValue('idElimina');
        Db::getInstance()->execute("DELETE FROM `cu_ff_marketingcategory` WHERE id_categoria ='".$idElimina."'");
        echo "CONTENUTO ELIMINATO CORRETTAMENTE";
    }
    elseif ($action == "marketingCategoryEdit"){
        $idCategoria = Tools::getValue('idCategoria');
        $lingua = Tools::getValue('lingua');
        $modifica = Db::getInstance()->executeS('SELECT `testo-'.$lingua.'` FROM `cu_ff_marketingcategory` WHERE `id_categoria` ='.$idCategoria);
        $testo = $modifica[0]['testo-'.$lingua];
        echo ($testo);
    }
    elseif ($action == "mCSaveEdit"){
        $categoriaMod = Tools::getValue('categoriaMod');
        $linguaMod = Tools::getValue('linguaMod');
        $contenutoMod = Tools::getValue('contenutoMod');
        Db::getInstance()->execute("INSERT INTO `cu_ff_marketingcategory`  (`id_categoria`, `testo-" . $linguaMod . "`) VALUES ('" . $categoriaMod . "','" . $contenutoMod . "')ON DUPLICATE KEY UPDATE `testo-" . $linguaMod . "` = '" . $contenutoMod . "'");
        echo ("AGGIORNAMENTO EFFETTUATO CORRETTAMENTE");
    }
    //MODULO NEWSLETTER
    elseif ($action == "newsletterFront") {
        $newsletter = Tools::getValue('newsletter');
        $usertype = Tools::getValue('usertype');
        $preferenze = json_encode($newsletter[0]['preferenze']);

        $addNew = "INSERT INTO `cu_ff_newsletterfront`  (`nome`, `cognome`, `email`, `sesso`, `preferenze`, `id_lang`) ";
        $addNew .= "VALUES ( '".$newsletter[0]['nome']."', '".$newsletter[0]['cognome']."', '".$newsletter[0]['email']."', ";
        $addNew .= "'".$newsletter[0]['sesso']."', '".$preferenze."', '".$newsletter[0]['idLang']."') ";
        $addNew .= "ON DUPLICATE KEY UPDATE nome = '".$newsletter[0]['nome']."', cognome = '".$newsletter[0]['cognome']."', ";
        $addNew .= "sesso = '".$newsletter[0]['sesso']."', preferenze = '".$preferenze."', id_lang = '".$newsletter[0]['idLang']."', deleted = 0";

        $checkMail = "SELECT `email` FROM `cu_ff_newsletterfront` WHERE `email` = '".$newsletter[0]['email']."' AND deleted = 0";

        $update = "UPDATE cu_ff_newsletterfront SET nome = '".$newsletter[0]['nome']."', `cognome` = '".$newsletter[0]['cognome']."', `sesso` = '".$newsletter[0]['sesso']."', `preferenze` = '".$preferenze."', deleted = 0 WHERE `email` = '".$newsletter[0]['email']."'";
        if(Db::getInstance()->getValue($checkMail) == null){
            if (Db::getInstance()->execute($addNew)){
                echo"REGISTRAZIONE AVVENUTA CORRETTAMENTE";
                $context = context::getContext();
                $idLingua = $context->language->id;
                $idShop = $context->shop->id;
                $templateVars = array(
                    '{nome}' => $newsletter[0]["nome"],
                    '{cognome}' => $newsletter[0]["cognome"],
                    '{email}' => $newsletter[0]["email"]
                );
                $dataAttuale = date('Y-m-d H:i:s');
                if($dataAttuale > '2018-12-28 00:00:00' && $dataAttuale < '2018-12-30 00:00:00'){
                    Mail::Send( $idLingua,
                        'newsletterCoupon',
                        Mail::l( 'Registrazione Newsletter' ),
                        $templateVars, $newsletter[0]["email"], null, Configuration::get( 'PS_SHOP_EMAIL' ),
                        Configuration::get( 'PS_SHOP_NAME' ), null, null,
                        _PS_MODULE_DIR_ . 'farmafront/mails/'
                    );
                }else {
                    Mail::Send( $idLingua,
                        'newsletter',
                        Mail::l( 'Registrazione Newsletter' ),
                        $templateVars, $newsletter[0]["email"], null, Configuration::get( 'PS_SHOP_EMAIL' ),
                        Configuration::get( 'PS_SHOP_NAME' ), null, null,
                        _PS_MODULE_DIR_ . 'farmafront/mails/'
                    );
                }
            }else{
                echo"AL MOMENTO NON È POSSIBILE REGISTRARSI";
            }
        }else{
            if($usertype == "logged") {
                if (Db::getInstance()->execute($update)) {
                    echo "NEWSLETTER MODIFICATA CORRETTAMENTE";
                } else {
                    echo "AL MOMENTO NON È POSSIBILE MODIFICARE";
                }
            }else{
                echo "SEI GIÀ ISCRITTO ALLA NEWSLETTER ACCEDI PER MODIFICARE LA SOTTOSCRIZIONE";
            }
        }

        // Db::getInstance()->execute("INSERT INTO `cu_ff_newsletterfront`  (`nome`, `cognome`, `email`, `sesso`, `preferenze`) VALUES ( '".$newsletter[0][nome]."', '".$newsletter[0][cognome]."', '".$newsletter[0][email]."', '".$newsletter[0][sesso]."', '".$preferenze."')");
    }
    //MODULO NEWSLETTER FOOTER
    elseif ($action == "newsletterFooter") {
        $newsletterFooter = Tools::getValue('newsletterFooter');
        $checkMail = "SELECT `email` FROM `cu_ff_newsletterfront` WHERE `email` = '".$newsletterFooter."'";
        $update = "UPDATE cu_ff_newsletterfront SET nome = 'nonprofilato', `cognome` = 'nonprofilato', `sesso` = 'nonprofilato', `preferenze` = 'nonprofilato' WHERE `email` = '".$newsletterFooter."'";
        // SE LA MAIL NON È PRESENTE NELLA TABELLA NEWSLETTER
        if(Db::getInstance()->getValue($checkMail) == null){
            $controlloRegistrato = "SELECT email FROM "._DB_PREFIX_."customer WHERE email = '".$newsletterFooter."'";
            //UTENTE NON REGISTRATO NE ALLA NEWSLETTER NE AL SITO
            if(Db::getInstance()->getValue($controlloRegistrato) == null) {
                $addNew = "INSERT INTO `cu_ff_newsletterfront`  (`nome`, `cognome`, `email`, `sesso`, `preferenze`) VALUES ( 'nonprofilato', 'nonprofilato', '".$newsletterFooter."', 'nonprofilato', 'nonprofilato')";
                // echo"newsletter no registrato no";

                if (Db::getInstance()->execute($addNew)) {
                    echo "REGISTRAZIONE AVVENUTA CORRETTAMENTE";


                }

                //UTENTE REGISTRATO AL SITO MA NON ALLA NEWSLETTER
            }else{
                // echo"newsletter no registrato si";
                //RECUPERO I DATI NELLA TABELLA UTENTI
                $datiRegistrato = "SELECT firstname, lastname, id_gender FROM "._DB_PREFIX_."customer WHERE email = '".$newsletterFooter."'";
                $arrayRegistrato = Db::getInstance()->executeS($datiRegistrato);
                if ($arrayRegistrato){
                    $newsletterRegistrato = "INSERT INTO cu_ff_newsletterfront (nome, cognome, email, sesso, preferenze) VALUES ('".$arrayRegistrato[0][firstname]."', '".$arrayRegistrato[0][lastname]."', '".$newsletterFooter."', '".$arrayRegistrato[0][id_gender]."', 'nonprofilato')";
                    //E LO REGISTRO ALLA NEWSLETTER CON QUEI DATI
                    if (Db::getInstance()->executeS($newsletterRegistrato)) {
                        Db::getInstance()->execute("UPDATE "._DB_PREFIX_."customer SET newsletter = '1' WHERE `email` = '".$newsletterFooter."'");
                        echo "REGISTRAZIONE AVVENUTA CORRETTAMENTE";
                    }
                }

            }
            //SE LA MAIL È PRESENTE NELLA TABELLA NEWSLETTER
        }else {
            //VERIFICO SE È PRESENTE NELLA TABELLA DEGLI UTENTI
            $controlloRegistrato2 = "SELECT email FROM " . _DB_PREFIX_ . "customer WHERE email = '" . $newsletterFooter . "'";
            if (Db::getInstance()->getValue($controlloRegistrato2) == null) {
                echo " Sei iscritto, registrati al sito per gestire la newsletter ";
                /*
                //SE NON È PRESENTE AGGIORNO COME NON PROFILATO
                if (Db::getInstance()->execute($update)){
                    echo"NEWSLETTER MODIFICATA CORRETTAMENTE3";
                }else{
                    echo"AL MOMENTO NON È POSSIBILE MODIFICARE";
                }
                */
                //SE L'UTENTE È PRESENTE NELLA TABELLA DEGLI UTENTI
            } else {
                echo " Sei iscritto, accedi al sito per gestire la newsletter ";
                /*
                //RECUPERO I DATI CHE POSSEGGO
                $datiRegistrato = "SELECT firstname, lastname, id_gender FROM "._DB_PREFIX_."customer WHERE email = '".$newsletterFooter."'";
                if (Db::getInstance()->executeS($datiRegistrato)){
                    $updateRegistrato = "UPDATE cu_ff_newsletterfront SET nome = '".$datiRegistrato[firstname]."', `cognome` = '".$datiRegistrato[lastname]."', `sesso` = '".$datiRegistrato[id_gender]."', `preferenze` = 'nonprofilato' WHERE `email` = '".$newsletterFooter."'";
                    //E AGGIORNO LA SCHEDA NEWSLETTER CON QUEI DATI
                    if (Db::getInstance()->execute($updateRegistrato)) {
                        echo "REGISTRAZIONE AVVENUTA CORRETTAMENTE4";
                    } else {
                        echo "AL MOMENTO NON È POSSIBILE REGISTRARSI";
                    }
                }else {
                    echo "AL MOMENTO NON È POSSIBILE REGISTRARSI";
                */

            }
        }
    }
    //MODULO NEWSLETTER PAGINA REGISTRAZIONE
    elseif ($action == "newsletterInReg") {
        $nomeReg = Tools::getValue('nomeReg');
        $cognomeReg = Tools::getValue('cognomeReg');
        $emailReg = Tools::getValue('emailReg');
        $sessoReg = Tools::getValue('sessoReg');
        $addNew = "INSERT INTO `cu_ff_newsletterfront`  (`nome`, `cognome`, `email`, `sesso`, `preferenze`) VALUES ( '".$nomeReg."', '".$cognomeReg."', '".$emailReg."', '".$sessoReg."', 'nonprofilato')";
        $checkMail = "SELECT `email` FROM `cu_ff_newsletterfront` WHERE `email` = '".$emailReg."'";
        $update = "UPDATE cu_ff_newsletterfront SET nome = '".$nomeReg."', `cognome` = '".$cognomeReg."', `sesso` = '".$sessoReg."', `preferenze` = 'nonprofilato' WHERE `email` = '".$emailReg."'";
        if(Db::getInstance()->getValue($checkMail) == null){
            if (Db::getInstance()->execute($addNew)){
                $templateVars = array(

                    '{nome}' => $nomeReg,

                    '{cognome}' =>  $cognomeReg,

                    '{email}' => $emailReg

                );
                $dataAttuale = date('Y-m-d H:i:s');
                if($dataAttuale > '2018-12-28 00:00:00' && $dataAttuale < '2018-12-30 00:00:00'){
                    Mail::Send( 1,
                        'newsletterCoupon',
                        Mail::l( 'Registrazione Newsletter' ),
                        $templateVars, $emailReg, null, Configuration::get( 'PS_SHOP_EMAIL' ),
                        Configuration::get( 'PS_SHOP_NAME' ), null, null,
                        _PS_MODULE_DIR_ . 'farmafront/mails/'
                    );
                }else {
                    Mail::Send( 1,
                        'newsletter',
                        Mail::l( 'Registrazione Newsletter' ),
                        $templateVars, $emailReg, null, Configuration::get( 'PS_SHOP_EMAIL' ),
                        Configuration::get( 'PS_SHOP_NAME' ), null, null,
                        _PS_MODULE_DIR_ . 'farmafront/mails/'
                    );
                }
                echo"REGISTRAZIONE AVVENUTA CORRETTAMENTE";
            }else{
                echo"AL MOMENTO NON È POSSIBILE REGISTRARSI";
            }
        }else{
            if (Db::getInstance()->execute($update)){
                echo"NEWSLETTER MODIFICATA CORRETTAMENTE";
            }else{
                echo"AL MOMENTO NON È POSSIBILE MODIFICARE";
            }
        }
    }
    //DISISCRIZIONE NEWSLETTER
    elseif($action == "unsubscribe"){
        $d = array();
        parse_str($_POST['form'],$d);
        $email = $d['emailUnsubscribe'];
        $db = ps_connection();
        $db->beginTransaction();
        try{
            //rimuovo flag newsletter da customer
            $updCustomer = "UPDATE "._DB_PREFIX_."customer SET newsletter = 0 WHERE email = :email";
            $uC = $db->prepare($updCustomer);
            $uC->bindParam(':email',$email);
            $uC->execute();
            //aggiorno tabella cu_ff_newsletter
            $updFfNewlsetter = "UPDATE cu_ff_newsletterfront SET deleted = 1, deleted_date = '".date('Y-m-d H:i:s')."' WHERE email = :email";
            $uFN = $db->prepare($updFfNewlsetter);
            $uFN->bindParam(':email',$email);
            $uFN->execute();

            $db->commit();
            echo "Disiscrizione effettuata correttamente";
        }catch(Exception $e){
            $db->rollBack();
            echo "Non riesco a disiscrivere invia una richiesta a privacy@farmacosmo.it";
        }


    }
    /*
    //AGGIUNTA NUOVO CAMPO
    elseif ($action == "newsletterBackCampo"){
        //RECUPERO IL CAMPO E LO METTO IN UN ARRAY
    $campo = Tools::getValue('campo');
    //VERIFICO SE CI SONO CAMPI
    $sql = 'SELECT COUNT(campi) FROM cu_ff_newsletteradmin WHERE id = 1';
    $controllo = Db::getInstance()->getValue($sql);
    //SE NON CE NE SONO INSERISCO IL CAMPO
    if( $controllo == 0){
        $array = [];
        array_push($array, $campo);
        $json = json_encode($array);
        Db::getInstance()->execute("INSERT INTO `cu_ff_newsletteradmin`  (`id`, `preferenze`, `campi`) VALUES ( 1, 1, '".$json."')");
        echo("INSERIMENTO EFFETTUATO");
    }else{
        //SE CI SONO PRENDO I CAMPI E LI LAVORO CON JSON
        $sql2 = 'SELECT campi FROM cu_ff_newsletteradmin WHERE id = 1';
        $campi = Db::getInstance()->getValue($sql2);
        $json = json_decode($campi);
        array_push($json, $campo);
        $jsonDue = json_encode($json);
        $aggiornamento = "UPDATE `cu_ff_newsletteradmin` SET campi='".$jsonDue."' WHERE id=1";
        if (!Db::getInstance()->execute($aggiornamento))
        {
            echo "CI SONO PROBLEMI RIPROVARE PIU' TARDI";
        }else{
            echo "INSERIMENTO EFFETTUATO";
        }
    }
    }
    //AGGIUNSTA NUOVA PREFERENZA
    elseif ($action == "newsletterBackPreferenza"){
        //RECUPERO LA PREFERENZA E LA METTO IN UN ARRAY
    $preferenza = Tools::getValue('preferenza');
    //VERIFICO SE CI SONO PREFERENZE
    $sql = 'SELECT COUNT(preferenze) FROM cu_ff_newsletteradmin WHERE id = 1';
    $controllo = Db::getInstance()->getValue($sql);
    //SE NON CE NE SONO INSERISCO LA PREFERENZA
    if($controllo == 0){
        echo "PRIMA DI CREARE UNA PREFERENZA È NECESSARIO AGGIUNGERE ALMENO UN CAMPO";
    }else{
        $sql = 'SELECT preferenze FROM cu_ff_newsletteradmin WHERE id = 1';
        $valore = Db::getInstance()->getValue($sql);
        if($valore == 1){
            $array = [];
            array_push($array, $preferenza);
            $json = json_encode($array);
            Db::getInstance()->execute("UPDATE `cu_ff_newsletteradmin` SET preferenze='".$json."' WHERE id=1");
            echo("INSERIMENTO EFFETTUATO");
        }else{
            //SE CI SONO PRENDO I CAMPI E LI LAVORO CON JSON
            $sql2 = 'SELECT preferenze FROM cu_ff_newsletteradmin WHERE id = 1';
            $preferenze = Db::getInstance()->getValue($sql2);
            $json = json_decode($preferenze);
            array_push($json, $preferenza);
            $jsonDue = json_encode($json);
            $aggiornamento = "UPDATE `cu_ff_newsletteradmin` SET preferenze='".$jsonDue."' WHERE id=1";
            if (!Db::getInstance()->execute($aggiornamento))
            {
                echo "CI SONO PROBLEMI RIPROVARE PIU' TARDI";
            }else{
                echo "INSERIMENTO EFFETTUATO";
            }
        }

    }
    }
    //RIMOZIONE CAMPI
    elseif ($action == "newsletterCampoRemove") {
        //RECUPERO IL CAMPO CHE SI INTENDE ELIMINARE
    $campo = Tools::getValue('campo');
    $sql = 'SELECT campi FROM cu_ff_newsletteradmin WHERE id = 1';
    $campi = Db::getInstance()->getValue($sql);
    $json = json_decode($campi);
    for($i=0; $i<count($json);++$i)
        if($json[$i] == $campo){
            array_splice($json, $i, 1);
        }
    $json2 = json_encode($json);
    $aggiornamento = "UPDATE `cu_ff_newsletteradmin` SET campi='".$json2."' WHERE id=1";
    if (!Db::getInstance()->execute($aggiornamento))
    {
        echo "CI SONO PROBLEMI RIPROVARE PIU' TARDI";
    }else{
        echo "CAMPO ELIMINATO CON SUCCESSO";
    }



    }
    //RIMOZIONE PREFERENZE
    elseif ($action == "newsletterPreferenzaRemove") {
        //RECUPERO IL CAMPO CHE SI INTENDE ELIMINARE
    $preferenza = Tools::getValue('preferenza');
    $sql = 'SELECT preferenze FROM cu_ff_newsletteradmin WHERE id = 1';
    $preferenze = Db::getInstance()->getValue($sql);
    $json = json_decode($preferenze);
    for($i=0; $i<count($json);++$i)
        if($json[$i] == $preferenza){
            array_splice($json, $i, 1);
        }
    $json2 = json_encode($json);
    $aggiornamento = "UPDATE `cu_ff_newsletteradmin` SET preferenze='".$json2."' WHERE id=1";
    if (!Db::getInstance()->execute($aggiornamento))
    {
        echo "CI SONO PROBLEMI RIPROVARE PIU' TARDI";
    }else{
        echo "CAMPO ELIMINATO CON SUCCESSO";
    }



    }
    */
    //MODULO RICHIESTA FATTURA
    elseif ($action == "richiestaFattura") {
        $email = Tools::getValue('email');
        $nome = Tools::getValue('nome');
        $cognome = Tools::getValue('cognome');
        $riferimento = Tools::getValue('riferimento');
        $controlloRichiesta = "SELECT riferimento from cu_ff_richiestafattura WHERE riferimento = '".$riferimento."'";
        $inserimentoRichiesta = "INSERT INTO cu_ff_richiestafattura (riferimento, richiesta_fattura, email) VALUES ('".$riferimento."', 1, '".$email."')";
        $destinatario = "amministrazione@farmacosmo.it";
        $oggetto = "Richiesta Fattura da " .$nome." ".$cognome;

        $messaggio = '<html><body>';
        $messaggio .= '<h1>RICHIESTA FATTURA DAL SITO</h1><br>';
        $messaggio .= '<p>È stata fatta una richiesta di fattura da'.$nome.' '.$cognome.'</p><br>';
        $messaggio .= '<p>per un ordine con riferimento: <b>'.$riferimento.'</b></p><br>';
        $messaggio .= '<p>si prega di invare fattura a: <b>'.$email.'</b></p><br>';
        $messaggio .= '</body></html>';
        $mittente = "From: info@farmacosmo.it" . "\r\n";
        $mittente .= "Reply-To:".$email."\r\n";
        $mittente .= "MIME-Version: 1.0\r\n";
        $mittente .= "Content-Type: text/html; charset=ISO-8859-1\r\n";

        if(Db::getInstance()->getValue($controlloRichiesta) == NULL){
            if (Db::getInstance()->execute($inserimentoRichiesta)){
                mail($destinatario, $oggetto, $messaggio, $mittente);
                echo "ok";
            }else{
                echo"no";
            }
        }
        else{
            $dataOdierna = date('Y-m-d H:i:s');
            $update = "UPDATE cu_ff_richiestafattura SET data_richiesta = '".$dataOdierna."' WHERE riferimento = '".$riferimento."'";
            if(Db::getInstance()->execute($update)){
                mail($destinatario, $oggetto, $messaggio, $mittente);
                echo "ok";
            }
        }
    }
    //MODULO TOTALE CARRELLO
    elseif ($action == "totaleCarrello") {

        $contrassegno = Tools::getValue('contrassegno');
        $spedizione = Tools::getValue('spedizione');
        $context = context::getContext();
        $idLingua = $context->language->id;
        $array= $context->cart->getSummaryDetails($idLingua,true);
        $totCart=$array['total_products_wt'];
        $sconti=$array['total_discounts'];
        $totaleCarrello = $totCart + $spedizione + $contrassegno - $sconti;
        //PROVE
        $prodotti=$context->cart->getProducts();
        $controllo = 0;
        $reload = false;
        foreach ($prodotti as $prodotto){
            /**
             * DONATO 08/07/2021
             * FIX PER EVITARE PRODOTTI A QTY 0
             */
            if((int)$prodotto['quantity'] == 0){
                $updCart = "UPDATE "._DB_PREFIX_."cart_product SET quantity = 1 WHERE id_product = ".$prodotto['id_product']." AND id_cart = ".$context->cart->id;
                DB::getInstance()->execute($updCart);
                $reload = true;
            }
            if($prodotto['reference'] == 'FRCMASSICURATA'){
                $controllo = $controllo+1;
            }
        }
        if($controllo > 1){
            $controllo = "ATTENZIONE SPEDIZIONE ASSICURATA DUPLICATA ".$controllo." VOLTE";
        }
        //FINE PROVE
        /*
        $totcart= Context::getContext()->cart->getOrderTotal(true);
        $risultato = ($totcart+$contrassegno);
        */
        //$storeID = '10035546977';
        //$secret = '9g9D5AnTqr';
        //$data = date('Y:m:d-H:i:s');
        //$totaleCarrello = number_format(Tools::convertPrice($cart->getOrderTotal(true, 3), null), 2, '.', '');
        //$prehash = bin2hex($storeID.$data.number_format($totaleCarrello, 2).'978'.$secret);
        //$hash = sha1($prehash);
        $arrayTotal = array(
            //"array" => $array,
            "prodotti" => $controllo,
            "frontTotCart" => str_replace(".",",",number_format($totaleCarrello, 2)),
            "backTotCart" => number_format($totaleCarrello, 2),
            //"hash" => $hash,
            //"dateTime" => $data
            "reload" => $reload
        );
        echo (json_encode($arrayTotal));
    }
    //MODULO SVUOTA CARRELLO
    elseif ($action == "svuotaCarrello") {
        // $this->context->cart->delete();
        $products = Context::getContext()->cart->getProducts();

        // $products = $cart->getProducts();
        foreach ($products as $product) {
            Context::getContext()->cart->deleteProduct($product["id_product"]);
        }
        echo"ok";
    }
    //MODULO NOTE ORDINE
    elseif ($action == "noteOrder") {
        $context = Context::getContext();
        $idCart = $context->cart->id;
        $noteAjax = Tools::getValue('noteOrdine');
        $noteOrdine = Db::getInstance()->escape($noteAjax,true);
        if ($noteAjax != NULL) {
            $controllo = Db::getInstance()->executeS("SELECT id_carrello FROM cu_ff_noteordine WHERE id_carrello = '" . $idCart . "'");
            if ($controllo) {
                $sql = "UPDATE cu_ff_noteordine SET note_ordine = '" . $noteOrdine . "' WHERE id_carrello = '" . $controllo[0]['id_carrello'] . "'";
                Db::getInstance()->execute($sql);
                echo "aggiornato";
            } else {
                $sql = "INSERT INTO cu_ff_noteordine (id_carrello, id_ordine, note_ordine) VALUES ('" . $idCart . "', '0', '" . $noteOrdine . "')";
                if (Db::getInstance()->execute($sql)) {
                    echo "inserito";
                }
            }
        }else {
            $sql = "DELETE FROM cu_ff_noteordine WHERE id_carrello = '".$idCart."'";
            if (Db::getInstance()->execute($sql)) {
                echo "eliminato";
            }
        }
    }
    //FUNZIONE CONTROLLO SCONTO
    elseif($action == "controlPrice") {

        $prodId = Tools::getValue('prodId');
        $inputQty = Tools::getValue('inputQty');
        $sql = "SELECT MIN(from_quantity) FROM "._DB_PREFIX_."specific_price WHERE id_product = ".$prodId;
        $offerte = DB::getInstance()->getValue($sql);
        if($inputQty < $offerte) {
            global $cookie;
            $currency = new CurrencyCore($cookie->id_currency);
            $simbolo = $currency->sign;
            $return = array(
                "risposta" => "noSconto",
                "simbolo" => $simbolo
            );
            echo json_encode($return);
        }
        else{
            $prezzoProdotto = Product::getPriceStatic($prodId, true, null, 6, null, false, false, $inputQty, false, null, null, null, $specific_price_output, false, false, null, false);
            $nuovoPrezzo = Product::getPriceStatic($prodId, true, null, 6, null, false, true, $inputQty, false, null, null, null, $specific_price_output, false, false, null, false);
            //echo $prezzoProdotto;
            $id_shop = (int)Context::getContext()->shop->id;
            $id_country = (int)Context::getContext()->country->id;
            $id_currency = (int)Context::getContext()->currency->id;
            $ArraySconto = SpecificPrice::getSpecificPrice($prodId,$id_shop,$id_currency,$id_country,1,$inputQty,null,0,0,0);
            $prezzoFisso = $ArraySconto['price'];
            global $cookie;
            $currency = new CurrencyCore($cookie->id_currency);
            $simbolo = $currency->sign;
            if($ArraySconto['reduction_type'] == "percentage"){
                $tipoRiduzione = "percentage";
                $riduzione = number_format(($ArraySconto['reduction']*100),2)."%";
            }
            if($ArraySconto['reduction_type'] == "amount"){
                $tipoRiduzione = "fisso";
                $riduzione = $simbolo." ".str_replace(".",",",number_format($ArraySconto['reduction'],2));
            }
            $prezzi = array(
                "oldPrice" => str_replace(".",",",number_format($prezzoProdotto,2)),
                "newPrice" => str_replace(".",",",number_format($nuovoPrezzo,2)),
                "simbolo" => $simbolo,
                "prezzoFisso" => $prezzoFisso,
                "tipoRiduzione" => $tipoRiduzione,
                "riduzione" => $riduzione
            );
            echo json_encode($prezzi);
            /*
            $price = Product::getPriceStatic($prodId);
            $id_shop = (int)Context::getContext()->shop->id;
            $id_country = (int)Context::getContext()->country->id;
            $id_currency = (int)Context::getContext()->currency->id;
            $id_lang = (int)Context::getContext()->language->id;
            $ArraySconto = SpecificPrice::getSpecificPrice($prodId,$id_shop,$id_currency,$id_country,1,$inputQty,null,0,0,0);
            if($ArraySconto['reduction_type'] == 'percentage'){
                //print_r($ArraySconto);
                $specific_price_output = 0;
                $prezzoProdotto = Product::getPriceStatic($prodId, true, null, 6, null, false, false, 1, false, null, null, null, $specific_price_output, false, false, null, false);
                //print_r($prezzoProdotto);
                $valoreSconto = $prezzoProdotto * $ArraySconto['reduction'];
                $nuovoPrezzo = $prezzoProdotto - $valoreSconto;
                global $cookie;
                $currency = new CurrencyCore($cookie->id_currency);
                $simbolo = $currency->sign;
                $prezzi = array(
                    "oldPrice" => str_replace(".",",",number_format($prezzoProdotto,2)),
                    "newPrice" => str_replace(".",",",number_format($nuovoPrezzo,2)),
                    "simbolo" => $simbolo,
                    "array" => $ArraySconto
                );
                echo json_encode($prezzi);
            }
            else{
               // print_r($ArraySconto);
                $specific_price_output = 0;
                $prezzoProdotto = Product::getPriceStatic($prodId, true, null, 6, null, false, false, 1, false, null, null, null, $specific_price_output, false, false, null, false);
                $valoreSconto = $ArraySconto['reduction'];
                $nuovoPrezzo = $prezzoProdotto - $valoreSconto;
                global $cookie;
                $currency = new CurrencyCore($cookie->id_currency);
                $simbolo = $currency->sign;
                $prezzi = array(
                    "oldPrice" => str_replace(".",",",number_format($prezzoProdotto,2)),
                    "newPrice" => str_replace(".",",",number_format($nuovoPrezzo,2)),
                    "simbolo" => $simbolo
                );
                echo json_encode($prezzi);
            }
            */

        }
    }
    //MODULO NOTE INFORMATIVE
    elseif($action == "addInfoMessage")
    {
        $data = Tools::getValue('data');
        $rand = md5(date("Y-m-d H:i"));
        for ($i=0; $i<count($data); ++$i){
            $testo = Db::getInstance()->escape($data[$i]['testo'],true);

            $sql = "INSERT INTO cu_ff_infomessaggi (id_messaggio, testo_messaggio, id_lingua, stato)  VALUES ('".$rand."', '".$testo."', ".$data[$i]['lingua'].", '0')";
            if($data[$i]['testo'] == '')
            {
                continue;
            }
            Db::getInstance()->execute($sql);
        }
        echo"ok";
        //$sql = "INSERT 'testo_messaggio','id_lingua','stato' INTO cu_ff_infomessaggi VALUES ()";
    }
    elseif($action == "updateInfoMessage")
    {
        $data = Tools::getValue('data');
        // $newdate = date("Y-m-d\TH:i:s", strtotime($data[0]['inizio']));
        // $newdate = date('c', strtotime($data[0]['inizio']));
        $dataInizio = str_replace("T"," ",$data[0]['inizio']);
        $dataFine = str_replace("T"," ",$data[0]['fine']);
        $id = $data[0]['id'];
        $update = "UPDATE cu_ff_infomessaggi SET data_inizio='".$dataInizio."', data_fine='".$dataFine."', stato=1 WHERE id_messaggio = '".$id."'";
        if(Db::getInstance()->execute($update)){
            echo "ok";
        }
        //    echo $testo;
        /*
        for ($i=0; $i<count($data); ++$i){
            $sql = "INSERT INTO cu_ff_infomessaggi (testo_messaggio, id_lingua, stato)  VALUES ('".$data[$i]['testo']."', ".$data[$i]['lingua'].", 0)";
            if($data[$i]['testo'] == '')
            {
                continue;
            }
            if(Db::getInstance()->execute($sql)){
                echo "ok";
            }
        }
        */
        //$sql = "INSERT 'testo_messaggio','id_lingua','stato' INTO cu_ff_infomessaggi VALUES ()";
    }
    elseif($action == "disableInfoMessage")
    {
        $id = Tools::getValue('id');
        $update = "UPDATE cu_ff_infomessaggi SET stato='0' WHERE id=".$id;
        if(Db::getInstance()->execute($update)){
            echo"ok";
        }
    }
    elseif($action == "enableInfoMessage")
    {
        $id = Tools::getValue('id');
        $update = "UPDATE cu_ff_infomessaggi SET stato='1' WHERE id=".$id;
        if(Db::getInstance()->execute($update)){
            echo"ok";
        }
    }
    elseif($action == "deleteInfoMessage")
    {
        $id = Tools::getValue('id');
        $update = "DELETE FROM cu_ff_infomessaggi WHERE id=".$id;
        if(Db::getInstance()->execute($update)){
            echo"ok";
        }
    }
    elseif($action == "editInfoMessage")
    {
        $id = Tools::getValue('id');
        $select = "SELECT testo_messaggio FROM cu_ff_infomessaggi WHERE id=".$id;
        $valore = Db::getInstance()->getValue($select);
        if($valore){
            echo $valore;
        }
    }
    elseif($action == "saveEditInfoMessage")
    {
        $id = Tools::getValue('id');
        $messaggio = Tools::getValue('messaggio');
        $sanit = Db::getInstance()->escape($messaggio,true);
        $update = "UPDATE cu_ff_infomessaggi SET testo_messaggio='".$sanit."' WHERE id=".$id;
        if(Db::getInstance()->execute($update)){
            echo"ok";
        }
    }
    elseif($action == "saveCatEvidenza"){
        $master = Tools::getValue("master");
        $subCat = Tools::getValue("subCat");
        if($master[strlen($master)-1] == ","){
            $primoLivello = trim($master," ");
        }else{
            $primoLivello = trim($master.","," ");
        }
        if($subCat[strlen($subCat)-1] == ","){
            $secondoLivello = trim(rtrim($subCat,", ")," ");
        }else{
            $secondoLivello = trim($subCat," ");
        }
        $root = $_SERVER['DOCUMENT_ROOT'];
        require_once($root . "/farma_script/functions.php");
        $db = ps_connection();
        $insert = "INSERT INTO `cu_ff_catevidenza` (`id`, `id_primo_livello`, `id_categorie`) ";
        $insert .= "VALUES ('1','".$primoLivello."', '".$secondoLivello."') ";
        $insert .= "ON DUPLICATE KEY UPDATE id_primo_livello = '".$primoLivello."', ";
        $insert .= "id_categorie = '".$secondoLivello."'";

        $i = $db->prepare($insert);
        if($i->execute()){
            echo "ok";
        };

        $db = null;
    }

    else{
        echo("ERRORE DI INSERIMENTO");
        exit;
    }
}
