<?php

/*-------------------------------------------------------------------------------*/
/*  Create Preview ( AJAX ) - Review Page
/*-------------------------------------------------------------------------------*/
function ecf_generate_preview () {
	
	if ( !isset( $_POST['post_ID'] ) && !isset( $_GET['form_id'] )) {
		echo 'Failed to generate Preview! Please try again.';
		die;
		}
		
		$theval = array();
		$allval = array();
		
		// From Editor Page	
		if ( isset( $_POST['post_ID'] ) ) {
			
			$thepost = intval( $_POST['post_ID'] );
			
			$_POST['ecf_meta'] = stripslashes_deep( $_POST['ecf_meta'] );
			
			 foreach ((array) $_POST['ecf_meta'] as $k => $v){
				 $allval[$k] = $v;	
				 }

					ecf_preview_markup_generator( $thepost, $allval, 'editor' );
					
				}
				
			// From Overview Page	
			elseif ( isset( $_GET['form_id'] ) && ecf_post_exists( intval( $_GET['form_id'] ) ) ) {
								
				$thepost = intval( $_GET['form_id'] );
				$prev_type = get_post_meta( $_GET['form_id'], 'ecf_meta_settab', true );

				foreach ( get_post_meta( $_GET['form_id'] ) as $k => $v){
					$theval[$k] = $v;
					
					foreach ( $theval as $k => $v){
						$tmp = get_post_meta( $_GET['form_id'], $k, true );
						$allval[$k] = $tmp;
						}
					}

					ecf_preview_markup_generator( $thepost, $allval, null );

				} else {
					die('Ooops!');
					}

		die('');
		
}
add_action('wp_ajax_ecf_generate_preview', 'ecf_generate_preview');


/*-------------------------------------------------------------------------------*/
/*  Create Preview ( AJAX ) - Post Edit
/*-------------------------------------------------------------------------------*/
function ecf_preview_markup_generator ( $id, $val, $frm ){
	
	ob_start(); 
	
	echo '<!DOCTYPE html>';
	echo '<html><head><title>'.ECF_ITEM_NAME.' ( Preview Mode )</title>';
	?>
	<style>
		body { background-color: #E6E6E6 !important;}
		.ecfpreloader {
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translateY(-50%);	
			transform: translateX(-50%);	
		}
		.ecf-body {padding: 40px 0 40px 0 !important;}
    </style>
	
	<script>
       if (typeof ajaxurl === 'undefined') {
          var ajaxurl = '<?php echo admin_url('admin-ajax.php'); ?>';
       }
    </script>
		
	<?php
			
	if ( isset( $val['ecf_meta_use_captcha'] ) && isset( $val['ecf_meta_captcha_style'] ) ) {
		
		if ( $val['ecf_meta_use_captcha'] == 'on'  ) {
			
			if ( $val['ecf_meta_captcha_style'] == 'v1' ) wp_enqueue_script( 'ecf-google-recaptcha-ajax' );
			if ( $val['ecf_meta_captcha_style'] == 'v2' ) wp_enqueue_script( 'ecf-google-recaptcha' );
			
		}
	
	}
	
	wp_enqueue_script( 'jquery' );
	wp_enqueue_script( 'ecf-validate' );
	wp_enqueue_style( 'ecf-frontend-css' );
	wp_enqueue_style( 'ecf-frontend-fontawesome' );
	wp_enqueue_style( 'ecf-frontend-vdialog' );
	wp_enqueue_script( 'ecf-ladda-spin' );
	wp_enqueue_script( 'ecf-vdialog' );
	wp_enqueue_script( 'ecf-ladda-js' );
	wp_enqueue_script( 'ecf-ladda' );
		
	global $is_IE;
	if ( $is_IE ) wp_enqueue_script( 'ecf-placeholder' );

	wp_enqueue_scripts();
	wp_print_styles();
	print_admin_styles();
	wp_print_head_scripts();
		
	echo '</head><body class="prevbody"><div class="box">';
	if ( $frm == 'editor' ) echo '<script>var sendMessage = function (msg) {window.parent.postMessage(msg, "*");};sendMessage("loaded");</script>';
	// START GENERATE FORM
	require_once 'ecf-template.php';
	ecf_markup_generator( $id, "preview", $val, $frm, null );
	wp_print_footer_scripts();
	echo '</div></body></html>'; 
	$prevw = ob_get_clean();
	echo $prevw;  

}