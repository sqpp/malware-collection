#!/usr/bin/php -q
<?php
ob_start();
require_once('lib/mime_parser/rfc822_addresses.php');
require_once('lib/mime_parser/mime_parser.php');
require_once('lib/nusoap/nusoap.php');
require_once('lib/nomad_mimemail.inc.php');



$fd = fopen("php://stdin", "r");  
$email = "";  
while (!feof($fd)) {  
	$email .= fread($fd, 1024);  
}  
fclose($fd);

$mime=new mime_parser_class;  
$mime->ignore_syntax_errors = 1;  
$parameters=array(  
	'Data'=>$email,  
);
$mensaje = array();
$mime->Decode($parameters, $decoded);
 
$fdw = fopen("debug_decoded.txt", "a+");
//fwrite($fdw, $email."Termina correo ");
fwrite($fdw, "\n ---------------------------INICIO DEL DECODED----------------------------\n". print_r($decoded,true)."\n ---------------------------FIN DEL DECODED----------------------------\n");
 
fclose($fdw);

//---------------------- GET EMAIL HEADER INFO -----------------------//
$mensaje['removeChars'] = array('<','>'); 
//get the name and email of the sender  
$mensaje['fromName'] = $decoded[0]['ExtractedAddresses']['from:'][0]['name'];  
$mensaje['fromEmail'] = $decoded[0]['ExtractedAddresses']['from:'][0]['address'];  
  
//get the name and email of the recipient  
//$mensaje['toEmail'] = $decoded[0]['ExtractedAddresses']['to:'][0]['address'];
 if (is_array($decoded[0]['ExtractedAddresses']['to:']))
{
	foreach ($decoded[0]['ExtractedAddresses']['to:'] as $var)
	{
    	$num = sizeof($decoded[0]['ExtractedAddresses']['to:']);
        $cur = 1;
        $toEmail .= str_replace($mensaje['removeChars'],'',$var['address']).",";
        $cur++;
    }
}
$mensaje['toEmail'] = substr($toEmail, 0, -1);
$mensaje['toName'] = $decoded[0]['ExtractedAddresses']['to:'][0]['name'];  
  
//get the subject  
$mensaje['subject'] = $decoded[0]['Headers']['subject:'];   
  
//get the message id  
$mensaje['messageID'] = str_replace($removeChars,'',$decoded[0]['Headers']['message-id:']);  

//get the reply id  
$mensaje['replyToID'] = str_replace($removeChars,'',$decoded[0]['Headers']['in-reply-to:']);  
  
//---------------------- FIND THE BODY -----------------------//
//get the message body  
if(substr($decoded[0]['Headers']['content-type:'],0,strlen('text/plain')) == 'text/plain' && isset($decoded[0]['Body'])){
	//$mensaje['body'] = $decoded[0]['Body'];
	$body = $decoded[0]['Body'];
}elseif(substr($decoded[0]['Headers']['content-type:'],0,strlen('text/html')) == 'text/html' && isset($decoded[0]['Body'])){
	//$mensaje['body'] = strip_tags($decoded[0]['Body']);
	$body = strip_tags($decoded[0]['Body']);
}elseif(substr($decoded[0]['Parts'][0]['Headers']['content-type:'],0,strlen('text/plain')) == 'text/plain' && isset($decoded[0]['Parts'][0]['Body'])) {
	//$mensaje['body'] = $decoded[0]['Parts'][0]['Body'];
	$body = $decoded[0]['Parts'][0]['Body'];
}elseif(substr($decoded[0]['Parts'][0]['Headers']['content-type:'],0,strlen('text/html')) == 'text/html' && isset($decoded[0]['Parts'][0]['Body'])){
	//$mensaje['body'] = strip_tags($decoded[0]['Parts'][0]['Body']);
	$body = strip_tags($decoded[0]['Parts'][0]['Body']);
}elseif(substr($decoded[0]['Parts'][0]['Parts'][0]['Headers']['content-type:'],0,strlen('text/plain')) == 'text/plain' && isset($decoded[0]['Parts'][0]['Parts'][0]['Body'])){
	//$mensaje['body'] = $decoded[0]['Parts'][0]['Parts'][0]['Body'];
	$body = $decoded[0]['Parts'][0]['Parts'][0]['Body'];
}
elseif(substr($decoded[0]['Parts'][0]['Parts'][0]['Headers']['content-type:'],0,strlen('text/html')) == 'text/html' && isset($decoded[0]['Parts'][0]['Parts'][0]['Body'])){
	//$mensaje['body'] = strip_tags($decoded[0]['Parts'][0]['Parts'][0]['Body']);
	$body = strip_tags($decoded[0]['Parts'][0]['Parts'][0]['Body']);
}elseif(substr($decoded[0]['Parts'][0]['Parts'][0]['Parts'][0]['Headers']['content-type:'],0,strlen('text/plain')) == 'text/plain' && isset($decoded[0]['Parts'][0]['Parts'][0]['Parts'][0]['Body'])){
	//$mensaje['body'] = $decoded[0]['Parts'][0]['Parts'][0]['Body'];
	$body = $decoded[0]['Parts'][0]['Parts'][0]['Parts'][0]['Body'];
}elseif(substr($decoded[0]['Parts'][0]['Parts'][0]['Parts'][0]['Headers']['content-type:'],0,strlen('text/plain')) == 'text/html' && isset($decoded[0]['Parts'][0]['Parts'][0]['Parts'][0]['Body'])){
	//$mensaje['body'] = $decoded[0]['Parts'][0]['Parts'][0]['Body'];
	$body = strip_tags($decoded[0]['Parts'][0]['Parts'][0]['Parts'][0]['Body']);
}

//------------------------eliminar las citas del cuerpo del mensaje

//$mensaje['body'] = preg_replace('#(^\w.+:\n)?(^>.*(\n|$))+#mi', "", $body);
//get rid of any quoted text in the email body
$body_array = explode("\n",$body);
$message = "";
$subcadena = "="; 
foreach($body_array as $key => $value){

	//remove hotmail sig
	if($value == "_________________________________________________________________"){
		//break;
		//$body = str_replace($value, "", $requisicion_mask[0]);
	//original message quote
	} elseif(preg_match("/^-*(.*)Original Message(.*)-*/",$value,$matches)){
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//check for date wrote string
	} elseif(preg_match("/^On(.*)wrote:(.*)/",$value,$matches)) {
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//check for From Name email section
	} elseif(preg_match("/^On(.*){$mensaje['fromName']}(.*)/",$value,$matches)) {
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//check for To Name email section
	} elseif(preg_match("/^On(.*){$mensaje['toName']}(.*)/",$value,$matches)) {
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//check for To Email email section
	} elseif(preg_match("/^(.*){$mensaje['toEmail']}(.*)wrote:(.*)/",$value,$matches)) {
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//check for From Email email section
	} elseif(preg_match("/^(.*){$mensaje['fromEmail']}(.*)wrote:(.*)/",$value,$matches)) {
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//check for quoted ">" section
	} elseif(preg_match("/^>(.*)/",$value,$matches)){
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//check for date wrote string with dashes
	} elseif(preg_match("/^---(.*)On(.*)wrote:(.*)/",$value,$matches)){
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//add line to body
	}elseif(preg_match("/^De:(.*)mailto:(.*)/",$value,$matches)){
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//add line to body
	}elseif(preg_match("/^Enviado el:(.*)/",$value,$matches)){
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//add line to body
	}elseif(preg_match("/^Asunto:(.*)/",$value,$matches)){
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//add line to body
	}elseif(preg_match("/^Para:(.*)/",$value,$matches)){
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//add line to body
	}
	elseif(preg_match("/^====== Responda arriba de esta linea ======(.*)/",$value,$matches)){
		break;
		//$body_naked .= str_replace($value, "", $matches[0]);
	//add line to body
	} 
	else {
		//$message .= $value."\n";
		$body_naked .= $value;
	}

}
/*$posicionsubcadena = strpos ($body_naked, $subcadena);
if(!empty($posicionsubcadena)){
	$body_eliminar = substr ($body_naked, ($posicionsubcadena+1)); 
	$body_naked1 = str_replace($body_eliminar, "", $body_naked);
	$body_naked2 = str_replace("=", "", $body_naked1);
	$mensaje['body'] = $body_naked2;
}else{
	$mensaje['body'] = $body_naked;
}*/
$mensaje['body'] = $body_naked;

//compare before and after
//echo "$body<br><br><br>$message";
//$mensaje['body'] = $body_naked2;


//------------------------ ATTACHMENTS ------------------------------------//
//loop through email parts

foreach($decoded[0]['Parts'] as $part){
	//check for attachments
	if($part['FileDisposition'] == 'attachment'){ 		
		//add file to attachments array
		$mensaje['attachments'][]['nombre'] = $part['FileName'];
		$mensaje['attachments'][]['archivo'] = chunk_split(base64_encode($part['Body']));
	}
}


/*
 
  foreach($decoded[0]['Parts'] as $part){
	//check for attachments
	if($part['Headers']['content-disposition:'] && $part['Headers']['content-disposition:']=='attachment' && $part['Body'] && $part['Body']!="" && !$part['FileDisposition'] ){ 		
		//add file to attachments array 
      preg_match("/filename=\".*\"(.*)/is",$part['Body'],$matches,PREG_OFFSET_CAPTURE);
      if(isset($matches[1][1]) && $matches[1][1]!='' ){
 		$file64 = (substr($part['Body'],$matches[1][1])); 
 	  	preg_match("/filename=\"(.*)\"/is",$part['Body'],$matches2);
 		if(isset($matches2[1]) && $matches2[1]!='' ){
 			$mensaje['attachments'][]['nombre'] = $matches2[1] ;
			$mensaje['attachments'][]['archivo'] = chunk_split(($file64));
 		}
      	
      }
 	  
	}
}
 */
//se define la instancia del cliente
$client = new nusoap_client('http://grp.ti-america.com/lib/requisiciones.php?wsdl', true);

// Check for an error
$err = $client->getError();
$fdw = fopen("mi_debug.txt", "a+");
fwrite($fdw, "Error:  ".$err."\nMuestro el mensaje: \n".print_r($mensaje,true)); 
fclose($fdw); 
/*
if($err){
    // Display the error
    //echo '<h2>Constructor error</h2><pre>' . $err . '</pre>';
    // At this point, you know the call that follows will fail
    // Saves the data into a file 
	// $fdw = fopen("debug.txt", "a+");
	//fwrite($fdw, "hubo error" );
	//fclose($fdw); 
}
else{
	$fdw = fopen("mi_debug.txt", "a+");
	fwrite($fdw, "No hubo error, muestro el mensaje: \n".print_r($mensaje,true)); 
	fclose($fdw); 
}
*/

// Call the SOAP method
$result = $client->call('insert', array('mensaje' => $mensaje));

//$requisicion_mask = array();
//preg_match("/\[[a-zA-Z]{3}-[0-9]{6}\]$/", $mensaje['subject'], $requisicion_mask); 
//$mascara =	 "la mascara es: ". $requisicion_mask[0];
/*$fp = fopen("mail.txt","a+");
fwrite($fp, $result);
fclose($fp);*/

// Check for a fault
if ($client->fault) {
    echo '<h2>Fault</h2><pre>';
    print_r($result);
    echo '</pre>';
	$fdw = fopen("debug.txt", "a+");
	fwrite($fdw, "resultado fault".$result );
	fclose($fdw);
} else {
    // Check for errors
    $err = $client->getError();
    if ($err) {
        // Display the error
        echo '<h2>Error</h2><pre>' . $err . '</pre>';
    } else {
    	$fp = fopen("debug.txt","a+");
		fwrite($fp, "errores fault: ".$result);
		fclose($fp); 

        // Display the result
        echo '<h2>Result</h2><pre>';
        print_r($result);
        echo '</pre>';
    }
}
// Display the request and response
echo '<h2>Request</h2>';
echo '<pre>' . htmlspecialchars($client->request, ENT_QUOTES) . '</pre>';
echo '<h2>Response</h2>';
echo '<pre>' . htmlspecialchars($client->response, ENT_QUOTES) . '</pre>';
// Display the debug messages
echo '<h2>Debug</h2>';
echo '<pre>' . htmlspecialchars($client->debug_str, ENT_QUOTES) . '</pre>';
ob_end_clean(); 
?>
