<!DOCTYPE html>
<?php
/*****************************************************************************
* This page loads in an article from the database and builds a resulting html page
* that is then saved using its own unique name
******************************************************************************/
// pull in the autoload file
require_once($_SERVER['DOCUMENT_ROOT'] . "/includes/init.php");    // class autoloader and other things
/*
if(isset($_REQUEST['build']) && $_REQUEST['build'] == "1" && isset($_REQUEST['id']) && $_REQUEST['id'] != ''){
    // load up the article
    $pageItems = "";
    $article = new Article($_REQUEST['id']);
    $thisPageName = $article->article_name . ".html";
    //var_dump(json_decode($article->article_content));
    $contents = base64_decode($article->article_content);
    $pageTitle = $article->article_name;
    //var_dump($contents);
    //echo "<br /><br />";
}
*/
$collections = [];

//*
// Section: Australia
$collections[] = array(532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558);    // Sydney
$collections[] = array(559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582);    // Melbourne
$collections[] = array(583,584,585,586,587,588,589,590,591,596,592,593,594,595,597,598,599,600,601,602,603,604,605,606);    // Gold Coast and Byron Bay
$collections[] = array(1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315);    // Brisbane
$collections[] = array(1316,1317,1318,1319,1320,1321,1322,1323,1324,1325,1326,1327,1328,1329,1330,1331,1333,1334,1335,1336,1337,1338);    // Adelaide
$collections[] = array(1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1349,1350,1351,1352,1353,1354,1355,1356,1357,1358,1359,1360);    // Perth
$collections[] = array(1361,1362,1383,1368,1384,1380,1382,1381,1379,1378,1377,1375,1374,1376,1373,1369,1370,1371,1372,1367,1366,1364,1365,1363);    // Northern Australia
$collections[] = array(1385,1386,1387,1388,1389,1390,1391,1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406);    // Top 20 Australian islands
//*/

//*
// Section: Pacific Islands
$collections[] = array(1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052);   // Fiji
$collections[] = array(2019,2021,2023,2025,2028,2029,2031,2032,2034,2036,2037,2039,2040,2042,2043,2045,2057,2059,2060,2061,2063,2064);   // Samoa
$collections[] = array(1875,1876,1879,1880,1881,1883,1885,1887,1889,1893,1895,1897,1899,1901,1903,1906,1907,1909,1917,1919,1921,1923);   // Rarotonga - Cook Islands
$collections[] = array(1985,1986,2000,1999,1993,1991,1990,1989,2006,2003,2005,2004,2002,2001,1997,1998,1996,1995,1994,1992,1988,1987);   // Tongas
$collections[] = array(1053,1054,1056,1058,1055,1063,1064,1066,1073,1059,1061,1067,1077,1074,1057,1060,1062,1065,1068,1080);   // Vanuatu
//*/

/*
// Section: Inspire Me
$collections[] = array(2648,2649,2650,2651,2652,2653,2654,2655,2656,2657,2658,2659,2660,2661,2662,2663,2664,2665,2666,2667);    // Natural wonders
$collections[] = array(2588,2589,2590,2591,2592,2593,2594,2595,2596,2597,2598,2599,2600,2601,2602,2603,2604,2605,2606,2607);    // Islands of the world
$collections[] = array(2568,2569,2570,2571,2572,2573,2574,2575,2576,2577,2578,2579,2580,2581,2582,2583,2584,2585,2586,2587);    // Beaches of the world
$collections[] = array(2608,2609,2610,2611,2612,2613,2614,2615,2616,2617,2618,2619,2620,2621,2622,2623,2624,2625,2626,2627);    // Cities
$collections[] = array(2628,2629,2630,2631,2632,2633,2634,2635,2636,2637,2638,2639,2640,2641,2642,2643,2644,2645,2646,2647);    // Man made structures
//*/

foreach($collections AS $collectionIds){
    $hasSidePages = false;
    $firstPageName = "";
    $ind = 0;
    $falseList = [];
    $imageList = [];
    $scriptList = ["jquery.3.3.1.min.js","hammer.min.js","dotbacker.png"];
    $cssList = ["article.css"];
    $fontList = ["BebasNeue.otf","Gotham-Book.otf","Gotham-Medium.otf"];
    $pageList = [];
    $imageFolder = "";
    $counter = 0;
    $sidePagesIndex = array_search(0,$collectionIds);   // stores the position in the page ID array of the "0" (zero), this is used to indicate that
    if($sidePagesIndex !== false){
        $hasSidePages = true;
    }
    // we have gone past the list of navigational pages and we're now on "side loaded" pages
    // that do not appear in the swipe left/right navigation but can be navigated to via http links

    foreach($collectionIds AS $page){
        // take the first article ID and use that as the image folder

        if($counter == 0){
            $imageFolder = (string)$page;
            if(is_dir($_SERVER['DOCUMENT_ROOT'] . "/api/apps/2/" . $imageFolder)){
                deleteDir($_SERVER['DOCUMENT_ROOT'] . "/api/apps/2/" . $imageFolder);
                //rmdir($_SERVER['DOCUMENT_ROOT'] . "/content/apps/1/" . $imageFolder);
            }
            mkdir($_SERVER['DOCUMENT_ROOT'] . "/api/apps/2/" . $imageFolder);
        }

        //echo "<b>START OF ARTICLE</b><br />";
        $articlePosition = $ind;
        global $firstPageName;
        $article = new Article($page);
        $articleId = $page;
        $options = $article->get_article_options() != null && $article->get_article_options() != '' ? $article->get_article_options() : "{}";
        $thisPageName = $article->article_name . ".html";
        if($firstPageName == ""){
            $firstPageName = $thisPageName;
        }
        $pageList[] = $article->article_name . ".html";
        //var_dump(json_decode($article->article_content));
        $contents = base64_decode($article->article_content);

        $pattern = array('/"https:\/\/acs\.peoplemediagroup\.co\.nz\/([0-9]+)\/([0-9]+)"/mi','/"https:\/\/acs\.peoplemediagroup\.co\.nz\/([0-9]+)\/([0-9]+)\/"/mi');
        $contents = preg_replace_callback($pattern,'getArticleURL',$contents);
        //echo preg_replace($pattern,"\"https://acs.peoplemediagroup.co.nz/$1/" . $imageFolder . "/" . getArticleURL($2) . "\"",$string);


        //$contents = base64_decode($article->article_content);
        //var_dump($contents);
        $cont = json_decode($contents);
        foreach($cont AS $item){
            //var_dump($item);
            if($item->item_type == "graphic"){
                if($item->{'background-image'} != ""){
                    $parts = explode("/",$item->{'background-image'});
                    $imageList[] = str_ireplace('")',"",$parts[count($parts)-1]);
                    if(copy($_SERVER["DOCUMENT_ROOT"] . "/content/apps/1/images/" . str_ireplace('")',"",$parts[count($parts)-1]),$_SERVER["DOCUMENT_ROOT"] . "/api/apps/2/" . $imageFolder . "/" . str_ireplace('")',"",$parts[count($parts)-1]))){
                        // do nothing - we copied OK
                    }
                    else{
                        $falseList[] = $_SERVER["DOCUMENT_ROOT"] . "/content/apps/1/images/" . str_ireplace('")',"",$parts[count($parts)-1]);
                    }
                }
            }
            if($item->item_type == "slideshow"){
                // grab each slide
                foreach($item->{'slides'} AS $slide){
                    $imageList[] = $slide->{'slide'};
                    copy($_SERVER["DOCUMENT_ROOT"] . "/content/apps/1/images/" . $slide->{'slide'},$_SERVER["DOCUMENT_ROOT"] . "/api/apps/2/" . $imageFolder . "/" . $slide->{'slide'});
                }
            }
        }

        $pageTitle = $article->article_name;
        $previousId = $articlePosition !== false && $articlePosition > 0 ? $collectionIds[$articlePosition - 1] : "";
        //$nextId = $articlePosition !== false && $articlePosition < (count($collectionIds) - 1) ? $collectionIds[$articlePosition + 1] : "";
        if($hasSidePages){
            $nextId = $articlePosition !== false && $articlePosition < ($sidePagesIndex - 1) ? $collectionIds[$articlePosition + 1] : "";
        }
        else{
            $nextId = $articlePosition !== false && $articlePosition < (count($collectionIds) - 1) ? $collectionIds[$articlePosition + 1] : "";
        }

        $nextArticle = "";
        $nextPage = "";
        $prevArticle = "";
        $prevPage = "";
            if($nextId != ""){
                $nextArticle = new Article($nextId);
                $nextPage = $nextArticle->article_name . ".html";
            }
            if($previousId != ""){
                $prevArticle = new Article($previousId);
                $prevPage = $prevArticle->article_name . ".html";
            }

        /*
        echo "Article Position is: " . $articlePosition . "<br />";
        echo "Previous ID is " . $previousId . "<br />";
        echo "Next ID is " . $nextId . "<br />";
        */
        if($page != 0) {
            $pageOut = <<<EOP
            <!DOCTYPE html>
            <html>
                <head>
                    <title>$pageTitle</title>
                    <meta something="xyx">
                    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1, maximum-scale=1">
                    <meta charset=utf-8>
                    <link rel="stylesheet" type="text/css" href="article.css" />
                    <script src="jquery.3.3.1.min.js"></script>
                    <script src="hammer.min.js"></script>
                    <script>
                        var settings = {
                            stageWidth: 569,
                            documentWidth: 320,
                            documentHeight: 568,
                            screenWidth: 320,
                            screenHeight: 568,
                            pixelScaling: 1,        // change this for smaller/larger view of phone (actual size for the iPhone 5s is approx .638)
                            screenLeft: 54,
                            screenTop: 125,
                            baseFontSize:16,
                            letterSpacing:1,
                            stageRatio: 0,
                            paddingTop: 6,
                            appName: 'roam',
                            articleId: $articleId,
                            appId: 2,
                            scrollBarWidth: 16,
                            topImagePadding: 0,
                            options: JSON.parse('$options')
                        }
                        settings["stageWidth"] = settings["appName"] == "roam" ? 320 : 569;
                        console.log("App name is: " + settings["appName"]);
                        function mobilecheck() {
                          var check = false;
                          (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
                          return check;
                        };
                    </script>

                </head>
                <body>
                    <div id="body_container">

                    </div>
EOP;
                    $index = 0;
                    /*
                    if(count($collectionIds) > 1){
                        if($hasSidePages){
                            $c = 0;
                            if($ind < $sidePagesIndex){
                                $pageOut .= "<div id=\"positionIndicator\">";
                                foreach($collectionIds AS $id){
                                    if($c < $sidePagesIndex){
                                        if($index == $articlePosition){
                                            $pageOut .= '<span class="dotOn"></span>';
                                        }
                                        else
                                        {
                                            $pageOut .= '<span class="dotOff"></span>';
                                        }
                                    }
                                    $index++;
                                    $c++;
                                }
                                $pageOut .= "</div>";
                            }
                        }
                        else
                        {
                            $pageOut .= "<div id=\"positionIndicator\">";
                            foreach($collectionIds AS $id){
                                if($index == $articlePosition){
                                    $pageOut .= '<span class="dotOn"></span>';

                                }
                                else
                                {
                                    $pageOut .= '<span class="dotOff"></span>';
                                }
                                $index++;
                            }
                            $pageOut .= "</div>";
                        }
                    }
                    //*/
                    $pageOut .= <<<EOP
                    <!--<div id="footer-title">
                        Get in touch
                    </div>
                    <div id="footer">
                        <div id="footer-links">
                            <div class="footer-link" data-url="https://www.facebook.com/STATravel">
                                <div class="footer-icon">
                                    <a href="https://www.facebook.com/STATravel"><img src="facebook_icon.png" style="border:none;"></a>
                                </div>
                            </div>
                            <div class="footer-link" data-url="https://twitter.com/STATravelCares">
                                <div class="footer-icon">
                                    <a href="https://twitter.com/STATravelCares"><img src="twitter_icon.png" style="border:none;"></a>
                                </div>
                            </div>
                            <div class="footer-link" data-url="https://www.instagram.com/statravel/">
                                <div class="footer-icon">
                                    <a href="https://www.instagram.com/statravel/"><img src="instagram_icon.png" style="border:none;"></a>
                                </div>
                            </div>
                            <div class="footer-link" data-url="https://www.youtube.com/user/statravel">
                                <div class="footer-icon">
                                    <a href="https://www.youtube.com/user/statravel"><img src="youtube_icon.png" style="border:none;"></a>
                                </div>
                            </div>
                            <div class="footer-link" data-url="https://www.pinterest.co.uk/statravel/">
                                <div class="footer-icon">
                                    <a href="https://www.pinterest.co.uk/statravel/"><img src="pinterest_icon.png" style="border:none;"></a>
                                </div>
                            </div>
                            <div class="footer-link" data-url="">
                                <div class="footer-icon">
                                    <a href="https://www.facebook.com/STATravel"><img src="email_icon.png" style="border:none;"></a>
                                </div>
                            </div>
                            <div class="footer-link" data-url="https://customercare.statravel.com/">
                                <div class="footer-icon">
                                    <a href="https://customercare.statravel.com/"><img src="faq_icon.png" style="border:none;"></a>
                                </div>
                            </div>
                        </div>
                    </div>-->
EOP;
                    $pageOut .= <<<EOP
                    <!--<div>
                    Prev Page: $prevPage<br />
                    Next Page: $nextPage
                    </div>-->
                    <script>
                        $(document).ready(function(){
                            // screen width
                            settings["screenWidth"] = $(window).width();
                            settings["scrollBarWidth"] = mobilecheck() ? 0 : 17;

                            // screen height
                            settings["screenHeight"] = $(window).height();
                            // document width
                            settings["documentWidth"] = $(window).width();
                            // document height
                            settings["documentHeight"] = $(window).height();
                            //if(parseInt($('body').outerHeight()) > parseInt(settings["screenHeight"])){
                            settings["screenWidth"] = parseInt(settings["screenWidth"] - settings["scrollBarWidth"]);
                            //}
                            // set the stageRatio accordingly
                            settings["stageRatio"] = (settings["screenWidth"] / settings["stageWidth"]) * settings["pixelScaling"];
                            //console.log("Stage Ratio is: " + settings["stageRatio"]);
                            // footer links
                            /*
                            $(".footer-link").unbind().click(function(){
                                document.location.href=\$this.attr("data-url");
                            });
                            */

                            buildElements();

                            var prevId = '$previousId';
                            var nextId = '$nextId';
                            var mc = new Hammer(document.getElementById('body_container'));
                            // listen to events...
                            mc.on("swipeleft swiperight", function(ev) {
                                if(ev.type == "swipeleft"){
                                    if(nextId != ""){
                                        // load next
                                        //document.location.href = '/article_template_output_test.php?build=1&id=' + nextId;
                                        document.location.href = '$nextPage';
                                    }
                                }
                                if(ev.type == "swiperight"){
                                    if(prevId != ""){
                                        // load previous
                                        //document.location.href = '/article_template_output_test.php?build=1&id=' + prevId;
                                        document.location.href = '$prevPage';
                                    }
                                }
                            });

                            $(window).resize(function(){
                                // screen width
                                settings["screenWidth"] = $(window).width();
                                // screen height
                                settings["screenHeight"] = $(window).height();
                                // document width
                                settings["documentWidth"] = $(window).width();
                                // document height
                                settings["documentHeight"] = $(window).height();
                                // set the stageRatio accordingly
                                settings["stageRatio"] = (settings["screenWidth"] / settings["stageWidth"]) * settings["pixelScaling"];
                                buildElements();
                                console.log("resizing!");
                            });

                        });

                        function escapeSpecialChars(jsonString) {

                        return jsonString.replace(/\\n/g, "\\\\n")
                                .replace(/\\r/g, "\\\\r")
                                .replace(/\\t/g, "\\\\t")
                                .replace(/\\f/g, "\\\\f")
                                .replace(/\\("/g,'(\\\\"')
                                .replace(/"\\)/g,'\\\\")')
                                .replace(/="\\)/g,'=\\\\")')
                                .replace(/;"\\)/g,';\\\\")')
                                .replace(/\\/js/g,"js")
                                .replace(/\\/css/g,"css")
                                .replace(/https:\\/\\/acs.peoplemediagroup.co.nz\\/content\\/apps\\/([0-9]*)\\/images/g,"$imageFolder");
                                // .replace(/https:\\/\\/acs.peoplemediagroup.co.nz\\/content\\/apps\\/([0-9]*)\\/images/g,"images");
                                //.replace(/https:\\/\\/acs.peoplemediagroup.co.nz\\/content\\/apps\\/([0-9]*)\\/js/g,"js");
                        }

                        function setTopImageHeight(){
                            if(settings["appName"] == 'roam' && (settings["options"].hasOwnProperty("fit_first_two") && settings["options"]["fit_first_two"] == 1)){
                                var itemsx = $('#body_container').children().slice(0,2);
                                myScreenHeight = window.innerHeight;
                                console.log("Items length is: " + itemsx.length);
                                console.log("MyScreenHeight is: " + myScreenHeight);
                                console.log($(itemsx[1]).outerHeight());
                                $(itemsx[0]).css("height",(myScreenHeight - $(itemsx[1]).outerHeight() - settings["topImagePadding"]) + "px");
                                console.log("Height should now be set to: " + (myScreenHeight - $(itemsx[1]).outerHeight()) + "px");
                                console.log("ran the sizing process");
                            }
                        }

                        function setTopImagePadding(){
                            if(settings["appName"] == 'roam' && (settings["options"].hasOwnProperty("fit_first_two") && settings["options"]["fit_first_two"] == 1)){
                                console.log("ScrollBarWidth is : " + settings["scrollBarWidth"]);
                                var itemsx = $('#body_container').children().slice(0,1);
                                var width = $(itemsx[0]).css("width");
                                var screenWidth = window.innerWidth - settings["scrollBarWidth"];
                                console.log("Screen width is: " + screenWidth);
                                if(width.indexOf("%") > -1){
                                    width = width.replace("%","");
                                    topPadding = (screenWidth * (width/100)) / 2;
                                }
                                else
                                {
                                    width = width.replace("px","");
                                    console.log("Width is: " + width);
                                    topPadding = (screenWidth - width) / 2;
                                }
                                console.log("Top padding is: " + topPadding);
                                $(itemsx[0]).css("margin-top",topPadding + "px");
                                settings["topImagePadding"] = topPadding;
                            }
                        }
EOP;
                        $pageOut .= PHP_EOL;
                        $pageOut .= "var contents = '" . str_ireplace(chr(145),"&rsquo;",$contents) . "';" . PHP_EOL;
                        $pageOut .= <<<EOP
                        contents = contents.replace(/\\("/g,'(\\\\"').replace(/"\\)/g,'\\\\")').replace(/="/g,'=\\\\"').replace(/;"/g,';\\\\"').replace(/[\\u2018\\u2019]/g,"&rsquo;").replace(/https:\\/\\/acs.peoplemediagroup.co.nz\\/content\\/apps\\/([0-9]*)\\/images\//g,"").replace(/\\/js/g,"").replace(/\\/css/g,"");
                        contents = JSON.parse(contents);
                        //document.write(contents);
                        var slideShowArray = [];
                        function buildElements(){

                            $('#body_container').html('');
                            // start building the stuff
                            var items = contents;
                            //console.log(items);
                            for (var k in items){
                                var item = items[k];
                                // check for item type first to determine what we're going to do with it
                                var \$d = $(document.createElement("div"));
                                switch(item["item_type"]){
                                    case "title":
                                        // build up the element based on its properties, then add it to the document.
                                        //alert("title element loaded");
                                        \$d.addClass("title");
                                        \$d2 = $(document.createElement("div"));
                                        \$d2.addClass("title_inner");
                                        \$d2.html(item["item_text"]);
                                        \$d.css({"margin-top":item["margin-top"],"margin-bottom":item["margin-bottom"],color:item["color"],"font-size":item["font-size"],"text-align":item["text-align"]});
                                        \$d.append(\$d2);
                                        $('#body_container').append(\$d);
                                    break;
                                    case "boxed-title":
                                        //alert("boxed-title element loaded");
                                        \$d.addClass("boxed_title");
                                        \$d2 = $(document.createElement("div"));
                                        \$d2.addClass("boxed_title_inner");
                                        \$fontSize = 16;
                                        if(item.hasOwnProperty("font-size")){
                                            if(item["font-size"].indexOf("px") > -1){
                                                if(item.hasOwnProperty("background-color")){
                                                    if(settings["documentWidth"] < 600){
                                                        \$fontSize = (item["font-size"].replace("px","")) + "px";
                                                    }
                                                    else
                                                    {
                                                        \$fontSize = (item["font-size"].replace("px","") * settings["stageRatio"]) + "px";
                                                    }
                                                }
                                                else{
                                                    \$fontSize = (item["font-size"].replace("px","") * settings["stageRatio"] * 1.8) + "px";
                                                }
                                            }
                                            else{
                                                if(item.hasOwnProperty("background-color")){
                                                    if(settings["documentWidth"] < 600){
                                                        \$fontSize = ((item["font-size"].replace("em","")) * settings["baseFontSize"]) + "px";
                                                    }
                                                    else{
                                                        \$fontSize = ((settings["stageRatio"] * item["font-size"].replace("em","")) * settings["baseFontSize"]) + "px";
                                                    }
                                                }
                                                else{
                                                    \$fontSize = ((settings["stageRatio"] * item["font-size"].replace("em","")) * settings["baseFontSize"] * 1.8) + "px";
                                                }
                                            }
                                        }
                                        else{
                                            \$fontSize += "px";
                                        }
                                        \$lineHeight = 16;
                                        if(item.hasOwnProperty("line-height")){
                                            if(item["line-height"].indexOf("px") > -1){
                                                if(item.hasOwnProperty("background-color")){
                                                    if(settings["documentWidth"] < 600){
                                                        \$lineHeight = (item["line-height"].replace("px","")) + "px";
                                                    }
                                                    else
                                                    {
                                                        \$lineHeight = (item["line-height"].replace("px","") * 1.8) + "px";
                                                    }
                                                }
                                                else{
                                                    \$lineHeight = (item["line-height"].replace("px","") * settings["stageRatio"] * 1.8) + "px";
                                                }
                                            }
                                            else{
                                                \$lineHeight = ((settings["stageRatio"] * item["line-height"].replace("em","")) * settings["baseFontSize"] * 1.8) + "px";
                                            }
                                        }
                                        else{
                                            \$lineHeight += "px";
                                        }
                                        \$letterSpacing = 1;
                                        if(item.hasOwnProperty("letter-spacing")){
                                            if(item["letter-spacing"].indexOf("px") > -1){
                                                \$letterSpacing = (item["letter-spacing"].replace("px","") * settings["pixelScaling"]) + "px";
                                            }
                                            else{
                                                \$letterSpacing = ((settings["pixelScaling"] * item["letter-spacing"].replace("em","")) * settings["letterSpacing"]) + "px";
                                            }
                                        }
                                        else{
                                            \$letterSpacing += "px";
                                        }
                                        \$marginTop = 0;
                                        if(item.hasOwnProperty("margin-top")){
                                            if(item["margin-top"].indexOf("px") > -1){
                                                \$marginTop = (parseInt(item["margin-top"].replace("px","")) + 20) + "px";
                                                //\$marginTop = (item["margin-top"].replace("px","") * settings["stageRatio"]) + "px";
                                            }
                                            else{
                                                \$marginTop = (item["margin-top"].replace("em","")) + "px";
                                                //\$marginTop = ((settings["stageRatio"] * item["margin-top"].replace("em",""))) + "px";
                                            }
                                        }
                                        else{
                                            \$marginTop += "px";
                                        }
                                        \$marginBottom = 0;
                                        if(item.hasOwnProperty("margin-bottom")){
                                            if(item["margin-bottom"].indexOf("px") > -1){
                                                \$marginBottom = (parseInt(item["margin-bottom"].replace("px",""))) + "px";
                                                //\$marginBottom = (item["margin-bottom"].replace("px","") * settings["stageRatio"]) + "px";
                                            }
                                            else{
                                                \$marginBottom = (item["margin-bottom"].replace("em","")) + "px";
                                                // \$marginBottom = ((settings["stageRatio"] * item["margin-bottom"].replace("em",""))) + "px";
                                            }
                                        }
                                        else{
                                            \$marginBottom += "px";
                                        }

                                        // add 6 px to top padding;
                                        \$padding = item["padding"];
                                        if(\$padding.indexOf(" ") > - 1){
                                            // multiple values, take the first value and add 6px to it
                                            \$parts = \$padding.split(" ");
                                            for(var i = 0;i<\$parts.length;i++){
                                                if(i == 0){

                                                }
                                            }
                                        }
                                        else
                                        {
                                            // take the one value we have and repeat it three times after adding the top padding
                                            \$padding = (settings["paddingTop"] + parseInt(item["padding"].replace("px",""))) + "px" + " " + item["padding"] + " " + item["padding"];
                                        }

                                        \$d2.css({"background-color":item["background-color"],"border":item["border"],color:item["color"],"font-size":\$fontSize,"text-align":item["text-align"],"font-family":item["font-family"],"width":item["width"],"padding":\$padding,"letter-spacing":\$letterSpacing,"line-height":\$lineHeight});
                                        \$d2.html(item["item_text"]);
                                        \$d.css({"margin-top":\$marginTop,"margin-bottom":\$marginBottom});
                                        \$d.append(\$d2);
                                        $('#body_container').append(\$d);
                                    break;
                                    case "copy":
                                        //alert("copy element loaded");
                                        \$d.addClass("copy");
                                        //console.log(unescape(item["item_text"]));
                                        \$d.html(unescape(item["item_text"]).replace(/"/g, '\\"').replace(/\\r\\n/g, "<br />").replace(/\\n/g, "<br />"));
                                            \$fontSize = 16;
                                            if(settings["documentWidth"] < 600){
                                                \$fontSize = "18px";
                                            }
                                            else{
                                                if(item["font-size"].indexOf("px") > -1){
                                                    //\$fontSize = (item["font-size"].replace("px","")) + "px";
                                                    \$fontSize = (item["font-size"].replace("px","") * settings["stageRatio"]) + "px";
                                                }
                                                else{
                                                    \$fontSize = ((settings["stageRatio"] * item["font-size"].replace("em","")) * settings["baseFontSize"]) + "px";
                                                    //\$fontSize = ((item["font-size"].replace("em","")) * settings["baseFontSize"]) + "px";
                                                }
                                            }

                                            \$lineHeight = 16;
                                            if(settings["documentWidth"] < 600){
                                                \$lineHeight = "22px";
                                            }
                                            else
                                            {
                                                if(item["line-height"].indexOf("px") > -1){
                                                    \$lineHeight = (item["line-height"].replace("px","") * settings["stageRatio"]) + "px";
                                                }
                                                else{
                                                    \$lineHeight = ((settings["stageRatio"] * item["line-height"].replace("em","")) * settings["baseFontSize"]) + "px";
                                                }
                                            }

                                            \$marginTop = 0;
                                            if(item.hasOwnProperty("margin-top")){
                                                if(item["margin-top"].indexOf("px") > -1){
                                                    \$marginTop = (parseInt(item["margin-top"].replace("px","")) + 15) + "px";
                                                    // \$marginTop = (item["margin-top"].replace("px","") * settings["stageRatio"]) + "px";
                                                }
                                                else{
                                                    \$marginTop = ((parseInt(item["margin-top"].replace("em",""))) + 5) + "px";
                                                    // \$marginTop = ((settings["stageRatio"] * item["margin-top"].replace("em",""))) + "px";
                                                }
                                            }
                                            else{
                                                \$marginTop += "px";
                                            }
                                            \$marginBottom = 0;
                                            if(item.hasOwnProperty("margin-bottom")){
                                                if(item["margin-bottom"].indexOf("px") > -1){
                                                    \$marginBottom = (parseInt(item["margin-bottom"].replace("px","")) + 15) + "px";
                                                    // \$marginBottom = (item["margin-bottom"].replace("px","") * settings["stageRatio"]) + "px";
                                                }
                                                else{
                                                    \$marginBottom = (parseInt(item["margin-bottom"].replace("em",""))) + "px";
                                                    // \$marginBottom = ((settings["stageRatio"] * item["margin-bottom"].replace("em",""))) + "px";
                                                }
                                            }
                                            else{
                                                \$marginBottom += "px";
                                            }
                                            \$d.css({"margin-top":\$marginTop,"margin-bottom":\$marginBottom,"line-height": \$lineHeight,"text-align":item["text-align"],"font-size":\$fontSize,"font-family":item["font-family"],width:item["width"]});
                                        $('#body_container').append(\$d);
                                    break;
                                    case "graphic":
                                        //alert("graphic element loaded");
                                        \$d.addClass("graphicContainer");
                                        if(item["uses_fade"] == "true"){
                                            \$d.addClass("graphic");
                                        }
                                        else{
                                            \$d.addClass("graphicNoFade");
                                        }
                                        if(item["fit_screen"] == "1"){
                                            \$d.css({height:settings["documentHeight"] + "px"});
                                        }
                                        else
                                        {
                                            console.log("No fit present, so setting image sizes based on scaling and proportions");
                                            // maths to calculate the image size
                                            //console.log("Stage Ratio is: " + settings["stageRatio"]);
                                            \$d.css({height:(item["height"].replace("px","") * settings["stageRatio"]) + "px"});
                                            \$tempWidth = 0;
                                            if(item["width"].indexOf("%") > -1){
                                                // take the width, convert to pixels
                                                \$tempWidth = settings["screenWidth"] * (item["width"].replace("%","") / 100);
                                            }
                                            else{
                                                // pixels
                                                \$tempWidth = item["width"].replace("px","");
                                            }
                                            console.log("TempWidth is: " + \$tempWidth);
                                            \$d.css({width:(\$tempWidth * settings["stageRatio"]) + "px"});
                                            console.log("item height is " + item["height"]);
                                            console.log("item width: " + item["width"]);
                                        }
                                        // url, if any
                                        if(item.hasOwnProperty("data-url")){
                                            if(item["data-url"] != 'undefined' && item["data-url"] != ''){
                                                \$d.attr({"onclick":"document.location.href='" + item["data-url"] + "';"});
                                            }
                                        }
                                        \$marginTop = 0;
                                        if(item.hasOwnProperty("margin-top")){
                                            if(item["margin-top"].indexOf("px") > -1){
                                                //\$marginTop = (item["margin-top"].replace("px","") * settings["stageRatio"]) + "px";
                                                \$marginTop = (parseInt(item["margin-top"].replace("px",""))) + "px";
                                            }
                                            else{
                                                //\$marginTop = ((settings["stageRatio"] * item["margin-top"].replace("em",""))) + "px";
                                                \$marginTop = (parseInt((item["margin-top"].replace("em","")))) + "px";
                                            }
                                        }
                                        else{
                                            \$marginTop += "px";
                                        }
                                        \$marginBottom = 0;
                                        if(item.hasOwnProperty("margin-bottom")){
                                            if(item["margin-bottom"].indexOf("px") > -1){
                                                \$marginBottom = (parseInt(item["margin-bottom"].replace("px",""))) + "px";
                                                // \$marginBottom = (item["margin-bottom"].replace("px","") * settings["stageRatio"]) + "px";
                                            }
                                            else{
                                                \$marginBottom = (parseInt((item["margin-bottom"].replace("em","")))) + "px";
                                                //\$marginBottom = ((settings["stageRatio"] * item["margin-bottom"].replace("em",""))) + "px";
                                            }
                                        }
                                        else{
                                            \$marginBottom += "px";
                                        }
                                        \$d.css({"margin":"auto", "margin-top":\$marginTop, "margin-bottom":\$marginBottom, "background-image": item["background-image"].replace(/"/g, ''), "background-repeat":"no-repeat", "background-size":"cover", "background-position":item["background-position"], "width":item["width"]});
                                        $('#body_container').append(\$d);
                                    break;
                                    case "slideshow":
                                        //alert("graphic element loaded");
                                        \$d.addClass("graphicContainer");

                                        /*
                                        // ignore height for now
                                        if(item["fit_screen"] == "1"){
                                            \$d.css({height:settings["documentHeight"] + "px"});
                                        }
                                        else
                                        {
                                            // maths to calculate the image size
                                            // console.log("Stage Ratio is: " + settings["stageRatio"]);
                                            \$d.css({height:(item["height"].replace("px","") * settings["stageRatio"]) + "px"});
                                            \$tempWidth = 0;
                                            if(item["width"].indexOf("%") > -1){
                                                // take the width, convert to pixels
                                                \$tempWidth = settings["screenWidth"] * (item["width"].replace("%","") / 100);
                                            }
                                            else{
                                                // pixels
                                                \$tempWidth = item["width"].replace("px","");
                                            }
                                            \$d.css({width:(\$tempWidth * settings["stageRatio"]) + "px"});
                                        }
                                        */

                                        \$marginTop = 0;
                                        if(item.hasOwnProperty("margin-top")){
                                            if(item["margin-top"].indexOf("px") > -1){
                                                //\$marginTop = (item["margin-top"].replace("px","") * settings["stageRatio"]) + "px";
                                                \$marginTop = (parseInt(item["margin-top"].replace("px",""))) + "px";
                                            }
                                            else{
                                                //\$marginTop = ((settings["stageRatio"] * item["margin-top"].replace("em",""))) + "px";
                                                \$marginTop = (parseInt((item["margin-top"].replace("em","")))) + "px";
                                            }
                                        }
                                        else{
                                            \$marginTop += "px";
                                        }

                                        \$marginBottom = 0;
                                        if(item.hasOwnProperty("margin-bottom")){
                                            if(item["margin-bottom"].indexOf("px") > -1){
                                                \$marginBottom = (parseInt(item["margin-bottom"].replace("px",""))) + "px";
                                                // \$marginBottom = (item["margin-bottom"].replace("px","") * settings["stageRatio"]) + "px";
                                            }
                                            else{
                                                \$marginBottom = (parseInt((item["margin-bottom"].replace("em","")))) + "px";
                                                //\$marginBottom = ((settings["stageRatio"] * item["margin-bottom"].replace("em",""))) + "px";
                                            }
                                        }
                                        else{
                                            \$marginBottom += "px";
                                        }



                                        // determine tallest image in slideshow
                                        function getMaxSlideHeight(src,slideShowId){
                                            var img = new Image();
                                            img.src = src;
                                            img.onload = function(){
                                                setMaxSlideHeight(img.naturalHeight, img.naturalWidth,slideShowId);
                                            }
                                        }

                                        //now that we have the slide height, we look at the caption heights...
                                        function setMaxSlideHeight(height,width,slideShowId){
                                            maxSlideHeight = height > maxSlideHeight ? height : maxSlideHeight;
                                            maxSlideWidth = width > maxSlideWidth ? width : maxSlideWidth;
                                            // set the slide show slide heights
                                            $('.sliderDiv_' + slideShowId).css({"height":((settings["screenWidth"] / maxSlideWidth) * maxSlideHeight) + "px"});
                                            $('.navLinks_' + slideShowId).css("top",(((settings["screenWidth"] / maxSlideWidth) * maxSlideHeight) - 50) + "px");

                                            //alert("Height is " + height);
                                        }

                                        // loop through the slides
                                        var slideShowId = item["slideshow_id"];
                                        slideShowArray.push(slideShowId);
                                        var slides = item["slides"];
                                        var maxSlideHeight = 100;
                                        var maxSlideWidth = 100;
                                        var maxCaptionHeight = 30;

                                        // container div for the entire slide show
                                        var d2 = $(document.createElement("div"));
                                        d2.attr({"data-slideshow-id":slideShowId,"id":"slideShow_" + slideShowId});
                                        d2.addClass("slideShowMain");
                                        d2.css({"overflow-x":"hidden","width":settings["screenWidth"] + "px","position":"relative"});

                                        // slides wrapper div, which is the wide thing that slides inside the above container
                                        var d3 = $(document.createElement("div"));
                                        d3.addClass("slideShowInner");
                                        d3.addClass("slideShowInner_" + slideShowId);
                                        d3.attr({"id":"slideInner_" + slideShowId});
                                        d3.css({"width":parseInt(settings["screenWidth"] * slides.length) + "px","transform": "translate3d(0, 0, 0)","transition": "transform .5s ease-in-out"});

                                        var slideSrcArray = [];
                                        for (var i=0;i<slides.length;i++){
                                            slideSrcArray.push(slides[i]["slide"]);
                                        }


                                        for (var i=0;i<slides.length;i++){
                                            var d = $(document.createElement("div"));
                                            d.addClass("sliderDivContainer");
                                            // the slide image itself
                                            var isd = $(document.createElement("div")); // Inner Slide Div
                                            isd.addClass("sliderDiv");
                                            isd.addClass("sliderDiv_" + slideShowId);
                                            isd.attr({"style":"background-image:url(" + slideSrcArray[i] + ");background-repeat:no-repeat;background-size:cover;background-position: 50% 50%;width:" + settings["screenWidth"] + "px;"});
                                            isd.css({"height":"350px"});
                                            d.append(isd);
                                            // now the caption div
                                            var icd= $(document.createElement("div")); // Inner Caption Div
                                            icd.addClass("caption_" + slideShowId);
                                            icd.addClass("slideCaption");
                                            //isd.addClass("sliderDiv");
                                            icd.attr({"style":slides[i]["caption-style"]});
                                            icd.css({"width":settings["screenWidth"] + "px"});
                                            var tmpCapt = slides[i]["caption"].trim();
                                            if(tmpCapt.indexOf("<p><br></p>") == 0){
                                                console.log("Found a <p><br></p> sequence, replacing");
                                                tmpCapt = tmpCapt.replace("<p><br></p>","");
                                                console.log("New sequence is " + tmpCapt);
                                            }
                                            //icd.html(slides[i]["caption"]);
                                            icd.html(tmpCapt);
                                            d.append(icd);
                                            d3.append(d);
                                        }



                                        //navlinks
                                        var ls = $(document.createElement("div"));
                                        ls.attr("id","navLinks_" + slideShowId);
                                        ls.addClass("navLinks_" + slideShowId);
                                        ls.addClass("navLinks");
                                        var ul = $(document.createElement("ul"));

                                        for (var i=0;i<slides.length;i++){
                                            var li = $(document.createElement("li"));
                                            li.addClass("itemLinks");
                                            li.addClass("itemLinks_" + slideShowId);
                                            li.attr("data-pos",(parseInt(i*settings["screenWidth"]) * -1) + "px");
                                            ul.append(li);
                                        }
                                        ls.append(ul);

                                        // now add the slides (we have heights of the slide images from above)
                                        // append the wide into the main slideshow container
                                        d2.append(d3);
                                        d2.append(ls);
                                        \$d.append(d2);
                                        \$d.css({"margin":"auto", "margin-top":\$marginTop, "margin-bottom":\$marginBottom});
                                        // Append it all to the body
                                        $('#body_container').append(\$d);
                                        // this must run after the element has been added
                                        for (i=0;i<slideSrcArray.length;i++){
                                                // load each image and get its height and width
                                                var img = new getMaxSlideHeight("" + slideSrcArray[i],slideShowId);
                                        }
                                        // caption heights
                                        $('.caption_' + slideShowId).css({"height":"auto"});
                                        // set the slideshow controls
                                        setSlideShowLinks(slideShowId);
                                        // set width and height of navlinks
                                        $('.navLinks_' + slideShowId).css({"width":"100%"});
                                    break;
                                }
                            }
                            if(settings["documentWidth"] > 600){
                                $('.copy').css("width","65%");
                            }

                            setTopImagePadding();
                            setTopImageHeight();
                        }
                    </script>
                    <script>
                        var links;
                        var activeLink = 0;
                        var transforms = ["transform","msTransform","webkitTransform","mozTransform","oTransform"];
                        var transformProperty;

                        function setClickedItem(wrapper) {
                            removeActiveLinks(wrapper);
                            var e = window.event;
                            var clickedLink = e.target;
                            activeLink = clickedLink.itemID;
                            changePosition(clickedLink, wrapper);
                        }

                        function removeActiveLinks(wrapper) {
                            var newId = "itemLinks" + wrapper.id.replace("slideInner","");
                            $('.' + newId).each(function(){
                                $(this).removeClass("active");
                            });
                        }

                        function changePosition(link, wrapper) {
                            var position = link.getAttribute('data-pos');
                            var translateValue = "translate3d(" + position + ", 0px, 0)";
                            wrapper.style[transformProperty] = translateValue;
                            link.classList.add("active");
                        }

                        function setSlideShowLinks(showId){
                            links = document.querySelectorAll(".itemLinks_" + showId);
                            var wrapper = document.querySelector(".slideShowInner_" + showId);
                            activeLink = 0
                            for (var i = 0; i < links.length; i++) {
                                //What we are doing here is going through each item in our links variable and assigning an event listener to them. This event listener will call the setClickedItem function when the click event is overheard.
                                var link = links[i];
                                link.addEventListener('click',
                                    function(){
                                        setClickedItem(wrapper);
                                    },
                                    false);
                                // identify the item for the active link
                                link.itemID = i
                            }
                            links[activeLink].classList.add("active");
                            transformProperty = getSupportedPropertyName(transforms);
                        }

                        // vendor prefix management
                        function getSupportedPropertyName(properties) {
                            for (var i = 0; i < properties.length; i++) {
                                if (typeof document.body.style[properties[i]] != "undefined") {
                                    return properties[i];
                                }
                            }
                            return null;
                        }
                        //setSlideShowLinks();
                    </script>
                </body>
            </html>
EOP;
        }
        //echo $pageOut;
        $ind++;
        //echo "<b>END OF ARTICLE</b><br /><br />";
        file_put_contents($_SERVER['DOCUMENT_ROOT'] . "/api/apps/2/" . $imageFolder . "/" . $thisPageName,$pageOut);
        $counter++;
    }   // end of "each individual page in a section" loop

    // some info output to the page.

    //*
    echo "<br /><br /><b>PAGES</b><br />";
    var_dump($pageList);
    echo "<br /><br /><b>SCRIPTS</b><br />";
    var_dump($scriptList);
    echo "<br /><br /><b>IMAGES</b><br />";
    var_dump($imageList);
    echo "<br /><br /><b>FAILED COPY LIST</b><br />";
    var_dump($falseList);

    //*/

    foreach($scriptList AS $script){
        copy($_SERVER["DOCUMENT_ROOT"] . "/content/apps/2/" . $script,$_SERVER["DOCUMENT_ROOT"] . "/api/apps/2/" . $imageFolder . "/" . $script);
    }

    foreach($cssList AS $css){
        copy($_SERVER["DOCUMENT_ROOT"] . "/content/apps/2/" . $css,$_SERVER["DOCUMENT_ROOT"] . "/api/apps/2/" . $imageFolder . "/" . $css);
    }


    foreach($fontList AS $font){
        copy($_SERVER["DOCUMENT_ROOT"] . "/css/" . $font,$_SERVER["DOCUMENT_ROOT"] . "/api/apps/2/" . $imageFolder . "/" . $font);
    }

    $filesList = array_merge($pageList,$scriptList,$imageList,$cssList);

    echo "<br /><br /><b>First Page Name</b>: " . $firstPageName . "<br /><br />";

    if($result = create_zip($filesList,$_SERVER["DOCUMENT_ROOT"] . "/" . "api/apps/2/" . $imageFolder . "/" . $imageFolder . ".zip")){
        echo "<br /><br />Zip file created!<br /><br />";
    }
    else{
        echo "<br /><br />Zip file could not be created!<br /><br />";
    };

    echo "<br /><br />Completed!";
}   // end of "section" loop (section is a group of pages)


// utility functions
function create_zip($files = array(),$destination = '',$overwrite = true) {
    global $imageFolder;
    //if the zip file already exists and overwrite is false, return false
    if(file_exists($destination) && !$overwrite) { return false; }
    //vars
    $valid_files = array();
    //if files were passed in...
    if(is_array($files)) {
        //cycle through each file
        foreach($files as $file) {
            //make sure the file exists
            if(file_exists($_SERVER["DOCUMENT_ROOT"] . "/api/apps/2/" . $imageFolder . "/" . $file)) {
                $valid_files[] = $file;
            }
        }
    }
    echo "<br /><b>VALID FILES LIST FOR ZIP</b><br />";
    var_dump($valid_files);
    //echo "Made it to this point!";
    //if we have good files...
    if(count($valid_files)) {
        //echo "We have valid files";
        //create the archive
        $zip = new ZipArchive();
        //if($zip->open($destination,$overwrite ? ZipArchive::OVERWRITE : ZipArchive::CREATE) !== true) {
        if($zip->open($destination,ZipArchive::CREATE) !== true) {
            echo("<br /><br />Couldn't open or create the zip file.");
            return false;
        }
        //add the files
        foreach($valid_files as $file) {
            $zip->addFile($_SERVER["DOCUMENT_ROOT"] . "/api/apps/2/" . $imageFolder . "/" . $file, basename($file));
        }
        //debug
        echo 'The zip archive contains ',$zip->numFiles,' files with a status of ',$zip->status;

        //close the zip -- done!
        $zip->close();

        //check to make sure the file exists
        return file_exists($destination);
    }
    else
    {
        echo "We have no valid files";
        $message = "No valid files.";
        return false;
    }
}

function deleteDir($dirPath) {
    if (is_dir($dirPath)) {
        if (substr($dirPath, strlen($dirPath) - 1, 1) != '/') {
            $dirPath .= '/';
        }
        $files = glob($dirPath . '*', GLOB_MARK);
        foreach ($files as $file) {
            if (is_dir($file)) {
                deleteDir($file);
            } else {
                unlink($file);
            }
        }
        rmdir($dirPath);
    }
}

function getArticleURL($matches){
    global $imageFolder;
    $a = new Article($matches[2]);
    $aName = $a->get_article_name() . ".html";
    return "\"https://acs.peoplemediagroup.co.nz/api/apps/" . $matches[1] . "/" . $imageFolder . "/" . $aName . "\"";
}
?>