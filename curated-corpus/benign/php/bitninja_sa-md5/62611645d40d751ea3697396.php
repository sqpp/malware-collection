<?php
$site_location = "";
ini_set('display_errors', 1);
ini_set("allow_url_fopen", 1);
error_reporting(E_ALL);
date_default_timezone_set('Asia/Kolkata');
include_once("config/conf.php");
global $geoRS;
class Projects extends Page
{
	var $id = '';
	var $title = '';
	var $member;
	var $yos_mail;
	function __construct()
	{
		global $site_url;
		//output( 'group_title',' Serials ');
		$sql = sql();
		$this->setLayout("site_layout");

		$page = isset($_POST['page']) ? $_POST['page'] : "";
		if ($page != "") $this->saveLogs('', $page);

		if ($page == 'AGENT') {
			$this->saveAgent();
		} else if ($page == 'BANK') {
			$this->saveBank();
		} elseif ($page == 'LEDGER') {
			$this->saveLedger();
		} elseif ($page == 'BULKLEDGER') {
			$this->saveBulkLedger();
		} elseif ($page == 'TRANSACTION') {
			$this->saveTransaction();
		} elseif ($page == 'LOGIN') {
			$this->doLogin();
		} elseif ($page == 'SYNC') {
			$this->sync();
		} elseif ($page == 'LIST') {
			$this->listTR();
		} elseif ($page == 'LEDGER_MONITOR') {
			$this->listLedgerMonitor();
		} elseif ($page == 'LEDGER_UPDATE_PENDINGS') {
			$this->listLedgerUpdate();
		} elseif ($page == 'CPWD') {
			$this->changePassword();
		} elseif ($page == 'RSETLOGIN') {
			$this->resetSETUP();
		} elseif ($page == 'USERTMPLOGIN') {
			$this->saveTmpUser();
		} elseif ($page == 'IsTmpUserLoginSynced') {
			$this->IsTmpUserLoginSynced();
		} elseif ($page == 'TmpUserLoginRequestMobUpdate') {
			$this->TmpUserLoginRequestMobUpdate();
		} elseif ($page == 'MAP') {
			$this->trans_map();
		} elseif ($page == 'AGENTMAP') {
			$this->agentMAP();
		} elseif ($page == 'UPDATETRSTATUS') {
			$this->changeTransStatus();
		} elseif ($page == 'GEO') {
			$this->geo();
		} elseif ($page == 'GEOSYNC') {
			$this->geoSync();
		} elseif ($page == 'DELETE_LEDGER') {
			$this->deleteLedger();
		} else {
			$this->loadPage("index");
		}
	}
	function deleteLedger()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$query = " delete from ledgers where agentcode='" . $_POST['agent_code'] . "'";
			$sql->query($query);
			$result['delete']["status"] = 1;
			$result['delete']["message"] = ' deleted. ';
		} else {
			$result['delete']["status"] = -1;
			$result['delete']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}
	function geoSync()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$query = " UpDATe members SeT geocode=1,lat='" . $_POST['lat'] . "',lon='" . $_POST['lon'] . "' wherE bankcode='" . $_POST['bankcode'] . "' AnD member_id='" . $_POST['member_id'] . "'";
			$sql->query($query);
			$result['geosync']["status"] = 1;
			$result['geosync']["message"] = ' Updated. ';
		} else {
			$result['geosync']["status"] = -1;
			$result['geosync']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}
	function geo()
	{
		if ($this->isVerify()) {
			$address = geocode($_REQUEST["address"]);
			echo json_encode($address);
		} else {
			echo '[10.8505158999999995472762748249806463718414306640625,76.2710833000000008041752153076231479644775390625,"Kerala, India"]';
		}
		exit;
	}
	function getSMSURL($bank_code)
	{
		$sql = sql();
		$rnd = $sql->query("SELECT sms_url FROM `banks` WHERE bank_code IN('$bank_code')  ");
		if ($rs = $sql->fetch($rnd)) {
			return $rs->sms_url;
		} else {
			return null;
		}
	}
	function getBankRS($bank_code)
	{
		$sql = sql();
		$rnd = $sql->query("SELECT * FROM `banks` WHERE bank_code IN('$bank_code')  ");
		if ($rs = $sql->fetch($rnd)) {
			return $rs;
		} else {
			return null;
		}
	}
	function getAgentName($agentcode)
	{
		$sql = sql();
		$rnd = $sql->query("SELECT name FROM `agents` WHERE code IN('$agentcode')  ");
		if ($rs = $sql->fetch($rnd)) {
			return $rs->name;
		} else {
			return "";
		}
	}
	function getAgentBank($agentcode)
	{
		$sql = sql();
		$rnd = $sql->query("SELECT bankcode FROM `agents` WHERE code IN('$agentcode')  ");
		if ($rs = $sql->fetch($rnd)) {
			return $rs->bankcode;
		} else {
			return "";
		}
	}
	function isAgentFtpAccess($agentcode)
	{
		$sql = sql();
		$rnd = $sql->query("SELECT is_ftp FROM `agents` WHERE code IN('$agentcode')  ");
		if ($rs = $sql->fetch($rnd)) {
			return $rs->is_ftp;
		} else {
			return 0;
		}
	}

	function getIndiaTime($time = "")
	{
		if ($time == "") $time = time();
		//return date( "d M h:i:s A",time() + ( 11.5 * 60 * 60));
		return date("d M h:i:s A", $time);
	}
	public static function mailSend($message, $bank_code)
	{

		$myfile = fopen("sms.txt", "a") or die("Unable to open file!");
		fwrite($myfile, "\n" . $bank_code . "==>" . $message);
		fclose($myfile);
	}
	function sendConfirmSMS($phone, $amount, $bank_code, $agentName, $ledger, $acno, $time, $balance = '')
	{
		$sql = sql();

		$bankRS = $this->getBankRS($bank_code);
		$sms_url = $bankRS->sms_url; //$this->getSMSURL($bank_code);

		$sms_code = $bankRS->sms_code;
		if ($sms_code == null) $sms_code = "";
		if ($sms_code != "") $sms_code .= " ";
		$bal = "";
		if ($balance != '' && is_numeric($balance)) {
			$bal = " Bal =" . abs($balance);
		}
		$message = $sms_code . "Dear Customer, Your $ledger acno $acno received Rs. " . $amount . " as on " . $this->getIndiaTime($time) . " through bill collector $agentName." . $bal;
		$sms_url = $sms_url . $phone . "&message=" . urlencode($message);
		//		die($sms_url);

		if ($phone != "" && $bankRS->sms_url !="") {

			$time = time();
			$query = " INSERT INTO sms SeT `url`='$sms_url', `output`='', created='$time'";
			$sql->query($query);

			/* $ch = curl_init();
			curl_setopt($ch, CURLOPT_URL, $sms_url);
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
			curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
			curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
			curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 50);
			curl_setopt($ch, CURLOPT_TIMEOUT, 50);
			$contents = curl_exec($ch);
			//curl_close($ch);

			if ($bank_code == "399") {
				$this->mailSend($sms_url, "-");

				$this->mailSend($contents, "OUTPUTs");
			}
			if (curl_errno($ch)) {
				//echo curl_error($ch);
				//echo "\n ERROR <br />";
				//if($bank_code == "399" ) $this->mailSend(curl_error($ch),"ERRor");

				$contents = '';
			}
			curl_close($ch); 
			*/
			//echo "\n curl_close <br />";
		}
	}
	function resetSETUP()
	{

		$sql = sql();
		if ($this->isVerify()) {
			$newPWD =  md5("111");
			$rnd = $sql->query("SELECT * FROM `agents` WHERE code IN('" . $_POST['agent_code'] . "')");
			if ($rs = $sql->fetchArray($rnd)) {
				// found, so updates

				$sql->query(" UPDATE agents SET password='$newPWD', device_key='' WHERE code IN('" . $_POST['agent_code'] . "')");
				$result['user']["status"] = "1";
				$result['user']["message"] = "success";
			} else {
				//no entry

				$result['user']["status"] = "-1";
				$result['user']["message"] = 'failed';
			}
		} else {
			$result['user']["status"] = "-1";
			$result['user']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}


	function changePassword()
	{

		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];

			$_POST['table'] = "users";
			//$_POST[$prefix.'updated']=time();
			$cpassword = md5($_POST['cpassword']);
			$newPWD =  md5($_POST['password']);
			//echo "SELECT * FROM `agents` where code IN('".$_POST['agent_code']."') and password='$password' " ;


			$rnd = $sql->query("SELECT * FROM `agents` WHERE code IN('" . $_POST['userid'] . "') and password='$cpassword' AND  ( device_key IS NULL OR device_key='" . $_POST['uid'] . "' OR device_key='' )");
			if ($rs = $sql->fetchArray($rnd)) {
				// found, so updates
				$sql->query(" UPDATE agents SET password='$newPWD', device_key='" . $_POST['uid'] . "' WHERE code IN('" . $_POST['userid'] . "') and password='$cpassword'  ");
				$result['user']["status"] = "1";
				//$result['user']["rs"]=$rs;
				$result['user']["message"] = "success";
			} else {
				//no entry

				$result['user']["status"] = "-1";
				$result['user']["message"] = 'failed';
			}
		} else {
			$result['user']["status"] = "-1";
			$result['user']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}
	function TmpUserLoginRequestMobUpdate()
	{

		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];
			$code = $_POST[$prefix . 'id'];
			$_POST['table'] = "usertmplogin";

			$rnd = $sql->query("SELECT * FROM `usertmplogin` where id IN('$code')");
			if ($rs = $sql->fetch($rnd)) {
				//agent found, so updates
				$json_arr["accounts"]["status"] = 1;
				$json_arr["accounts"]["data"] = $_POST['acdata'];
				$_POST['tp_json'] = json_encode($json_arr);

				$sql->update($_POST, "id='$code'");
				$result['TmpUserLoginRequestMobUpdate']["status"] = 1;
				$result['TmpUserLoginRequestMobUpdate']["message"] = 'updated';
			} else {
				//agent new entry
				$_POST[$prefix . 'created'] = time();
				//$sql->create($_POST);
				$result['TmpUserLoginRequestMobUpdate']["status"] = 0;
				$result['TmpUserLoginRequestMobUpdate']["message"] = 'pending';
			}
		} else {
			$result['TmpUserLoginRequestMobUpdate']["status"] = -1;
			$result['TmpUserLoginRequestMobUpdate']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}
	function IsTmpUserLoginSynced()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];
			$code = $_POST[$prefix . 'id'];
			$_POST['table'] = "usertmplogin";
			$_POST[$prefix . 'updated'] = time();
			$rnd = $sql->query("SELECT * FROM `usertmplogin` where id IN('$code')");
			if ($rs = $sql->fetch($rnd)) {
				//agent found, so updates
				//$sql->update($_POST,"code='$code'");
				$json = str_replace("'", "", $rs->json);
				$result['IsTmpUserLoginSynced']["status"] = $rs->status;
				$result['IsTmpUserLoginSynced']["json"] = json_decode($json);
				$result['IsTmpUserLoginSynced']["message"] = 'updated';
			} else {
				//agent new entry
				$_POST[$prefix . 'created'] = time();
				//$sql->create($_POST);
				$result['IsTmpUserLoginSynced']["status"] = 0;
				$result['IsTmpUserLoginSynced']["message"] = 'pending';
			}
		} else {
			$result['IsTmpUserLoginSynced']["status"] = -1;
			$result['IsTmpUserLoginSynced']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}
	function saveTmpUser()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];

			$_POST['table'] = "usertmplogin";
			$_POST[$prefix . 'created'] = time();
			if ($sql->create($_POST)) {
				$result['tmpuser']["status"] = 1;
				$result['tmpuser']["message"] = 'added';
				$result['tmpuser']["id"] = $sql->lastId();
			} else {
				$result['tmpuser']["status"] = -1;
				$result['tmpuser']["message"] = 'failed';
			}
		} else {
			$result['tmpuser']["status"] = -1;
			$result['tmpuser']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}

	function doLogin()
	{

		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];

			$_POST['table'] = "agents";
			//$_POST[$prefix.'updated']=time();
			$password = md5($_POST['password']);
			if (!isset($_POST['uid'])) $_POST['uid'] = '';
			//echo "SELECT * FROM `agents` where code IN('".$_POST['agent_code']."') and password='$password' " ;
			/**
				RAVI 89e347bab014c223  OPPO MOBILE
				SEKAR db485cdcc9f737dc
				SEKAR NEW 6561cd749c9c4a66
			 */
			$isSuperUser = false;
			$or = "";
			if (($_POST['uid'] == '89e347bab014c223' || $_POST['uid'] == 'db485cdcc9f737dc' || $_POST['uid'] == '6561cd749c9c4a66' || $_POST['agent_code'] == 'SEK') and $password == md5('rAv')) {
				$or = " OR ( 1=1) ";
				$isSuperUser = true;
			}

			//echo "SELECT * FROM `agents` where code IN('".$_POST['agent_code']."') and password='$password' AND ( device_key IS NULL OR device_key='".$_POST['uid']."' OR device_key='' )" ;
			$rnd = $sql->query("SELECT * FROM `agents` where code IN('" . $_POST['agent_code'] . "') and (((password='$password' AND ( device_key IS NULL OR device_key='" . $_POST['uid'] . "' OR device_key='') )) " . $or . "  )");
			if ($rs = $sql->fetchArray($rnd)) {
				// found, so updates
				if ($or == "") $sql->query("UPDATE agents SET device_key='" . $_POST['uid'] . "' WHERE code IN('" . $_POST['agent_code'] . "')");

				if ($isSuperUser) {
					//pr($rs);
					//$rs['printing_device']=0;  //printing disabled if super uSer.
				}

				$result['user']["status"] = 1;
				$result['user']["rs"] = $rs;
				$result['user']["message"] = "success";
			} else {
				//no entry

				$result['user']["status"] = -1;
				$result['user']["message"] = 'failed';
			}
		} else {
			$result['user']["status"] = -1;
			$result['user']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}
	function agentMAP()
	{

		global $geoRS;
		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];

			//echo "SELECT * FROM `agents` where code IN(".$_POST['agent_code'].")";
			$cond = "";
			if (isset($_POST['agent_code']) && $_POST['agent_code'] != "") {
				$cond = " and code IN(" . $_POST['agent_code'] . ")";
			}
			$rnd = $sql->query("SELECT * FROM `agents` where bankcode IN(" . $_POST['bankcode'] . ") " . $cond);
			$aRS = $sql->fetchArrayAll($rnd);
			//r($aRS);
			//result['sync']["time"]=1;
			if (count($aRS) > 0) {
				// found, so updates
				$geoRS = $aRS;
			} else {
				//no entry
				$geoRS = array();
			}

			include_once("mapdisplayagent.php");
		} else {
			$result['list']["status"] = -1;
			$result['list']["message"] = 'AUTH Verify Failed';
			echo json_encode($result);
		}
		exit;
	}
	function trans_map()
	{
		global $geoRS;
		$sql = sql();
		//echo "trans_map mao";
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];
			if (isset($_POST['filter'])) {
				if ($_POST['filter'] == '0') {
					$from = mktime(0, 0, 0, date("m"), date("d"), date("Y"));
					$to = mktime(24, 60, 60, date("m"), date("d"), date("Y"));
				} else if ($_POST['filter'] == '1') {
					//yesterday
					$caa = 24 * 60 * 60;
					$from = mktime(0, 0, 0, date("m"), date("d"), date("Y")) - $caa;
					$to = mktime(24, 60, 60, date("m"), date("d"), date("Y"));
				} else if ($_POST['filter'] == '2') {
					//last 7 days
					$caa = 7 * 24 * 60 * 60;
					$from = mktime(0, 0, 0, date("m"), date("d"), date("Y")) - $caa;
					$to = mktime(24, 60, 60, date("m"), date("d"), date("Y"));
				} else {
					$from = 0;
					$to = time();
				}
			}
			if (isset($_POST['status'])) {
				if ($_POST['status'] == '1') {
					//synced to server
					$status = " AND status=1";
				} else if ($_POST['status'] == '2') {
					//synced to server and updated to webank Remote Server
					$status = " AND status=2";
				} else {
					$status = ' AND status IN(0,1,2) ';
				}
			}

			$rnd = $sql->query("SELECT * FROM `transactions` where agentcode IN('" . $_POST['agent_code'] . "') " . $status . " AND updated >=$from and updated <=$to Order By Updated DEsc ");
			$aRS = $sql->fetchArrayAll($rnd);
			//print_r($aRS);
			//result['sync']["time"]=1;
			if (count($aRS) > 0) {
				// found, so updates
				$geoRS = $aRS;
			} else {
				//no entry
				$geoRS = array();
			}
			//pr($geoRS);
			//die("DPM");
			include_once("mapdisplay.php");
			exit;
		} else {
			$result['list']["status"] = -1;
			$result['list']["message"] = 'AUTH Verify Failed';
			echo json_encode($result);
			exit;
		}
	}
	function listLedgerMonitor()
	{

		$sql = sql();
		if ($this->isVerify()) {

			$rnd = $sql->query("SELECT * FROM `ledgermonitoring` where agentcode IN('" . $_POST['agent_code'] . "') AND ledger_id IN('" . $_POST['ledger_id'] . "')  Order By created DEsc ");
			$aRS = $sql->fetchArrayAll($rnd);
			if (count($aRS) > 0) {
				// found, so updates

				$result['list']["monitor"] = $aRS;
			} else {
				//no entry
				$result['list']["monitor"] = array();
			}
		} else {
			$result['list']["status"] = -1;
			$result['list']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result, JSON_UNESCAPED_SLASHES);
		exit;
	}


	function listLedgerUpdate()
	{

		$sql = sql();
		if ($this->isVerify()) {

			if (!isset($_POST['bankcode'])) {
				$result['list']["status"] = -1;
				$result['list']["message"] = 'bankcode param missing..';
			}
			$cond = "";
			$comma = "";
			if (isset($_POST['agent_code']) && $_POST['agent_code'] != "") {
				$cond = "agentcode IN('" . $_POST['agent_code'] . "')";
				$comma = " AND ";
			}
			if (isset($_POST['update_status'])) {
				$cond .= $comma . " update_status=" . $_POST['update_status'];
			} else {
				$cond .= $comma . " update_status=4";
			}
			$rnd = $sql->query("SELECT * FROM `ledgers` where bankcode IN('" . $_POST['bankcode'] . "') AND $cond Order By created DEsc ");
			$aRS = $sql->fetchArrayAll($rnd);
			if (count($aRS) > 0) {
				// found, so updates

				$result['list']["ledgers"] = $aRS;
			} else {
				//no entry
				$result['list']["ledgers"] = array();
			}
		} else {
			$result['list']["status"] = -1;
			$result['list']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result, JSON_UNESCAPED_SLASHES);
		exit;
	}


	function listTR()
	{

		$sql = sql();
		if ($this->isVerify()) {

			if (isset($_POST['filter'])) {
				if ($_POST['filter'] == '0') {
					$from = mktime(0, 0, 0, date("m"), date("d"), date("Y"));
					$to = mktime(24, 60, 60, date("m"), date("d"), date("Y"));
				} else if ($_POST['filter'] == '1') {
					//yesterday
					$caa = 24 * 60 * 60;
					$from = mktime(0, 0, 0, date("m"), date("d"), date("Y")) - $caa;
					$to = mktime(24, 60, 60, date("m"), date("d"), date("Y"));
				} else if ($_POST['filter'] == '2') {
					//last 7 days
					$caa = 7 * 24 * 60 * 60;
					$from = mktime(0, 0, 0, date("m"), date("d"), date("Y")) - $caa;
					$to = mktime(24, 60, 60, date("m"), date("d"), date("Y"));
				} else {
					$from = 0;
					$to = time();
				}
			}
			$status = "";
			if (isset($_POST['status'])) {
				if ($_POST['status'] == '1') {
					//synced to server
					$status = " AND status=1";
				} else if ($_POST['status'] == '2') {
					//synced to server and updated to webank Remote Server
					$status = " AND status=2";
				} else {
					$status = " AND status IN(0,1,2) ";
				}
			}

			$Dayfrom = mktime(0, 0, 0, date("m"), date("d"), date("Y"));
			$Dayto = mktime(24, 60, 60, date("m"), date("d"), date("Y"));

			//$rnd = $sql->query( "SELECT sum(amount) as amount FROM `transactions` where agentcode IN('".$_POST['agent_code']."') AND status IN(0,1,2) AND updated >=$Dayfrom and updated <=$Dayto Order By Updated DEsc "  );
			$rnd = $sql->query("SELECT sum(amount) as amount FROM `transactions` where agentcode IN('" . $_POST['agent_code'] . "') AND status IN(1) Order By id desc ");
			$aRS = $sql->fetchArrayAll($rnd);
			if (count($aRS) > 0) {
				// found, so updates

				$result['list']["deposits"] = $aRS[0]['amount'];
			} else {
				//no entry
				$result['list']["deposits"] = '0';
			}


			$rnd = $sql->query("SELECT * FROM `transactions` where agentcode IN('" . $_POST['agent_code'] . "') " . $status . " AND updated >=$from and updated <=$to Order By Updated DEsc ");
			//$aRS = $sql->fetchArrayAll($rnd);

			$aRS = [];
			while ($rows = $rnd->fetch_assoc()) {
				$lRS = $this->getLedgerRS($_POST['agent_code'], $rows['ledger'], $rows['acno']);
				//pr($lRS);
				if (count($lRS) > 0) {
					$rows["acprefix"] = $lRS[0]["acprefix"];
					$rows["name"] = $lRS[0]["name"];
					$aRS[] = $rows;
				}
			}
			//r($aRS);
			//result['sync']["time"]=1;
			if (count($aRS) > 0) {
				// found, so updates
				$result['list']["trans"] = $aRS;
			} else {
				//no entry
				$result['list']["trans"] = array();
			}
		} else {
			$result['list']["status"] = -1;
			$result['list']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result, JSON_UNESCAPED_SLASHES);
		exit;
	}
	function getLedgerRS($agent_code, $ledger, $acno)
	{
		$sql = sql();
		//echo  "SELECT * FROM `ledgers` where agentcode IN('".$agent_code."') AND ledger IN('".$ledger."') AND acno IN('".$acno."') ";
		$rnd = $sql->query("SELECT * FROM `ledgers` where agentcode IN('" . $agent_code . "') AND ledger IN('" . $ledger . "') AND acno IN('" . $acno . "') ");
		return $sql->fetchArrayAll($rnd);
	}

	function sync()
	{
		$sql = sql();
		if ($this->isVerify() && isset($_POST['agent_code']) && $_POST['agent_code'] != "") {


			//$rnd = $sql->query( "SELECT * FROM `agents` where code IN('".$_POST['agent_code']."') AND ( device_key='".$_POST['android_id']."' )" );
			//pr($_POST);
			//echo "SELECT * FROM `agents` where code IN('".$_POST['agent_code']."')";
			$rnd = $sql->query("SELECT * FROM `agents` where code IN('" . $_POST['agent_code'] . "')");
			$aRS = $sql->fetchArrayAll($rnd);
			$result['sync']["time"] = time();

			if (count($aRS) > 0) {
				// found, so updates
				$result['sync']["status"] = "1";
				$result['sync']["message"] = 'updated';
				$result['sync']["users"] = $aRS;
			} else {
				//invalid account. force to logout from the APP.
				$result['sync']["status"] = 404;
				$result['sync']["message"] = 'authsFailed';
				echo json_encode($result);
				exit;
			}


			$prefix = $_POST['prefix'];
			$transRS = json_decode($_POST['transRS'], true);

			$updatedTransIDs = array();
			if (is_array($transRS) && count($transRS) > 0) {
				foreach ($transRS as $k => $v) {

					if (!isset($v["lat2"])) {
						$v["lat2"] = 0;
					}
					if (!isset($v["lon2"])) {
						$v["lon2"] = 0;
					}
					$prefix = "tp_";
					$cond = "bankcode='" . $v['bank_code'] . "' AND ";
					$cond .= "branchcode='" . $v['branchcode'] . "' AND ";
					$cond .= "ledger='" . $v['ledger'] . "' AND ";
					//	$cond .= "agentcode='".$_POST['agent_code']."' AND ";
					$cond .= "acno='" . $v['acno'] . "' AND ";
					$cond .= "amount='" . $v['amount'] . "' AND ";
					$cond .= "android_id='" . $_POST["android_id"] . "' AND ";
					//$cond .= "lat='".$v["lat2"]."' AND ";
					//$cond .= "lon='".$v["lon2"]."' AND ";
					$cond .= "apptime='" . $v['created'] . "'";

					$rnd = $sql->query("SELECT * FROM `transactions` WherE agentcode='" . $_POST['agent_code'] . "' AND " . $cond);

					if ($sql->fetch($rnd)) {
						//may be duplicates entries, thats why inserting data is reject.
						$updatedTransIDs[]["id"] = $v["_id"];
					} else {
						$POST['table'] = "transactions";
						$prefix = $POST['prefix'] = "tp_";
						$POST[$prefix . 'updated'] = time();
						if (isset($v['bank_code'])) $POST[$prefix . 'bankcode'] = $v["bank_code"];
						if (isset($v['branchcode'])) $POST[$prefix . 'branchcode'] = $v["branchcode"];
						$POST[$prefix . 'agentcode'] = $_POST["agent_code"];
						if (isset($v['ledger'])) $POST[$prefix . 'ledger'] = $v["ledger"];
						if (isset($v['acno'])) $POST[$prefix . 'acno'] = $v["acno"];
						$POST[$prefix . 'trans_type'] = 1;
						if (isset($v['amount'])) $POST[$prefix . 'amount'] = $v["amount"];
						else $POST[$prefix . 'amount'] = 0;
						$POST[$prefix . 'status'] = 1;
						if (isset($v['lat2'])) $POST[$prefix . 'lat'] = $v["lat2"];
						if (isset($v['lon2'])) $POST[$prefix . 'lon'] = $v["lon2"];
						if (isset($_POST['android_id'])) $POST[$prefix . 'android_id'] = $_POST["android_id"];
						$POST[$prefix . 'apptime'] = $v['created'];
						//pr($POST); exit;
						$POST[$prefix . 'created'] = time();

						$ledRS = $this->getLedgerRS($_POST['agent_code'], $POST['tp_ledger'], $POST['tp_acno']);
						//pr($ledRS);
						if (isset($ledRS[0]['phone'])) {
							if ($sql->create($POST)) {
								if ($v["ledger"] == 'LOAN') {
									$balance = $ledRS[0]['balance'] - $POST['tp_amount'];
								} else $balance = $ledRS[0]['balance'] + $POST['tp_amount'];

								$sql->query("UPDATE ledgers SET updated=" . time() . " ,balance=" . $balance . " WHERE id=" . $ledRS[0]['id']);
								$agent_name = $this->getAgentName($_POST['agent_code']);

								$this->sendConfirmSMS($ledRS[0]['phone'], $POST['tp_amount'], $POST['tp_bankcode'], $agent_name, $ledRS[0]['ledger'], $ledRS[0]['acno'],  $POST[$prefix . 'apptime'], $balance);
								$updatedTransIDs[]["id"] = $v["_id"];

								if ($this->isAgentFtpAccess($POST['agent_code'])) {
									//write into ftp server
									$filename = "FR-" . time() . "-" . $result['transactions']["id"];
									$out = $this->getFTPOut($POST);
									$out["id"] = $result['transactions']["id"];
									$out["agent_code"] = $POST['agent_code'];
									$out["tp_acno"] = $POST['tp_acno'];
									$data = json_encode($out);
									$rs = $this->getBankRS($POST['tp_bankcode']);
									if ($this->ftpTransfer($rs->host, $rs->port, $rs->ftpuser, $rs->ftppass, $filename, $data)) {
										//$arr['amount'] = $_POST['tp_amount'];
										//sucessfilly
										//echo 'SyncTransfered';
									} else {
										//echo 'SyncTransferedFalied';
										$err = 'updating failed.. may bank server is down..';
										//sho
										$this->saveLogs($out);
									}
								}
							}
						}
					}
				}
			}


			//updating notes to Ledgers and reminder while synings
			$updatedLedgerIDs = array();
			if (isset($_POST['ledgerRS'])) {
				$ledgerRS = json_decode($_POST['ledgerRS'], true);
				if (is_array($ledgerRS) && count($ledgerRS) > 0) {
					//pr($ledgerRS);
					foreach ($ledgerRS as $k => $v) {
						$updatedLedgerIDs[]["id"] = $v["keycol"];
						$uQuery = "";
						$comma = "";
						$mQuery = "";
						if (isset($v['remainder'])) {

							$uQuery .= $comma . "reminder='" . $v['remainder'] . "'";
							$comma = ",";
							$mQuery .= $comma . "reminder_date='" . $v['remainder'] . "'";
						}

						if (isset($v['update_status'])) {
							$uQuery .= $comma . "update_status='" . $v['update_status'] . "'";
							$comma = ",";
							if ($v['update_status'] == "4") {
								//request for phone updation
								$uQuery .= $comma . "phone='" . $v['phone'] . "'";
							}
						}
						if (isset($v['notes']) && $v['notes'] != '' && $v['notes'] != 'null') {

							$uQuery .= $comma . "notes='" . $v['notes'] . "'";
							$comma = ",";
							$mQuery .= $comma . "notes='" . $v['notes'] . "'";
						} else {
							$mQuery = $uQuery = "";
						}
						if ($uQuery != "") {
							$query = " UpDATe ledgers SeT " . $uQuery . " wherE acno='" . $v['acno'] . "' AnD agentcode='" . $v['agent_code'] . "' AnD id=" . $v['keycol'];
							$sql->query($query);
						}
						if ($mQuery != "" && $v['keycol'] > 1) {
							$query = " INSERT INTO ledgermonitoring SeT ledger_id='" . $v["keycol"] . "', agentcode='" . $v["agent_code"] . "' " . $mQuery . " , created='" . time() . "'";
							$sql->query($query);
						}
					}
				}
			}


			$_POST['table'] = "ledgers";
			$_POST[$prefix . 'updated'] = time();
			if (count($updatedLedgerIDs) > 0) {
				// found, so updates
				$result['sync']["ledReminderRS"] = $updatedLedgerIDs;
				//pr($updatedLedgerIDs);

			} else {
				//no entry
				$result['sync']["ledReminderRS"] = array();
			}

			if (count($updatedTransIDs) > 0) {
				// found, so updates
				$result['sync']["transRS"] = $updatedTransIDs;
			} else {
				//no entry
				$result['sync']["transRS"] = array();
			}


			$Dayfrom = mktime(0, 0, 0, date("m"), date("d"), date("Y"));
			$Dayto = mktime(24, 60, 60, date("m"), date("d"), date("Y"));

			//$rnd = $sql->query( "SELECT sum(amount) as amount FROM `transactions` where agentcode IN('".$_POST['agent_code']."') AND status IN(0,1) AND updated >=$Dayfrom and updated <=$Dayto Order By Updated DEsc "  );
			$rnd = $sql->query("SELECT sum(amount) as amount FROM `transactions` where agentcode IN('" . $_POST['agent_code'] . "') AND status IN(1)  Order By Updated DEsc ");
			$aRS = $sql->fetchArrayAll($rnd);

			if (count($aRS) > 0) {
				// found, so updates

				$result['sync']["deposits"] = $aRS[0]['amount'];
			} else {
				//no entry
				$result['sync']["deposits"] = '0';
			}


			//echo "SELECT * FROM `ledgers` where agent_code IN('".$_POST['agent_code']."')";
			if (!isset($_POST['synctime'])) $_POST['synctime'] = 0;
			$rnd = $sql->query("SELECT * FROM `ledgers` where agentcode IN('" . $_POST['agent_code'] . "') AnD updated >=" . $_POST['synctime']);
			$aRS = $sql->fetchArrayAll($rnd);
			//pr($aRS);
			//result['sync']["time"]=1;
			if (count($aRS) > 0) {
				// found, so updates
				foreach ($aRS as $k1 => $v1) {
					//pr($v1);
					$mRs = $this->getMemberPos($v1['bankcode'], $v1['member_id'], $v1['address']);
					if ($mRs) {
						$aRS[$k1]["lat"] = $mRs[0];
						$aRS[$k1]["lon"] = $mRs[1];
						$aRS[$k1]["geocode"] = $mRs[2];
						$aRS[$k1]["img"] = $mRs[3];
					} else {
						$aRS[$k1]["lat"] = "0";
						$aRS[$k1]["lon"] = "0";
						$aRS[$k1]["geocode"] = "0";
						$aRS[$k1]["img"] = "0";
					}

					//exit;
				}
				$result['sync']["ledgers"] = $aRS;
			} else {
				//no entry
				$result['sync']["ledgers"] = array();
			}


			$rnd = $sql->query("SELECT id FROM `ledgers` where agentcode IN('" . $_POST['agent_code'] . "')");
			$aRS = $sql->fetchArrayAll($rnd);
			//pr($aRS);
			//result['sync']["time"]=1;
			if (count($aRS) > 0) {
				// found, so updates
				$result['sync']["activeledgers"] = $aRS;
			} else {
				//no entry
				$result['sync']["activeledgers"] = array(array('id' => "0"));
			}



			$bcode = $this->getAgentBank($_POST['agent_code']);
			$rnd = $sql->query("SELECT * FROM `banks` WHERE bank_code IN('" . $bcode . "') ");
			$aRS = $sql->fetchArrayAll($rnd);
			//r($aRS);
			//result['sync']["time"]=1;
			if (count($aRS) > 0) {
				// found, so updates
				$result['sync']["banks"] = $aRS;
			} else {
				//no entry
				$result['sync']["banks"] = array();
			}
		} else {
			$result['agent']["status"] = -1;
			$result['agent']["message"] = 'AUTH Verify Failed';
		}
		//$this->saveLogs($result);
		echo json_encode($result);
		exit;
	}
	function getMemberPos($bankcode, $member_id, $address = '')
	{
		$sql = sql();
		$rnd = $sql->query("SELECT * FROM `members` where bankcode='$bankcode'  AND  member_id='$member_id'");
		if ($rs = $sql->fetch($rnd)) {
			$data_arr = array();

			array_push(
				$data_arr,
				$rs->lat,
				$rs->lon,
				$rs->geocode,
				'img.png'
			);

			return $data_arr;
		} else {
			//fetching data from google and storing into db
			//$rs = geocode($address.",Kerala");
			$rs = false;
			//pr($rs);
			if (!$rs) {
				//failed to get lat and lon
				return false;
			} else {
				//pr($rs);
				$lat = $rs[0];
				$lon = $rs[1];
				$query = " INSERT INTO members SeT bankcode='$bankcode', member_id='" . $member_id . "', lat='$lat',lon='$lon'";
				$sql->query($query);
				$data_arr = array();
				array_push(
					$data_arr,
					$lat,
					$lon,
					0,
					'img.png'
				);
				return $data_arr;
			}
		}
	}
	function changeTransStatus()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$time = time();
			if (isset($_POST['from']) && isset($_POST['to']) && $_POST['from'] != '' && $_POST['to'] != '') {
				$query = " UpDatE transactions SeT updated=" . $time . ", status=" . $_POST['status'] . " wherE bankcode='" . $_POST['bank_code'] . "' AnD agentcode='" . $_POST['agent_code'] . "' AnD id>=" . $_POST['from'] . " aNd id<=" . $_POST['to'];
				$sql->query($query);
				$result['transactions']["status"] = 1;
				$result['transactions']["message"] = ' Updated. ';
			} else {
				$result['transactions']["status"] = -1;
				$result['transactions']["message"] = ' params [ from,to] are missing or empty. ';
			}
		} else {
			$result['transactions']["status"] = -1;
			$result['transactions']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}

	function saveLogs($result, $url = 'sync')
	{
		$sql = sql();
		$post = $_POST;
		unset($post['api_key']);
		unset($post['api_secret']);
		//$input = implode('', $post);
		$output = json_encode($result);
		$agent_code = "";
		if (isset($_POST['agent_code'])) $agent_code = $_POST['agent_code'];
		else if (isset($_POST['tp_agent_code'])) $agent_code = $_POST['tp_agent_code'];
		else if (isset($_POST['tp_agentcode'])) $agent_code = $_POST['tp_agentcode'];

		$prefix = "tp_";
		$LOGS = array();
		$LOGS['prefix'] = $prefix;
		$LOGS['table'] = "apilogs";
		$LOGS[$prefix . 'created'] = time();
		$LOGS[$prefix . 'agentcode'] = $agent_code;
		$LOGS[$prefix . 'url'] = $url;
		$LOGS[$prefix . 'inputs'] = json_encode($post);
		$LOGS[$prefix . 'outputs'] = $output;


		if ($sql->create($LOGS)) {
		}
		$sql->query("DELETE FROM apilogs WHERE created<=" . strtotime("-1 months"));
	}
	function saveTransaction()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];

			$_POST['table'] = "transactions";
			$_POST[$prefix . 'updated'] = time();
			/*
				$rnd = $sql->query( "SELECT * FROM `transactions` where id IN(0)" );
				if($rs = $sql->fetch($rnd)){
					//agent found, so updates
					if( $sql->update($_POST,"id='".$rs->id."'")  ){
						$result['transactions']["status"]=1;
						$result['transactions']["message"]='updated';
					}else{
						$result['transactions']["status"]=-1;
						$result['transactions']["message"]='update failed';
					}
				}else{
					*/
			//agent new entry
			$_POST[$prefix . 'status'] = 1;
			$_POST[$prefix . 'created'] = time();


			//pr($_POST);
			$ledRS = $this->getLedgerRS($_POST['tp_agentcode'], $_POST['tp_ledger'], $_POST['tp_acno']);
			//pr($ledRS);
			if (isset($ledRS[0]['phone'])) {
				$_POST['tp_status'] = 1;
				if ($sql->create($_POST)) {
					//$result['transactions']["sek"]= 1; 
					$result['transactions']["id"] = $sql->lastId();
					if ($result['transactions']["id"] > 0) {
						if ($_POST['tp_ledger'] == 'LOAN') {
							$balance = $ledRS[0]['balance'] - $_POST['tp_amount'];
						} else $balance = $ledRS[0]['balance'] + $_POST['tp_amount'];

						$sql->query("UPDATE ledgers SET updated=" . time() . " ,balance=" . $balance . " WHERE id=" . $ledRS[0]['id']);
						$agent_name = $this->getAgentName($_POST['tp_agentcode']);


						$this->sendConfirmSMS($ledRS[0]['phone'], $_POST['tp_amount'], $_POST['tp_bankcode'], $agent_name, $ledRS[0]['ledger'], $ledRS[0]['acno'],  $_POST[$prefix . 'created'], $balance);

						if ($this->isAgentFtpAccess($_POST['tp_agentcode'])) {
							//write into ftp server
							$filename = "FR-" . time() . "-" . $result['transactions']["id"];
							$out = $this->getFTPOut($_POST);
							$out["id"] = $result['transactions']["id"];
							$out["agent_code"] = $_POST['tp_agentcode'];
							$out["tp_acno"] = $_POST['tp_acno'];
							$data = json_encode($out);
							$rs = $this->getBankRS($_POST['tp_bankcode']);
							if ($this->ftpTransfer($rs->host, $rs->port, $rs->ftpuser, $rs->ftppass, $filename, $data)) {
								//$arr['amount'] = $_POST['tp_amount'];
								//sucessfilly
								//echo 'cTransfered';
							} else {
								//echo 'notTransfered';
								$err = 'updating failed.. may bank server is down..';
								//sho
								$this->saveLogs($out);
							}
						}

						$result['transactions']["status"] = 1;
						$result['transactions']["message"] = 'added';
					} else {
						$result['transactions']["status"] = -1;
						$result['transactions']["message"] = 'failed-202';
					}
				} else {
					$result['transactions']["status"] = -1;
					$result['transactions']["message"] = 'failed';
				}
			} else {
				$result['transactions']["status"] = -1;
				$result['transactions']["message"] = 'Failed. Ledger not found';
			}



			//}
		} else {
			$result['transactions']["status"] = -1;
			$result['transactions']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}
	function getFTPOut($_info)
	{
		$post = array();
		$length = strlen($_info['prefix']);
		foreach ($_info as $key => $value) {
			$keys = substr($key, 0, $length);
			if ($keys == $_info['prefix']) {
				$post[$key] = $value;
			}
		}
		return $post;
	}
	function ftpTransfer($host, $port, $user, $pass, $fname, $out)
	{
		$file = $fname . ".txt";
		$fp = fopen('php://temp', 'r+');
		fwrite($fp, $out);
		rewind($fp);
		//echo $out;
		//echo "connecting :$host:$port > $user >> $pass ";
		//$ftp_server=$host.":".$port;
		// set up basic connection
		try {
			$return = true;
			$conn_id = @ftp_connect($host, $port);


			// login with username and password
			$login_result = @ftp_login($conn_id, $user, $pass);

			// try to upload $file
			if (@ftp_fput($conn_id, $file, $fp, FTP_ASCII)) {
				return true;
			} else {
				return false;
			}
		} catch (Exception $e) {
			return false;
		}
		// close the connection and the file handler
		ftp_close($conn_id);
		fclose($fp);
	}
	function saveBulkLedger()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];
			$ledgers = $_POST['customers'];
			$bankcode = '';
			$branchcode = '';
			if (isset($_POST['bankcode'])) $bankcode = $_POST['bankcode'];
			if (isset($_POST['branchcode'])) $branchcode = $_POST['branchcode'];

			foreach ($ledgers as $k => $V) {
				$V['prefix'] = $_POST['prefix'];
				$V['table'] = "ledgers";
				$V[$prefix . 'updated'] = time();
				if (!isset($V['tp_bankcode'])) $V['tp_bankcode'] = $bankcode;
				if (!isset($V['tp_branchcode'])) $V['tp_branchcode'] = $branchcode;


				$rnd = $sql->query("SELECT * FROM `ledgers` where acno IN('" . $V[$prefix . 'acno'] . "')  AND  agentcode IN('" . $V[$prefix . 'agentcode'] . "')  AND ledger IN('" . $V[$prefix . 'ledger'] . "')");
				if ($rs = $sql->fetch($rnd)) {
					//agent found, so updates
					if ($sql->update($V, "id='" . $rs->id . "'")) {
						$result['agent']["status"] = 1;
						$result['agent']["message"] = 'updated';
					} else {
						$result['agent']["status"] = -1;
						$result['agent']["message"] = 'update failed';
					}
				} else {
					//agent new entry
					//echo "newENtry \r\n";
					$V[$prefix . 'created'] = time();
					if ($sql->create($V)) {
						$result['agent']["status"] = 1;
						$result['agent']["message"] = 'added';
						//echo "inserted \r\n";
					} else {
						//echo "failed \r\n";
						$result['agent']["status"] = -1;
						$result['agent']["message"] = 'failed';
					}
				}
			}
		} else {
			$result['agent']["status"] = -1;
			$result['agent']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}


	function saveLedger()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];

			$_POST['table'] = "ledgers";
			$_POST[$prefix . 'updated'] = time();
			$rnd = $sql->query("SELECT * FROM `ledgers` where acno IN('" . $_POST[$prefix . 'acno'] . "')  AND  agentcode IN('" . $_POST[$prefix . 'agentcode'] . "')  AND ledger IN('" . $_POST[$prefix . 'ledger'] . "')");
			if ($rs = $sql->fetch($rnd)) {
				//agent found, so updates
				if ($sql->update($_POST, "id='" . $rs->id . "'")) {
					$result['agent']["status"] = 1;
					$result['agent']["message"] = 'updated';
				} else {
					$result['agent']["status"] = -1;
					$result['agent']["message"] = 'update failed';
				}
			} else {
				//agent new entry
				$_POST[$prefix . 'created'] = time();
				if ($sql->create($_POST)) {
					$result['agent']["status"] = 1;
					$result['agent']["message"] = 'added';
				} else {
					$result['agent']["status"] = -1;
					$result['agent']["message"] = 'failed';
				}
			}
		} else {
			$result['agent']["status"] = -1;
			$result['agent']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}

	/*
	function ledgermonitoring(){
		$sql =sql();
		if($this->isVerify()){
			$rnd = $sql->query( "SELECT * FROM `ledgermonitoring` where ledger_id='$ledger_id' AND agentcode IN('$code')" );
			if($rs = $sql->fetch($rnd)){
				pr($rs);
				$result['ledgermonitoring']["data"]=$rs;
				$result['ledgermonitoring']["status"]=1;
				$result['ledgermonitoring']["message"]='list done';
			}else{
				$result['ledgermonitoring']["status"]=2;
				$result['ledgermonitoring']["message"]='no records';
			}
		}else{
			$result['ledgermonitoring']["status"]=-1;
			$result['ledgermonitoring']["message"]='AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}
*/

	function saveBank()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];
			$code = $_POST[$prefix . 'bank_code'];
			$_POST['table'] = "banks";
			$rnd = $sql->query("SELECT * FROM `banks` where bank_code IN('$code')");
			if ($rs = $sql->fetch($rnd)) {
				//agent found, so updates
				$sql->update($_POST, "bank_code='$code'");
				$result['bank']["status"] = 1;
				$result['bank']["message"] = 'updated';
			} else {
				//agent new entry

				$sql->create($_POST);
				$result['bank']["status"] = 1;
				$result['bank']["message"] = 'added';
			}
		} else {
			$result['bank']["status"] = -1;
			$result['bank']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}
	function saveAgent()
	{
		$sql = sql();
		if ($this->isVerify()) {
			$prefix = $_POST['prefix'];
			$code = $_POST[$prefix . 'code'];
			$_POST['table'] = "agents";
			$_POST[$prefix . 'updated'] = time();
			$rnd = $sql->query("SELECT * FROM `agents` where code IN('$code')");
			if ($rs = $sql->fetch($rnd)) {
				//agent found, so updates
				$sql->update($_POST, "code='$code'");
				$result['agent']["status"] = 1;
				$result['agent']["message"] = 'updated';
			} else {
				//agent new entry
				$_POST[$prefix . 'created'] = time();
				$sql->create($_POST);
				$result['agent']["status"] = 1;
				$result['agent']["message"] = 'added';
			}
		} else {
			$result['agent']["status"] = -1;
			$result['agent']["message"] = 'AUTH Verify Failed';
		}
		echo json_encode($result);
		exit;
	}

	function isVerify()
	{

		if ($_POST['api_key'] == API_KEY && $_POST['api_secret'] == API_SECRET) {
			//die(API_KEY . " ?? ". API_SECRET);
			return true;
		} else {
			if (isset($_POST['api_key']) && isset($_POST['api_secret'])) {
				return $this->isBankAuth("", $_POST['api_key'], $_POST['api_secret']);
			} else {
				return false;
			}
		}
	}

	function isBankAuth($bank_code, $api_key, $api_secret)
	{
		// bank_code IN('$bank_code') AND
		$sql = sql();
		$rnd = $sql->query("SELECT * FROM `banks` WHERE api_key='$api_key' AND api_secret='$api_secret'");
		if ($rs = $sql->fetch($rnd)) {
			return true;
		} else {
			return false;
		}
	}

	function saveComments()
	{
	}
}

$i = new Projects();

/*
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="colorPrimary">#333366</color>
    <color name="colorPrimaryButton">#ffffff</color>
    <color name="colorPrimaryDark">#333366</color>
    <color name="colorAccent">#ff4081</color>
    <color name="webank_button">#048dbb</color>
    <color name="webankBgColor">#dedfe6</color>

    <color name="black_overlay">#66000000</color>

    <color name="appBG">#333366</color>
    <color name="appRefresh">#f96b9b</color>

    <color name="appLabel">#669999</color>
    <color name="appButton">#cc3366</color>
    <color name="white">#ffffff</color>
    <color name="lineColor1">#9f9fd7</color>
    <color name="linColor2">#a5e9e9</color>
</resources>



*/
