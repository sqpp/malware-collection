<?php

require('includes/application_top.php');
$uploaddir = 'images/ProductImages/';
include('inselects/class.image_process.php');

function imgUP($file_array, $max_x = false, $max_y = false, $imagePath, $filename) {
    $file_dir = $imagePath;
    $return = "false";
    //$imgPath = $_SERVER['DOCUMENT_ROOT'] . "/findem/images/clients/thumbs";
    if ($file_array[size] <= 2048000) {
        switch ($file_array[type]) {
            case "image/jpeg" :
            case "image/pjpeg" :
            case "image/gif" :
            case "image/png" :
            case "image/x-png" :
                $t = pathinfo($file_array[name]);
                $origExtension = $t[extension];
                /* const */ $dest = $filename;
                /* const */ $source = $file_array['tmp_name'];
                $resized = false;
                if ($max_x || $max_y) {
                    $scale = 1;
                    list($x, $y) = @getimagesize($source);
                    if ($max_x)
                        $scale = min($max_x / $x, $scale);
                    if ($max_y)
                        $scale = min($max_y / $y, $scale);
                    $isJPEG = false;

                    if ($im = ImageCreateFromJPEG($source)) { // Read JPEG Image
                        $isJPEG = true;
                    } else {
                        $im = ImageCreateFromPNG($source) or // or PNG Image
                                $im = ImageCreateFromGIF($source) or // or GIF Image
                                $im = false; // If image is not JPEG, PNG, or GIF
                    }
                    $new_x = (int) ($x * $scale);
                    $new_y = (int) ($y * $scale);
                    if ($im) {
                        // if(!$im) We get errors from PHP's ImageCreate functions...
                        // So let's not resize the contents of the actual image.
                        // Create the resized image destination
                        $thumb = ImageCreateTrueColor($new_x, $new_y);
                        // Copy from image source, resize it, and paste to image destination
                        ImageCopyResampled($thumb, $im, 0, 0, 0, 0, $new_x, $new_y, $x, $y);
                        #print "DIR" . $file_dir . "<br>";
                        // Save resized image
                        if ($isJPEG) {
                            $dest .= ".jpg";
                            ImageJPEG($thumb, "$file_dir") or die("Cant save image");
                        } else {
                            $dest .= ".png";
                            ImagePNG($thumb, "$file_dir") or die("Cant save image");
                        }
                        unlink($source);
                        $resized = true;
                        //return true;
                    }
                }
                if (!$resized) {
                    $dest .= ".$origExtension";
                    move_uploaded_file($source, "$file_dir") or die("Could not upload image");
                    $return = "true after resize";
                } else {
                    #print "Success";
                    $return = "true no resize";
                    ;
                }
                break;
            default :
                $dest = NULL;
                $return = "true default" . $file_array[type];
                break;
        }
        #$return ="not in case";
    }
    return $return . $file_array[size];
}

$size = $_FILES['uploadfile']['size'];
$file_array = $_FILES['uploadfile'];
$products_id = (int) $_GET['p_id'];
if ($size > 1048576) {
    echo "error file size > 1 MB";
    unlink($_FILES['uploadfile']['tmp_name']);
    exit;
}
$ext = strtolower(substr($_FILES['uploadfile']['name'], strpos($_FILES['uploadfile']['name'], ".")));
$filename = time() . rand() . $ext;
$file = $uploaddir . $filename;
if (move_uploaded_file($_FILES['uploadfile']['tmp_name'], $file)) {
#$message = imgUP($file_array, 640, 480, $file, $filename);
#if($message){
    $insert_sql_data = array('products_id' => $products_id,
        'image_filename' => $filename,
        'images_order' => '1',
        'product_page' => '0',
        'last_modified' => 'now()');
    tep_db_perform('products_images', $insert_sql_data);

    $image = new image_process();
    $image = new image_process();
    $image->load($file);
    //$image->resizeToWidth(480);
    //$image->save($file);
    echo $filename;

    #echo $message;
    # print_r($_FILES);
} else {
    echo "error " . $file_array['error'] . " --- " . $file . " %%% " . $file . "($file_array[size])";
    #echo "error".$message;
}
?>