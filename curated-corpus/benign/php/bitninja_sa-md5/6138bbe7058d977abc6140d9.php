<?php
/**
 * @Autor: dcardozo
 * @Fecha: 17/08/2017
 */

include_once(dirname(__FILE__) . '/../config/config.php');
include_once(dirname(__FILE__) . '/../init.php');

class AreaCliente extends RouteController implements HelperReports {

    public function executeIndex() {
        try {
            global $smarty;

            $rcUser = ApiUser::getUser(array('Codigo' => Tools::GetSession(VAR_SESSION_USER)));
            $rcOpciones = ApiUser::ConsultarPerfilUsuario(array('Codigo' => Tools::GetSession(VAR_SESSION_USER)));

            $js_files = array(_APP_JS_DIR_ . 'AreaCliente.js');

            $smarty->assign(array(
                'JS_FILES' => $js_files,
                'OPCIONES' => $rcOpciones,
                'DATA' => $rcUser
            ));

            $smarty->display(_APP_TPL_DIR_ . 'AreaCliente.tpl');
        } catch (Exception $e) {
            Tools::ThrowError($e);
        }
    }

    public function executeFilter(){
        try{
            Tools::CheckSession();

            $rcSort = Tools::GetValue('sort', array());

            return ApiNota::Filter(array(
                'page' => Tools::GetValue('current', 1),
                'limit' => Tools::GetValue('rowCount', 10),
                'filter' => Tools::GetValue('searchPhrase', ''),
                'sortBy' => sizeof($rcSort) ? key($rcSort) : '',
                'sortMethod' => sizeof($rcSort) ? $rcSort[key($rcSort)] : '',
                'Codigo' => Tools::GetSession(VAR_SESSION_USER),
            ),TRUE);
        }catch (Exception $e) {
            Tools::ThrowError($e);
        }
    }

    public function executeGetDetalleNota(){
        try{

            Tools::CheckSession();

            //return ApiNota::getDetalleNota(array(
            //   'Id' => Tools::GetValue('sbId', 1),
            //));
        }catch (Exception $e) {
            Tools::ThrowError($e);
        }
    }

    public function executeSetComprobanteNota(){
        try{
            Tools::CheckSession();

            //return ApiComprobante::setComprobanteNota(array(
            //    'Codigo' => Tools::GetSession(VAR_SESSION_USER),
            //    'Notificacion' => Tools::GetValue('sbFile', ''),
            // => Tools::GetValue('sbIdNota', '')
            //));
        }catch (Exception $e) {
            Tools::ThrowError($e);
        }

    }

    public function executeGenerateExcel(){
        try{
            Tools::CheckSession();

            $sbCodigo = Tools::GetValue('sbCodigoTomador',null);
            $boGrupoEmpresarial = TRUE;

            if($sbCodigo == null){
                $sbCodigo = Tools::GetSession(VAR_SESSION_USER);
                $boGrupoEmpresarial = FALSE;
            }

            //$objData = ApiNota::reporteNota(array(
            //    'Codigo' => $sbCodigo,
            //    'Filtro' => Tools::GetValue('sbFiltro','')
            //),$boGrupoEmpresarial);

            $objReporteNota = new ReporteNota();

            $sbFile = $objReporteNota->draw(array(
            //    'Data' => $objData,
                'Nombre' => 'Reporte_Area_Cliente_' . time()
            ));

            return HelperApi::Response(array(
                'File' => $sbFile
            ), TRUE);
        }catch (Exception $e) {
            Tools::ThrowError($e);
        }
    }

    public function executeDownloadExcel() {
        HelperDownload::Download(array(
            'File' => Tools::GetValue('File'),
            'Type' => EXCEL
        ));
    }

    public function executePayNota(){
        try {
            if( ApiNota::payNota(array(
                'Referencia'   =>     Tools::GetValue('reference_sale', INT_NULL),
                'Estado'       =>     Tools::GetValue('state_pol', EST_ERROR)
            ))){
                return "ok";
            }else{
                return "fail";
            }
        } catch (Exception $e) {
            Tools::ThrowError($e);
        }
    }

    public function executePayNotaTuCompra(){
        try {
            if( ApiNota::payNotaTuCompra(array(
                'Referencia'   =>     Tools::GetValue('codigoFactura', INT_NULL),
                'Estado'       =>     Tools::GetValue('transaccionAprobada', EST_ERROR)
            ))){
                return "ok";
            }else{
                return "fail";
            }
        } catch (Exception $e) {
            Tools::ThrowError($e);
        }
    }
}

$objAreaCliente = new AreaCliente();
$sbAction = Tools::GetValue('action');
print($objAreaCliente->execute($objAreaCliente, $sbAction));
?>