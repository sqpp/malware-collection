<?php

/**
 *
 * Woocommerce functions:
 *
 **/
function dpr_get_woo_version_number() {
        // If get_plugins() isn't available, require it
	if ( ! function_exists( 'get_plugins' ) )
		require_once( ABSPATH . 'wp-admin/includes/plugin.php' );
	
        // Create the plugins folder and file variables
	$plugin_folder = get_plugins( '/' . 'woocommerce' );
	$plugin_file = 'woocommerce.php';
	
	// If the plugin version number is set, return it 
	if ( isset( $plugin_folder[$plugin_file]['Version'] ) ) {
		return $plugin_folder[$plugin_file]['Version'];

	} else {
	// Otherwise return null
		return NULL;
	}
}


/** Add Woocommerce 3.0 gallery support */
 

function woocommerce_gallery_setup() {
add_theme_support( 'wc-product-gallery-zoom' );
add_theme_support( 'wc-product-gallery-lightbox' );
add_theme_support( 'wc-product-gallery-slider' );
}
if( dpr_get_woo_version_number() >= 3.0 ) {
add_action( 'after_setup_theme', 'woocommerce_gallery_setup' );    
} 
	 // Add woocommerce related JS
	function bruno_add_womommerce_js(){
	wp_enqueue_script('bruno-woocommerce-js', get_template_directory_uri() . '/js/woocommerce-custom.js', array('jquery'),false,true);
	}
	add_action('wp_enqueue_scripts', 'bruno_add_womommerce_js');
	
// Number of products per page
$productsperpage = get_option($bruno_tpl->name . '_woocommerce_list_perpage','9');
if(isset($_GET['listing_perpage'])) $productsperpage = $_GET['listing_perpage'];
   add_filter( 'loop_shop_per_page', create_function( '$cols', "return $productsperpage;" ), 20 );


// Number of products per row
add_filter('loop_shop_columns', 'bruno_loop_columns');
	if (!function_exists('bruno_loop_columns')) {
		function bruno_loop_columns() {
		global $bruno_tpl;
		return get_option($bruno_tpl->name . '_woocommerce_list_columns','3');
		}
	}

// Redefine woocommerce_output_related_products()
function bruno_woo_related_products_limit() {
  global $product, $bruno_tpl;
	
	$args = array(
		'post_type'        		=> 'product',
		'no_found_rows'    		=> 1,
		'posts_per_page'   		=> get_option($bruno_tpl->name . '_woocommerce_related_perpage','8'),
		'ignore_sticky_posts' 	=> 1,
	);
	return $args;
}
add_filter( 'woocommerce_related_products_args', 'bruno_woo_related_products_limit' );
 
// Redefine the breadcrumb
function bruno_woocommerce_breadcrumb() {
	woocommerce_breadcrumb(array(
		'delimiter'   => '',
		'wrap_before' => '<div class="bruno-woocommerce-breadcrumbs">',
		'wrap_after'  => '</div>',
		'before' => '<span>',
		'after' => '</span>'
	));
}

// remove old breadcrumb callback
remove_action( 'woocommerce_before_main_content', 'woocommerce_breadcrumb', 20, 0);
// add our own breadcrumb callback


add_action( 'woocommerce_after_shop_loop_item_price', 'woocommerce_template_loop_price', 10 );
add_action( 'woocommerce_after_shop_loop_item_rating', 'woocommerce_template_loop_rating', 5 );

// Display short description on catalog pages.
function bruno_wc_short_description($count) {
	global $product;
	global $woocommerce;
	
	$input = get_post(  )->post_excerpt;
	$output = '';
	$input = strip_tags($input);
	
	if (function_exists('mb_substr')) {
		$output = mb_substr($input, 0, $count);
		if (mb_strlen($input) > $count){
			$output .= '&hellip;';
		}
	}
	else {
		$output = substr($input, 0, $count);
		if (strlen($input) > $count){
			$output .= '&hellip;';
		}
	}	
	
	return '<p class="short-desc">'.wp_kses_post($output).'</p>';
}

function bruno_wc_long_description() {
	global $product;
	global $woocommerce;
	
	$input = get_post( )->post_excerpt;
	$input = strip_tags($input);
	return '<p class="long-desc">'.wp_kses_post($input).'</p>';
}

//remove add to cart, select options buttons on catalog pages
function bruno_remove_loop_button(){
	remove_action( 'woocommerce_after_shop_loop_item', 'woocommerce_template_loop_add_to_cart', 10 );
}

add_action('init','bruno_remove_loop_button');




/* Compare Yith */
if ( class_exists( 'YITH_Woocompare' ) ) { 
    if (get_theme_mod('store_add_to_compare', 1 ) == 1) {
        remove_action( 'woocommerce_after_shop_loop_item', array( $yith_woocompare->obj, 'add_compare_link' ), 20 );
        remove_action( 'woocommerce_single_product_summary', array( $yith_woocompare->obj, 'add_compare_link' ), 35 );
        update_option( 'yith_woocompare_is_button', 'link' );
    }
}


/* Wishlist Yith */
if ( class_exists( 'YITH_WCWL_Init' ) ) { 
    if (get_theme_mod('store_add_to_wishlist', 1 ) == 1) { 

        function yit_change_wishlist_label() {
            return esc_html__( 'Add to Wishlist', 'dpr-bruno' );
        }    

        function yit_change_browse_wishlist_label() {
            return esc_html__( 'View Wishlist', 'dpr-bruno' );
        }

        add_filter( 'yith_wcwl_button_label', 'yit_change_wishlist_label' );
        add_filter( 'yith-wcwl-browse-wishlist-label', 'yit_change_browse_wishlist_label' );

        update_option( 'yith_wcwl_use_button', 'no' );
        update_option( 'yith_wcwl_button_position', 'shortcode' );
        update_option ('yith_wcwl_wishlist_title', '');

        update_option ('yith_wcwl_share_fb', '0');
        update_option ('yith_wcwl_share_twitter', '0');
        update_option ('yith_wcwl_share_pinterest', '0');
        update_option ('yith_wcwl_share_googleplus', '0');
        update_option ('yith_wcwl_share_email', '0');
		if( class_exists( 'YITH_WCWL_UI' ) ) {
        /* Extend Wishlist class to remove some things*/
        class Bruno_YITH extends YITH_WCWL_UI {

            public static function add_to_wishlist_button( $url, $product_type, $exists ) {
                global $yith_wcwl, $product;

                $label_option = get_option( 'yith_wcwl_add_to_wishlist_text' );
                $localize_label = function_exists( 'icl_translate' ) ? icl_translate( 'Plugins', 'plugin_yit_wishlist_button', $label_option ) : $label_option;

                $label = apply_filters( 'yith_wcwl_button_label', $localize_label );
                $icon = get_option( 'yith_wcwl_add_to_wishlist_icon' ) != 'none' ? '<i class="' . get_option( 'yith_wcwl_add_to_wishlist_icon' ) . '"></i>' : '';

                $classes = get_option( 'yith_wcwl_use_button' ) == 'yes' ? 'class="add_to_wishlist single_add_to_wishlist button alt"' : 'class="add_to_wishlist"';

                $html  = '<div class="yith-wcwl-add-to-wishlist">';
                $html .= '<div class="yith-wcwl-add-button';  // the class attribute is closed in the next row

                $html .= $exists ? ' hide" style="display:none;"' : ' show"';

                $html .= '><a href="' . esc_url( $yith_wcwl->get_addtowishlist_url() ) . '" data-product-id="' . $product->get_id(). '" data-product-type="' . $product_type . '" ' . $classes . ' >' . wp_kses_post($icon . $label) . '</a>';
                $html .= '</div>';

                $html .= '<div class="yith-wcwl-wishlistaddedbrowse" style="display:none;"><span class="feedback">' . esc_html__( 'Product added!','dpr-bruno' ) . '</span> <a href="' . esc_url( $url ) . '"></a></div>';
                $html .= '<div class="yith-wcwl-wishlistexistsbrowse ' . ( $exists ? 'show' : 'hide' ) . '" style="display:' . ( $exists ? 'block' : 'none' ) . '"><span class="feedback">' . esc_html__( 'The product is already in the wishlist!', 'dpr-bruno' ) . '</span> <a href="' . esc_url( $url ) . '">' . apply_filters( 'yith-wcwl-browse-wishlist-label', esc_html__( 'Browse Wishlist', 'dpr-bruno' ) ) . '</a></div>';
                $html .= '<div style="clear:both"></div><div class="yith-wcwl-wishlistaddresponse"></div>';

                $html .= '</div>';
                $html .= '<div class="clear"></div>';

                return $html;
            }
        }
        /* End extend Wishlist class */
		}
    }
}

 /* Add Compare and wishlist buttons in single product view */

add_action( 'woocommerce_after_add_to_cart_button', 'dpr_add_clear_to_cart_button', 34 );
function dpr_add_clear_to_cart_button() { 
echo '<div class="dpr-cart-clear"></div>';
}
 
add_action( 'woocommerce_after_add_to_cart_button', 'dpr_add_compare_to_product', 35 );

function dpr_add_compare_to_product() { 
 if ( class_exists( 'YITH_Woocompare' ) ) { 
            if (get_theme_mod('store_add_to_compare', 1 ) == 1) { ?>
            <div class="product-compare">
				<?php echo do_shortcode('[yith_compare_button container="no"]'); ?>
            </div>
    <?php } } 
	 } 
add_action( 'woocommerce_after_add_to_cart_button', 'dpr_add_wishlist_button_to_product', 36 );

function dpr_add_wishlist_button_to_product() { 
 if ( class_exists( 'YITH_WCWL_Init' ) ) { 
            if (get_theme_mod('store_add_to_wishlist', 1 ) == 1) { ?>
            <div class="product-wishlist">
				<?php echo do_shortcode('[yith_wcwl_add_to_wishlist]'); ?>
            </div>
    <?php } } 
	 } 

function dpr_add_compare_wish_to_product() { 
 if ( class_exists( 'YITH_Woocompare' ) ) { 
            if (get_theme_mod('store_add_to_compare', 1 ) == 1) { ?>
            
            <div class="product-compare clearfix">
				<?php echo do_shortcode('[yith_compare_button container="no"]'); ?>
            </div>
    <?php } } 
	 } 



if ( !function_exists( 'bruno_product_toggle' ) ) {

    function bruno_product_toggle() {
        global $bruno_tpl;
        $product_layout = get_option($bruno_tpl->name . '_woocommerce_list_prefered_view','grid') ;
		if (get_option($bruno_tpl->name . '_woocommerce_list_view_switcher','Y') == "Y") {
        if ( $product_layout == 'grid' ):
            ?>
    		<div class="view-switcher clearfix">
                <div class="toggleGrid active" data-tipcontent="Grid Layout"><i class="icon-th-large"></i></div>
                <div class="toggleList" data-tipcontent="List Layout"><i class="icon-th-list"></i></div>
            </div>
        <?php elseif ( $product_layout == 'list' ): ?> 
    		<div class="view-switcher clearfix">
                <div class="toggleGrid" data-tipcontent="Grid Layout"><i class="icon-th-large"></i></div>
                <div class="toggleList active" data-tipcontent="List Layout"><i class="icon-th-list"></i></div>
            </div>
        <?php endif; }?> 

        <?php
    }

}

// Catalog Mode
function bruno_add_catalog_mode_body_class( $classes ) {
        $classes[] = 'woocommerce-catalogmode';
    	return $classes;
}

function bruno_enable_catalog() {
 	global $bruno_tpl;
    remove_action( 'woocommerce_after_shop_loop_item', 'woocommerce_template_loop_add_to_cart', 10 );
    remove_action( 'woocommerce_single_product_summary', 'woocommerce_template_single_add_to_cart', 30 );
    remove_action( 'woocommerce_simple_add_to_cart', 'woocommerce_simple_add_to_cart', 30 );
    remove_action( 'woocommerce_grouped_add_to_cart', 'woocommerce_grouped_add_to_cart', 30 );
    remove_action( 'woocommerce_variable_add_to_cart', 'woocommerce_variable_add_to_cart', 30 );
    remove_action( 'woocommerce_external_add_to_cart', 'woocommerce_external_add_to_cart', 30 );
	add_filter( 'body_class','bruno_add_catalog_mode_body_class' );
}

// Hide prices
function bruno_add_hide_prices_body_class( $classes ) {
        $classes[] = 'woocommerce-hideprices';
    	return $classes;
}

function bruno_hide_prices() {
    remove_action( 'woocommerce_after_shop_loop_item_title', 'woocommerce_template_loop_price', 10 );
    remove_action( 'woocommerce_single_product_summary', 'woocommerce_template_single_price', 10 );
	add_filter( 'body_class','bruno_add_hide_prices_body_class' );
}

if ( ( get_option($bruno_tpl->name . '_woocommerce_catalog','N')  == 'Y' ) || ( get_option($bruno_tpl->name . '_woocommerce_hide_prices','N')  == 'Y' ) ) {
    add_action( 'init', 'bruno_enable_catalog' );
	if (  get_option($bruno_tpl->name . '_woocommerce_hide_prices','N')  == 'Y'  ) {
			add_action( 'init', 'bruno_hide_prices' );
		}
}

//Product thumbnail custom 

	function woocommerce_template_loop_product_thumbnail() {
		global $bruno_tpl,$product;
		$use_add_to = false;
		$addclass1 = $addclass2 = '';
		if (get_option($bruno_tpl->name . '_woocommerce_list_cart_button','Y') == 'Y' && get_option($bruno_tpl->name . '_woocommerce_catalog','N') != 'Y') {
		$use_add_to = true;
		$addclass1 = ' lefted';
		$addclass2 = ' righted';
		}
		$output = '<div class="figure-container"><figure class="product-thumb loop-thumb">';
		$output .= '<div class="text-overlay">';
		$output .= '<div class="buttons-holder">'; 
		if ($use_add_to) {
		$output .= '<a class="cart-bt'.esc_attr($addclass2).'" rel="nofollow" href="'.esc_url( $product->add_to_cart_url() ).'" data-quantity="'.esc_attr( isset( $quantity ) ? $quantity : 1 ).'" data-product_id="'.esc_attr( $product->get_id()).'" data-product_sku="'.esc_attr( $product->get_sku() ).'"><i class="Default-basket"></i></a>';
		 } 
		$output .= '<a class="details-bt'.esc_attr($addclass1).'" href="'.esc_url(get_permalink()).'"><i class="Default-eye"></i></a>';
		$output .= '</div>';
        $output .= '</div>';
		$output .= woocommerce_get_product_thumbnail();
		$output .= '</figure></div>';
		print ($output);
	}
