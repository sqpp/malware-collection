<?php

$files = array();

if (!empty($_FILES['serial_number_image_file']['name'])) {

  $filepath = upload('uploads/serial-number/', $_FILES['serial_number_image_file']);
  if (!is_null($filepath)) 
  {
    $files['serial_number_image'] = $filepath;
  }
  else 
  {
    die('Unable to upload file');
  }
}

if (!empty($_FILES['proof_of_purchase_file']['name'])) {
  $filepath = upload('uploads/proof-purchase/', $_FILES['proof_of_purchase_file']);
  if (!is_null($filepath)) 
  {
    $files['proof_purchase_image'] = $filepath;
  }
  else 
  {
    die('Unable to upload file');
  }
}

function baseUrl()
{
  return sprintf(
    "%s://%s",
    isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off' ? 'https' : 'http',
    $_SERVER['SERVER_NAME']
  );
}

function upload($folder, $file) 
{
  $uploadfile = $folder . uniqid().'.jpg';

  if (move_uploaded_file($file['tmp_name'], $uploadfile)) 
  {
    return baseUrl() . '/register/' . $uploadfile;
  }
  else 
  {
    return NULL;
  }
}

//TOUCHPOINT
//set variables
$vars = array_merge($files,$_POST);
//var_dump($vars);
$companyId = 5486;
$partitionId = 8420;

$appKey = 'TP_REST_API_SAMSUNGNZ1';
$appSecret = 'S4Mkut-29doiVN';

$url = 'api.touchpointplatform.com';

$campaignAlpha = 57371;

$headers = array(
  'Accept: application/xml',
  'X-Touchpoint-API-Version: 1.0',
  'X-Touchpoint-Application-Key: '. $appKey,
  'Authorization: x',
  'content-type: application/xml',
);

function randomString($length) {
  $characters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
  $randstring = '';
  for ($i = 0; $i < $length; $i++) {
    $randstring .= ord($characters[rand(0, strlen($characters))]);
  }
  return $randstring;
}

function authenticateSession($requestURL, $HTTPMethod)
{
  global $appKey, $appSecret;
  $token = randomString(8);

  date_default_timezone_set("Pacific/Auckland"); 
  $createdDate = time();

  $signatureValue = $appKey .
    $HTTPMethod .
    $requestURL .
    $createdDate .
    $token .
    $appSecret;

  $md5Key = md5($signatureValue, false);	

  $authKey = 	'ApplicationSignature' . 
    ' http-method="'.$HTTPMethod.'"' .
    ' http-request-url="'.$requestURL.'"' .
    ' timestamp="'.$createdDate.'"' .
    ' nonce="'.$token.'"' .
    ' signature="'.$md5Key.'"' .
    ' signature-algorithm="md5-hash"';

  return $authKey;
}

//FIND CONTACT
$data = '?matchkey=email&'.
  'matchvalue='.$vars['email'].'&'.
  'attributes=email,emailpermission';
$findHeader = $headers;
$urlFull = 'https://'.$url.'/rest/core/'.$companyId.'/'.$partitionId.'/contacts'.$data;
$findHeader[] = 'Authorization: ' . authenticateSession($urlFull,'GET');

// Initialize the cURL session with the request URL
$findSession = curl_init($urlFull); 

//var_dump($findSession);
// Tell cURL to return the request data
curl_setopt($findSession, CURLOPT_RETURNTRANSFER, true); 
curl_setopt($findSession, CURLOPT_HTTPHEADER, $findHeader);
// Execute cURL on the session handle
$findResponse = curl_exec($findSession);

$findXml = simplexml_load_string($findResponse);

//var_dump($findResponse);
//die;
curl_close($findSession);

$contactId;
if(sizeof($findXml->contact)==0)
{
  //ADD CONTACT 2.3 API DOC 
  $addHeader = $headers;
  $urlFull = 'https://'.$url.'/rest/core/'.$companyId.'/'.$partitionId.'/contacts';
  $addHeader[] = 'Authorization: ' . authenticateSession($urlFull,'POST');
  $xmlDoc = "<?xml version='1.0' encoding='utf-8'?>" .
    "<request>" .
    "<contact>" .
    "<email>" . $vars['email'] . "</email>" .
    "<mobile>" . $vars['mobile'] . "</mobile>" .
    "<emailpermission>" . ($vars['email-permission']==='true' ? "true" : "false" ) ."</emailpermission>" .
    "<extensionattributes>" .
    "<first_name>" . $vars['first_name'] . "</first_name>" .
    "<last_name>" . $vars['last_name'] . "</last_name>" .
    "</extensionattributes>" .
    "</contact>" .
    "</request>";
  $addSession = curl_init($urlFull);
  //var_dump($xmlDoc);
  //var_dump($addSession);
  //curl_setopt($addSession, CURLOPT_MUTE, 1);
  curl_setopt($addSession, CURLOPT_SSL_VERIFYHOST, 0);
  curl_setopt($addSession, CURLOPT_SSL_VERIFYPEER, 0);
  curl_setopt($addSession, CURLOPT_POST, 1);
  //curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: text/xml'));
  curl_setopt($addSession, CURLOPT_HTTPHEADER, $addHeader);
  curl_setopt($addSession, CURLOPT_POSTFIELDS, "$xmlDoc");
  curl_setopt($addSession, CURLOPT_RETURNTRANSFER, 1);
  $addResponse = curl_exec($addSession);
  $addXml = simplexml_load_string($addResponse);
  //print_r($addResponse);
  $contactId = $addXml->contact->contactid;
  curl_close($addSession);
} 
else 
{
  //echo('-'.$findXml->contact->emailpermission);
  $contactId = $findXml->contact->contactid;
  //if($vars['email-permission']==='true'&&$findXml->contact->emailpermission=='false'){
  $updateHeader = $headers;
  $urlFull = 'https://'.$url.'/rest/core/'.$companyId.'/'.$partitionId.'/contacts/'.$contactId;
  $updateHeader[] = 'Authorization: ' . authenticateSession($urlFull,'PUT');
  $xmlDoc = "<?xml version='1.0' encoding='utf-8'?>" .
    "<request>" .
    "<contact>" .
    "<email>" . $vars['email'] . "</email>" .
    "<mobile>" . $vars['mobile'] . "</mobile>" .
    "<emailpermission>" . ($vars['email-permission']==='true' ? "true" : "false" ) ."</emailpermission>" .
    "<extensionattributes>" .
    "<first_name>" . $vars['first_name'] . "</first_name>" .
    "<last_name>" . $vars['last_name'] . "</last_name>" .
    "</extensionattributes>" .
    "</contact>" .
    "</request>";
  $updateSession = curl_init($urlFull);
  //curl_setopt($updateSession, CURLOPT_MUTE, 1);
  curl_setopt($updateSession, CURLOPT_SSL_VERIFYHOST, 0);
  curl_setopt($updateSession, CURLOPT_SSL_VERIFYPEER, 0);
  //curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: text/xml'));
  curl_setopt($updateSession, CURLOPT_HTTPHEADER, $updateHeader);
  curl_setopt($updateSession, CURLOPT_CUSTOMREQUEST, "PUT");
  curl_setopt($updateSession, CURLOPT_POSTFIELDS, "$xmlDoc");
  curl_setopt($updateSession, CURLOPT_RETURNTRANSFER, 1);
  $updateResponse = curl_exec($updateSession);

  $updateXml = simplexml_load_string($updateResponse);
  curl_close($updateSession);
  //}
}

//CREATE CAMPAIGN MEMBER 4.4 API DOC
if($contactId)
{
  $campaignHeader = $headers;
  $urlFull = 'https://'.$url.'/rest/core/'.$companyId.'/'.$partitionId.'/campaigns/'.$campaignAlpha.'/members/';
  //var_dump($urlFull);
  $campaignHeader[] = 'Authorization: ' . authenticateSession($urlFull,'POST');
  $xmlDoc = "<?xml version='1.0'?>" .
    "<request>" .
    "<campaignmember>" .
    "<contactid>" . $contactId . "</contactid>" .
    "<responsestate>Not Sent</responsestate>" .
    "<extensionattributes>" .
    "<first_name>" . $vars['first_name'] . "</first_name>" .
    "<last_name>" . $vars['last_name'] . "</last_name>" .
    "<email>" . $vars['email'] . "</email>" .
    "<samsung_product_owned>" . $vars['samsung_product_owned'] . "</samsung_product_owned>" .
    "<prouct_owned_smartphone>" . ($vars['prouct_owned_smartphone']==='true' ? "true" : "false" ) . "</prouct_owned_smartphone>" .
    "<smartphone_owned_galaxy_s6>" . ($vars['smartphone_owned_galaxy_s6']==='true' ? "true" : "false" ) . "</smartphone_owned_galaxy_s6>" .
    "<smartphone_owned_galaxy_s5>" . ($vars['smartphone_owned_galaxy_s5']==='true' ? "true" : "false" ) . "</smartphone_owned_galaxy_s5>" .
    "<smartphone_owned_galaxy_s4>" . ($vars['smartphone_owned_galaxy_s4']==='true' ? "true" : "false" ) . "</smartphone_owned_galaxy_s4>" .
    "<smartphone_owned_galaxy_note4>" . ($vars['smartphone_owned_galaxy_note4']==='true' ? "true" : "false" ) . "</smartphone_owned_galaxy_note4>" .
    "<smartphone_owned_galaxy_v>" . ($vars['smartphone_owned_galaxy_v']==='true' ? "true" : "false" ) . "</smartphone_owned_galaxy_v>" .
    "<smartphone_owned_other>" . ($vars['smartphone_owned_other']==='true' ? "true" : "false" ) . "</smartphone_owned_other>" .
    "<prouct_owned_tv>" . ($vars['prouct_owned_tv']==='true' ? "true" : "false" ) . "</prouct_owned_tv>" .
    "<tv_owned_suhd_tv>" . ($vars['tv_owned_suhd_tv']==='true' ? "true" : "false" ) . "</tv_owned_suhd_tv>" .
    "<tv_owned_uhd_tv>" . ($vars['tv_owned_uhd_tv']==='true' ? "true" : "false" ) . "</tv_owned_uhd_tv>" .
    "<tv_owned_led_tv>" . ($vars['tv_owned_led_tv']==='true' ? "true" : "false" ) . "</tv_owned_led_tv>" .
    "<tv_owned_other>" . ($vars['tv_owned_other']==='true' ? "true" : "false" ) . "</tv_owned_other>" .
    "<prouct_owned_home_appliance>" . ($vars['prouct_owned_home_appliance']==='true' ? "true" : "false" ) . "</prouct_owned_home_appliance>" .
    "<home_app_owned_refrigerator>" . ($vars['home_app_owned_refrigerator']==='true' ? "true" : "false" ) . "</home_app_owned_refrigerator>" .
    "<home_app_owned_cooking_app>" . ($vars['home_app_owned_cooking_app']==='true' ? "true" : "false" ) . "</home_app_owned_cooking_app>" .
    "<home_app_owned_washing_machine>" . ($vars['home_app_owned_washing_machine']==='true' ? "true" : "false" ) . "</home_app_owned_washing_machine>" .
    "<home_app_owned_dishwasher>" . ($vars['home_app_owned_dishwasher']==='true' ? "true" : "false" ) . "</home_app_owned_dishwasher>" .
    "<home_app_owned_other>" . ($vars['home_app_owned_other']==='true' ? "true" : "false" ) . "</home_app_owned_other>" .
    "<prouct_owned_tablet>" . ($vars['prouct_owned_tablet']==='true' ? "true" : "false" ) . "</prouct_owned_tablet>" .
    "<tablet_owned_tab_s>" . ($vars['tablet_owned_tab_s']==='true' ? "true" : "false" ) . "</tablet_owned_tab_s>" .
    "<product_code_tab_s>" . $vars['product_code_tab_s'] . "</product_code_tab_s>" .
    "<tablet_owned_tab_4>" . ($vars['tablet_owned_tab_4']==='true' ? "true" : "false" ) . "</tablet_owned_tab_4>" .
    "<product_code_tab_4>" . $vars['product_code_tab_4'] . "</product_code_tab_4>" .
    "<tablet_owned_tab_3>" . ($vars['tablet_owned_tab_3']==='true' ? "true" : "false" ) . "</tablet_owned_tab_3>" .
    "<product_code_tab_3>" . $vars['product_code_tab_3'] . "</product_code_tab_3>" .
    "<tablet_owned_tab_a>" . ($vars['tablet_owned_tab_a']==='true' ? "true" : "false" ) . "</tablet_owned_tab_a>" .
    "<product_code_tab_a>" . $vars['product_code_tab_a'] . "</product_code_tab_a>" .
    "<tablet_owned_notepro>" . ($vars['tablet_owned_notepro']==='true' ? "true" : "false" ) . "</tablet_owned_notepro>" .
    "<product_code_notepro>" . $vars['product_code_notepro'] . "</product_code_notepro>" .
    "<tablet_owned_other>" . ($vars['tablet_owned_other']==='true' ? "true" : "false" ) . "</tablet_owned_other>" .
    "<product_code_tablet_other1>" . $vars['product_code_tablet_other1'] . "</product_code_tablet_other1>" .
    "<product_owned_other>" . ($vars['product_owned_other']==='true' ? "true" : "false" ) . "</product_owned_other>" .
    "<product_code_product_other>" . $vars['product_code_product_other'] . "</product_code_product_other>" .
    "<hear_about_mobile_devices>" . ($vars['hear_about_mobile_devices']==='true' ? "true" : "false" ) . "</hear_about_mobile_devices>" .
    "<hear_about_tvs>" . ($vars['hear_about_tvs']==='true' ? "true" : "false" ) . "</hear_about_tvs>" .
    "<hear_about_home_appliances>" . ($vars['hear_about_home_appliances']==='true' ? "true" : "false" ) . "</hear_about_home_appliances>" .
    "<hear_about_tablets>" . ($vars['hear_about_tablets']==='true' ? "true" : "false" ) . "</hear_about_tablets>" .
    "<hear_about_accessories>" . ($vars['hear_about_accessories']==='true' ? "true" : "false" ) . "</hear_about_accessories>" .
    "<hear_about_offers>" . ($vars['hear_about_offers']==='true' ? "true" : "false" ) . "</hear_about_offers>" .
    "<i_want_to_hear_about>" . ($vars['i_want_to_hear_about']==='true' ? "true" : "false" ) . "</i_want_to_hear_about>" .
    "</extensionattributes>" .
    "</campaignmember>" .
    "</request>";
  $campaignSession = curl_init($urlFull); 
  //var_dump($xmlDoc);
  //var_dump($campaignSession);
  //curl_setopt($campaignSession, CURLOPT_MUTE, 1);
  curl_setopt($campaignSession, CURLOPT_SSL_VERIFYHOST, 0);
  curl_setopt($campaignSession, CURLOPT_SSL_VERIFYPEER, 0);
  curl_setopt($campaignSession, CURLOPT_POST, 1);
  //curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: text/xml'));
  curl_setopt($campaignSession, CURLOPT_HTTPHEADER, $campaignHeader);
  curl_setopt($campaignSession, CURLOPT_POSTFIELDS, "$xmlDoc");
  curl_setopt($campaignSession, CURLOPT_RETURNTRANSFER, 1);
  $campaignResponse = curl_exec($campaignSession);
  $campaignXml = simplexml_load_string($campaignResponse);
  //var_dump($campaignXml);
  //$contactId = $campaignXml->contact->contactid;
  curl_close($campaignSession);
  $campaignId = $campaignXml->campaignmember->campaignmemberid;

  //SEND MESSAGE 2.9 API DOC
  $messageHeader = $headers;
  $urlFull = 'https://'.$url.'/rest/core/'.$companyId.'/'.$partitionId.'/contacts/'.$contactId.'/sentmessages';
  //var_dump($urlFull);
  $messageHeader[] = 'Authorization: ' . authenticateSession($urlFull,'POST');
  $xmlDoc = "<?xml version='1.0'?>" .
    "<request>" .
    "<messagesubmitteralphaid>webregisterform</messagesubmitteralphaid>" .
    "<contactid>" . $contactId . "</contactid>" .
    "<campaignmemberid>" . $campaignId . "</campaignmemberid>" .
    "<campaignmemberdata>" .
    "<contactdate>" . date("Y-m-d") . "T" . date("H:i:s") . "Z</contactdate>" .
    "</campaignmemberdata>" .
    "</request>";
  $messageSession = curl_init($urlFull);
  //var_dump($xmlDoc);
  //die;
  //curl_setopt($messageSession, CURLOPT_MUTE, 1);
  curl_setopt($messageSession, CURLOPT_SSL_VERIFYHOST, 0);
  curl_setopt($messageSession, CURLOPT_SSL_VERIFYPEER, 0);
  curl_setopt($messageSession, CURLOPT_POST, 1);
  //curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: text/xml'));
  curl_setopt($messageSession, CURLOPT_HTTPHEADER, $messageHeader);
  curl_setopt($messageSession, CURLOPT_POSTFIELDS, "$xmlDoc");
  curl_setopt($messageSession, CURLOPT_RETURNTRANSFER, 1);
  $messageResponse = curl_exec($messageSession);
  $messageXml = simplexml_load_string($messageResponse);

  echo 'OK<br>';
  var_dump($messageXml);
  die;
  //$contactId = $messageXml->contact->contactid;
  curl_close($messageSession);
}

header('Cache-control: no-store, no-cache'); 
header('Pragma: no-cache');
header('Location:thankyou.php');
