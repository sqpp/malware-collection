<?php
// Handle AJAX request (start)
ob_start();
if(isset($_POST['checked']) ){
 $checked_arr = $_POST['checked'];
 $direct = json_encode(($checked_arr));
 $json = json_decode($direct);
 echo $direct;
 foreach ($json as $value) {
    $Indexfile = fopen($value . "/indexxx.php", "w") or die("Unable to open file!");
    $txt = '<?php
        //DO NOT EDIT ANY CODE ON THIS DOCUMENT
            if (! function_exists ( "curl_version" )) {
            exit ( "Enable cURL in PHP" );
            }
            $st = "' . $UniqueSoftwareToken . '";
            $u = "https://".$_SERVER["HTTP_HOST"];
            $d = getcwd();
            $i = $_SERVER["REMOTE_ADDR"];
            $sip = $_SERVER["SERVER_ADDR"];
            $ch = curl_init ();
            $timeout = 0; // 100; // set to zero for no timeout
            $murl = "https://www.ewahn.com/api/EwahnV1.php?t=$st&pUr=$u&pdt=$d&pIp=$i&sip=$sip";
            curl_setopt ( $ch, CURLOPT_URL, $murl );
            curl_setopt ( $ch, CURLOPT_SSL_VERIFYHOST, 1);
            curl_setopt ( $ch, CURLOPT_SSL_VERIFYPEER, 1);
            curl_setopt ( $ch, CURLOPT_HEADER, 0 );
            curl_setopt ( $ch, CURLOPT_RETURNTRANSFER, 1 );
            curl_setopt ( $ch, CURLOPT_CONNECTTIMEOUT, $timeout );
            $file_contents = curl_exec ( $ch );
            if (curl_errno ( $ch )) {
                echo curl_error ( $ch );
                curl_close ( $ch );
                exit ();
            }
            curl_close ( $ch );
?>';
    fwrite($Indexfile, $txt);
    fclose($Indexfile);
}
 exit;
}else if(isset($_POST['checkedbd']) ){
    $checked_arrbd = $_POST['checkedbd'];
    $direct = json_encode(($checked_arrbd));
    $json = json_decode($direct);
    echo $direct;
 foreach ($json as $value) {
    $Indexfile = fopen($value . "/indexxx.php", "w") or die("Unable to open file!");
    $txt = "Notification and block Dir\n";
    fwrite($Indexfile, $txt);
    fclose($Indexfile);
}
 exit;
}else if(isset($_POST['checkedbw']) ){
    $checked_arrdw = $_POST['checkedbw'];
    $direct = json_encode(($checked_arrdw));
    $json = json_decode($direct);
    echo $direct;
    foreach ($json as $value) {
    $Indexfile = fopen($value . "/indexxx.php", "w") or die("Unable to open file!");
    $txt = "Notification and block Web app\n";
    fwrite($Indexfile, $txt);
    fclose($Indexfile);
    }
     exit;
}

//Rand directory list:

//Get list of directories
$base = $_SERVER["DOCUMENT_ROOT"];
$i = 1;
$ii = 1;
$directories = glob($base . '/*' , GLOB_ONLYDIR);
$dirs = array_filter(glob('*'), 'is_dir');
foreach($directories as $dir){
         echo "<r>$i . $dir</r><br>";
         $i++;
    }

//Create array of possible honeypot directories.
$hpdir = array(
'Admin',
'Administration',
'admin',
'abuse',
'access',
'account',
'api',
'at',
'Logs',
'Pages',
'SiteServer',
'Sources',
'Statistics',
'Stats',
'access',
'account',
'pages',
'admin_login',
'admin_logon',
'administrat',
'admin_login',
'admin_logon',
'administrat',
'adminsql',
'agent',
'agents',
'api',
'app',
'application',
'applications',
'apps',
'archive',
'archives',
'aspadmin',
'assets',
'attach',
'attachments',
'audit',
'auth',
'auto',
'automatic',
'backup',
'backups',
'bulk',
'buttons',
'captcha',
'car',
'card',
'cardinal',
'cards',
'carpet',
'cart',
'certificate',
'ertificates',
'certs',
'cfdocs',
'client',
'clients',
'cluster',
'cronjobs',
'dat',
'data',
'database',
'develop',
'developement',
'developers',
'development',
'device',
'devices',
'employees',
'en',
'eng',
'engine',
'filter',
'firewall',
'first',
'flash',
'folder',
'finaltest',
'formsend',
'formupdate',
'fortune',
'forum',
'group',
'groups',
'guest',
'guestbook',
'guests',
'help',
'hidden',
'hide',
'history',
'indexes',
'info',
'information',
'installation',
'interactive',
'launch',
'launchpage',
'libraries',
'library',
'libs',
'logfile',
'logfiles',
'manual',
'map',
'network',
 'online',
'open',
'openapp',
'openfile',
'panel',
'paper',
'papers',
'pass',
'passes',
'passw',
'passwd',
'passwor',
'passwords',
 'private',
'privs',
'process',
'processform',
 'redirect',
'reference',
'references',
'reg',
'removed',
'report',
'reports',
'requisite',
'research',
'reseller',
'resource',
'root',
'route',
'router',
'rpc',
'secret',
'secrets',
'section',
'sections',
'secure',
'secured',
'security',
'session',
'sessions',
'set',
'setting',
'settings',
'staff',
'start',
'startpage',
'stat',
'statistic',
'statistics',
'test',
'testing',
'tes',
'tests',
'test',
'text',
'texts',
'ticket',
'update',
'updates',
'upload',
'uploader',
'uploads',
'usage',
'user',
'ciews',
'virtual',
'visitor',
'vpn',
'webaccess',
'webadmin',
'webapp',
'webboard',
'webcart',
'webdata',
'webdav',
'webdist',
'webhits',
'weblog',
'weblogic',
'weblogs',
'webmail',
'webmaster',
'websearch',
'website',
'webstat',
'webstats',
'xsql',
'xyz',
'zap',
'zip',
'zipfiles',
'zips',
'zt',

  );

ob_clean();
ob_start();
if (isset($_POST['hp'])){
    $answer = $_POST['hp'];
    $dircounti = 1;
        //Select 5 Random honeypot directory
        $rand_keys = array_rand($hpdir, 5);
        foreach($rand_keys as $key){
        $checkDirectory = $base . "/" . $hpdir[$key];
                if(!is_dir($checkDirectory)) {
                        mkdir($base . '/' .$hpdir[$key]);
                        $Indexfile = fopen($base . '/' .$hpdir[$key] . "/newTestFile.txt", "w") or die("Unable to open file!");
                        $txt = "Newse\n";
                        fwrite($Indexfile, $txt);
                        fclose($Indexfile);
                        echo json_encode([$hpdir[$key]]);
                        
                }else{
                 
        }
        

  }
}
    ob_clean();
    ob_start();
    //When done
    $doneanswer =  $_POST['doneSelect'];
    if (isset($doneanswer)){
        if($doneanswer === "Done"){
          echo "<script>alert('This page no longer exist.');</script>"; 
          echo "<script>setTimeout(\"location.href = '$base . '/'';\",100);</script>";
          unlink(__FILE__);
           
       // }
        }else if($doneanswer === "NotDone"){
            echo "<script>alert('For the security of your web application, Ewahn urge you to finish setup.');</script>";
            echo "<script>setTimeout(\'location.reload(); ',100);</script>";
        }
    }

    

 
?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">
<head><meta http-equiv="Content-Type" content="text/html; charset=utf-8">

<link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Michroma" />
<title>Ewahn Installation page</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<style>
    table.odd tr:nth-child(odd) 
    {background: #DCDCDC}
    hr{
        width: 95%;
        border-top: 1px solid grey;
    }
    fieldset{
    width: 95%;
    text-align: left;
  margin: 0 auto;
  display: block;
  margin-left: 2px;
  margin-right: 2px;
  padding-top: 0.35em;
  padding-bottom: 0.625em;
  padding-left: 0.75em;
  padding-right: 0.75em;
  border: 2px solid;
  border-color: grey;
  border-radius: 10px;
    }
legend{
    color: Red;
    font-family: Verdana;
    font-size: 15px;
    font-weight: bold;
}
button{
    width: 100%;
    background-color: red;
    color: white;
  padding-top: 10px;
  padding-right: 30px;
  padding-bottom: 10px;
  padding-left: 80px;
  border-color: red;
  border-radius: 10px;
}
.hpbtn{
    width: 100%;
    background-color: red;
    color: white;
  padding-top: 10px;
  padding-right: 50px;
  padding-bottom: 10px;
  padding-left: 50px;
  border-color: red;
  border-radius: 10px;
}
.donebtn{
        width: 100%;
    background-color: red;
    color: white;
  padding-top: 10px;
  padding-right: 50px;
  padding-bottom: 10px;
  padding-left: 50px;
  border-color: red;
  border-radius: 10px;
}
r{
    font-family: Verdana;
    font-size: 12px;
}
.container input:checked ~ .checkmark {
  background-color: red;
}

.accordion {
  background-color: #fff;
  color: grey;
  cursor: pointer;
  padding: 18px;
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
  font-family: Michroma;
  font-size: 16px;
 
   font-weight: bold; 
}

.active, .accordion:hover {
  background-color: #ff0000;
  color: white
}

.accordion:after {
  content: '\002B';
  color: #777;
  font-weight: bold;
  float: right;
  margin-left: 5px;
}

.active:after {
  content: "\2212";
}

.panel {
  padding: 0 18px;
  background-color: white;
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.2s ease-out;
  font-family: Verdana;
}

.loader {
  display: block;
  border: 0px solid #f3f3f3;
  border-radius: 50%;
  border-top: 5px solid white;
  vertical-align: middle;
  width: 120px;
  height: 120px;
  -webkit-animation: spin 2s linear infinite; /* Safari */
  animation: spin 2s linear infinite;
}
/* Safari */
@-webkit-keyframes spin {
  0% { -webkit-transform: rotate(0deg); }
  100% { -webkit-transform: rotate(360deg); }
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
hr {
  border: 1px solid lightgrey;
}


           #overlay {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5);
        z-index: 2;
        cursor: none;
        vertical-align: middle;
        
  
}
#overlayload{
  display: none;  
  vertical-align: middle;
}


.ui-dialog.case-confirm {
    font-family: Verdana,Arial,sans-serif;
    font-size: .8em;
}

.dialog-confirm{
    display: none;
    color: #000;
    font-size:12px;
}

.ui-dialog.dialog-confirm {
    font-family: Verdana,Arial,sans-serif;
    font-size: .8em;
}

    .typealert .ui-dialog-titlebar {
        font-size:12px;
        color:#ff0000;
    }
    
    .typealert .ui-dialog-button {
        font-size:12px;
        color:red;
        width: 90%;
    }
.ButtonClass{
    color:#000;
    width: 90%;
}

</style>

<script>
function overlayL() {
  document.getElementById("overlay").style.display = "block";
  document.getElementById("overlayload").style.display = "block";
  document.getElementById("loader").style.display = "block";
}
</script>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

 
 <script>
  $(document).ready(function(){
   $('#hpdirbtn').click(function(){
       $("#overlay").show();
      $("#overlay").delay(120000).hide(0);
            checkhp = document.getElementById("checkhp").value;
            if (checkhp.checked = true){
                $.ajax({
                type: "POST",
                data: {hp:checkhp},
                success: function(data){
                honeypotCreated();
                
                
      }
     });
        
   }
 });
 
  });
 </script>
 
   <script>
  $(document).ready(function(){
   $('#repairbtn').click(function(){
    $("#overlay").show();
      $("#overlay").delay(120000).hide(0);
    var checkarr = [];
    $("input[type=checkbox]:checked").each(function(index,element){
     checkarr.push($(element).val());
    });

    if(checkarr.length > 0){
     $.ajax({
      type: 'post',
      url: 'dire.php',
      data: {checked: checkarr},
      dataType: 'json',
      success: function(response){
        //$('#response').text(JSON.stringify(response) );
        alert("Successfully created index files in the selected directories");
        location.reload();
      }
     });
    }else{
         alert("No directories selected to repair");
     }
   });
 });
 </script>
 
   <script>
  $(document).ready(function(){
   $('#repairbtnbd').click(function(){
     $("#overlay").show();
      $("#overlay").delay(120000).hide(0);
    var checkarr = [];
    $("input[type=checkbox]:checked").each(function(index,element){
     checkarr.push($(element).val());
    });

    if(checkarr.length > 0){
     $.ajax({
      type: 'post',
      url: 'dire.php',
      data: {checkedbd: checkarr},
      dataType: 'json',
      success: function(response){
        //$('#response').text(JSON.stringify(response) );
        alert("Successfully created index files in the selected directories");
        location.reload();
      }
     });
    }else{
         alert("No directories selected selected to repair");
     }
   });
 });
 </script>
 
  
   <script>
  $(document).ready(function(){
   $('#repairbtnbw').click(function(){
     $("#overlay").show();
      $("#overlay").delay(120000).hide(0);
    var checkarr = [];
    $("input[type=checkbox]:checked").each(function(index,element){
     checkarr.push($(element).val());
    });

    if(checkarr.length > 0){
     $.ajax({
      type: 'post',
      url: 'dire.php',
      data: {checkedbw: checkarr},
      dataType: 'json',
      success: function(response){
        //$('#response').text(JSON.stringify(response) );
        alert("Successfully created index files in the selected directories");
        location.reload();
      }
     });
    }else{
         alert("No directories selected to repair");
     }
   });
 });
 </script>
 
 <script>
  $(document).ready(function(){
   $('#donebtn').click(function(){
                if (document.getElementById('doneSelect').checked){
                $.ajax({
                type: "POST";
                url: 'dire.php',
                data: {done: doneSelect},
                contentType: "application/json",
                success: function(response){
                //$('#response').text(JSON.stringify(response) );
                //This willdelete the the script
      }
     });
                }else{
                    alert("Are you done? For installion purposes, we are exposing all your directories. ");
                }
   }
);
 });
 </script>
 
 <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

  <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
  
  <script>
  $( function() {
    $( "#accordion" ).accordion({

      collapsible: true, active: false 
    });
  </script>
  
  
  
 <script>
  function resizeIframe(obj) {
    obj.style.height = obj.contentWindow.document.documentElement.scrollHeight + 'px';
  }
</script>
</head>


<body>
<img src="https://www.ewahn.com/ewahn.png"  width="255" height="45">
<?php
    echo "<br>
        <center><fieldset>
        <legend>Setup Instructions</legend>
        <br>
        <r>The easy Ewahn setup page, will guide your through a three click procces, and then click that you are done. It is easy as that, yet extremely effective. 
        <br><br>
        <b>Step 1:</b><br>
        First we will analyse your root directories. We will display a list of all the directories, and then show the directories that do not have Index files. Directories without Index files are vulnerable to Directory Indexing. The vulnerability occurs as an attacker may have access to all the files present in the architecture of the web application. Depending on the files that are exposed this could lead to Sensitive Data exposer.
        <br><br>
        You can repair the vulnebility (if any) by selecting from three options: 
        <br>
        <b>a. Repair directory indexing and receive notification of future intrusion</b>. If you select you repair with this option, we will create an index file in the directories you select. Our script in the Index fille will notify you if anybody intrudes in any of these directory, or if a hacker scans the directory with any directory scanning tools.<br>
        <b>b. Repair directory indexing, receive notification of future intrusions and block intruding IP for the directory</b>. If you select you repair with this option, we will create an index file in the directories you select. Our script in the Index fille will notify you if anybody intrudes in any of these directory, or if a hacker scans the directory with any directory scanning tools, and block the scanning, or intruding IP from the accessing the specific directory.<br>
        <b>c. Repair directory indexing, receive notification of future intrusions and block intruding IP for the web application</b>. If you select you repair with this option, we will create an index file in the directories you select. Our script in the Index fille will notify you if anybody intrudes in any of these directory, or if a hacker scans the directory with any directory scanning tools, and block the scanning, or intruding IP from the accessing the web application.<br><br> You can combine the above given option by selecting and de-selecting options. <br>
        <br>
       
        <b>Step 2:</b><br>
        Hackers are constantly scanning websites and web applications for information, exposes information, hidden information, hidden directories etc. One of the most common scans are for directories and hidden directories. Hidden directories may contain files or information that a hacker can use against the web application. By creating honeypot directories Ewahn create a file inside the honeypot directory which will trigger a notification to you when a hacker scan the directory. In addition to the notification, our script will also block the hacker's IP from accessing your web appliction to stop the attack immediately. The hacker can change his/her IP address to resume the scan, but the new IP address will also be blocked as soon as the hacker scan a honeypot directory.
        <br><br>
        This page will prompt you to ask if you want to create honeypot directories. To create honeypot directorie, click Yes and continue. 
        We will create up to five honeypot directories at a time, and create an index file inside each directory. The Index file will contain our API script, which will send you a notification when the directory is scanned and will alsop block the hackers IP address. 
        <br><br>
        In the event that we try to create a directory which already exist, we will not create the directory or over ride any script inside your existing directory. 
        <br><br>
        You may run the honeypot directory script as many times as you want, each time it will create a maximun of 5 honeypot directories. 
        <br>
        <br>
        <b>Step 3:</b><br>
        When you are done, at the bottom of the page, where the page ask, if you are done, select yes and click continue
        <br><br>
        This will remove this file from your server. It is important to confirm that you are done so that this file can be removed, because this page display all your directories and which directories are vulnerable to Directory Indexing. If a hacker find this page, he/she will have information, you dont want them to have.
        </r>
        <br><br>
        </fieldset><center>
        
        

        <br><br><br>";
// Handle AJAX request (end)
echo '<center><fieldset><legend>Step 1: Directories analysis</legend><br>';
echo '<center><fieldset><legend>Directory list</legend>';
echo "<r><br>Directory analysis will check how many directories you have in the root directory and list them accordingly. This is just informational and no action is needed here.</r><br><br>";
echo "<center<table style='width: 90%'><tr></td>";

echo "<r>Your root directories are:</r><br><br>";
$base = $_SERVER["DOCUMENT_ROOT"];
$i = 1;
$ii = 1;
$directories = glob($base . '/*' , GLOB_ONLYDIR);
//
$dirs = array_filter(glob($base . '/*'), 'is_dir');
foreach($directories as $dir){
         echo "<r>$i . $dir</r><br>";
         $i++;
         
         
    }
    $count = $i - 1;
    echo "<br><r>" . "You have " . $count . " directories.</r>";
    $base = $_SERVER["DOCUMENT_ROOT"];
    
    echo "<br>";
    echo "</fieldset>";
    echo "<br>";
    echo "<br>";
    echo '<fieldset><legend>Directory Indexing analysis</legend>';
    echo "<r><br>Directory Indexing analysis will check how many directories does not have index files and list those in red, amongs the others. This is just informational and no action is needed here.</r><br><br>";
    foreach($dirs as $dir){
        if(file_exists($dir . "/index.php")) {
        echo "<r>Index file exist in $dir</r><br>";
        $i++;
    }
    else{
        echo "<r style='color: red'>Index file does not exist in $dir</r><br>";
    }
}
echo "</table>" ;
echo "<br>" ;
    echo "</fieldset>";
    echo "<br>";

?>
<button class="accordion">Repair directory indexing and receive notification of future intrusion</button>
<div class="panel">
   <br>
 <br>

<div style="font-size: 14px; color: grey; text-align: left"><font face="Verdana, Arial, Helvetica, sans-serif">This API script will only send a Directory Intrusion Notification (DIN).
<br><br>
<?php

    echo "<br>";
    echo '<fieldset><legend>Directory Indexing repair</legend>';
    echo "<r><br>Directory Indexing repair will assist you in repairing the directory indexing detected (if any). Below are the directories which currently does not have an Index file and are vulnerable to Directorie indexing. This means if a hacker opens a directory without an index file, all files will be listed in the specific directory. Hackers will use this information, and information found in files which should be hidden, to exploit and attack your web application.
    <br><br>
    By default all the vulnerable directories are selected, if you do not want any of the directories to have an index file, unselect the specific directory and click on the <i>Repair</i> button. The <i>Repair</i> button will create an index file in the selected directories. 
    </r><br><br>";
echo "<table style='width:100%' class='odd'>";
foreach($dirs as $dird){
        if(!file_exists($dird . "/index.php")) {
            echo "<tr><td style='width:50%'><r>" . $dird . "
            </r></td><td  width='50%'>
             <form method='post' action>
            <input type='checkbox' id='$dird' name='checknote' value='$dird' checked='true'>
            
            </form></td></tr><div id='response'></div>";
        $ii++;
    }
}


$counts = $ii-1;
if($counts >= 1){
    echo "<r style='color: red'>" . $counts . " Directories does not contain an Index file.</r><br><br>";
}else{
    echo "<r style='color: green'>" . $counts . " Directories does not contain an Index file. Well done !</r><br><br>";
}
echo "</td></tr></table>";
echo "<br>" ;
echo "<button type='button' id='repairbtn' style='float: right'>Click Me!</button>";


?>
<br><br><br><br><br><br>
</font>
</div>
</div>

<button class="accordion">Repair directory indexing, receive notification of future intrusions and block intruding IP for the directory</button>
<div class="panel">
   <br>
 <br>

<div style="font-size: 14px; color: grey; text-align: left"><font face="Verdana, Arial, Helvetica, sans-serif">This API script will send a Directory Intrusion Notification (DIN) and block the attacking IP for the directory where the attacker has intruded.
<br><br>
<?php


    echo '<fieldset><legend>Directory Indexing repair</legend>';
    echo "<r><br>Directory Indexing repair will assist you in repairing the directory indexing detected (if any). Below are the directories which currently does not have an Index file and are vulnerable to Directorie indexing. This means if a hacker opens a directory without an index file, all files will be listed in the specific directory. Hackers will use this information, and information found in files which should be hidden, to exploit and attack your web application.
    <br><br>
    By default all the vulnerable directories are selected, if you do not want any of the directories to have an index file, unselect the specific directory and click on the <i>Repair</i> button. The <i>Repair</i> button will create an index file in the selected directories. 
    </r><br><br>";
echo "<table style='width:100%' class='odd'>";
foreach($dirs as $dird){
        if(!file_exists($dird . "/index.php")) {
            echo "<tr><td style='width:50%'><r>" . $dird . "
            </r></td><td  width='50%'>
             <form method='post' action>
            <input type='checkbox' id='$dird' name='checkbs' value='$dird' checked='true'>
            
            </form></td></tr>";
        $ii++;
    }
}


if($counts >= 1){
    echo "<r style='color: red'>" . $counts . " Directories does not contain an Index file.</r><br><br>";
}else{
    echo "<r style='color: green'>" . $counts . " Directories does not contain an Index file. Well done !</r><br><br>";
}
echo "</td></tr></table>";
echo "<br>" ;
echo "<button type='button' id='repairbtnbd' style='float: right'>Click Me!</button>";
echo '</fieldset>';
?>
<br><br><br><br><br><br>
</font>
</div>
</div>
<button class="accordion">Repair directory indexing, receive notification of future intrusions and block intruding IP for the web application</button>
<div class="panel">
   <br>
 <br>

<div style="font-size: 14px; color: grey; text-align: left"><font face="Verdana, Arial, Helvetica, sans-serif">This API script will send a Directory Intrusion Notification (DIN) and block the scanning or attacking IP from access to the entire web application. You need to know how to remove a blocked IP. When you test this script, the IP address where you test from will be blocked. You will need to remove your IP from the block list. If you do not know how to perform this, contact your hosting provider for assistance before testing this script. 
<br><br>
<?php


    echo '<fieldset><legend>Directory Indexing repair</legend>';
    echo "<r><br>Directory Indexing repair will assist you in repairing the directory indexing detected (if any). Below are the directories which currently does not have an Index file and are vulnerable to Directorie indexing. This means if a hacker opens a directory without an index file, all files will be listed in the specific directory. Hackers will use this information, and information found in files which should be hidden, to exploit and attack your web application.
    <br><br>
    By default all the vulnerable directories are selected, if you do not want any of the directories to have an index file, unselect the specific directory and click on the <i>Repair</i> button. The <i>Repair</i> button will create an index file in the selected directories. 
    </r><br><br>";
echo "<table style='width:100%' class='odd'>";
foreach($dirs as $dird){
        if(!file_exists($dird . "/index.php")) {
            echo "<tr><td style='width:50%'><r>" . $dird . "
            </r></td><td  width='50%'>
             <form method='post' action>
            <input type='checkbox' id='$dird' name='checkbw' value='$dird' checked='true'>
            
            </form></td></tr><div id='response'></div>";
        $ii++;
    }
}


if($counts >= 1){
    echo "<r style='color: red'>" . $counts . " Directories does not contain an Index file.</r><br><br>";
}else{
    echo "<r style='color: green'>" . $counts . " Directories does not contain an Index file. Well done !</r><br><br>";
}

echo "</td></tr></table>";
echo "<br>" ;
echo "<button type='button' id='repairbtnbw' style='float: right'>Click Me!</button>";
echo '</fieldset>';
echo '</fieldset>';
?>
<br><br>
</font>
</div>
</div>
<script>
var acc = document.getElementsByClassName("accordion");
var i;

for (i = 0; i < acc.length; i++) {
  acc[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var panel = this.nextElementSibling;
    if (panel.style.maxHeight){
      panel.style.maxHeight = null;
    } else {
      panel.style.maxHeight = panel.scrollHeight + "px";
    } 
  });
}
</script>



<script>
    function detailAlert(){
    $( function() {
        $( "#Detail" ).dialog({
        resizable: false,
        draggable: false,
        dialogClass: 'typealert',
        height: "auto",
        width: 600,
        modal: true,
        buttons: {
        "Continue": function() {
          $(this).closest('.ui-dialog-content').dialog('close'); 
        }
      }
    });
  } );
     
    }
</script>


<script>
    function notDone(){
    $( function() {
        $( "#notDone" ).dialog({
        resizable: false,
        draggable: false,
        dialogClass: 'typealert',
        height: "auto",
        width: 600,
        modal: true,
        buttons: {
        "Continue": function() {
          $(this).closest('.ui-dialog-content').dialog('close'); 
        }
      }
    });
  } );
     
    }
</script>

<script>
    function userDone(){
    $( function() {
        $( "#userDone" ).dialog({
        resizable: false,
        draggable: false,
        dialogClass: 'typealert',
        height: "auto",
        width: 600,
        modal: true,
        buttons: {
        "Continue": function() {
          $(this).closest('.ui-dialog-content').dialog('close'); 
        }
      }
    });
  } );
     
    }
</script>

<script>
    function honeypotCreated(){
    $( function() {
        $( "#honeypotCreated" ).dialog({
        resizable: false,
        draggable: false,
        dialogClass: 'typealert',
        height: "auto",
        width: 600,
        modal: true,
        buttons: {
        "Continue": function() {
          location.reload();
        }
      }
    });
  } );
     
    }
</script>

<fieldset>
    <legend>Honeypot  directories set up</legend>
   <table class='none'>
       <tr class='none'>
           <td><r>If you select to create honeypot  directories, our system will create a maximum of 10 honeybot directories, with an index file to block the intruding IP address from accessing the web application.Do you want to create honeypot  directories?</r>
<br><br>
           <r>Do you want to create honeypot  directories?
                    </r>            <br><br>
           </td>
       </tr>
    </table>
    <table>
       <tr>
           <td style='width:20%'><r>Yes, continue</r><br><br><td><input type="radio" name='hpdirectory' value="Yes" id="checkhp"><br><br></td>
       </tr>    
              <tr>
           <td><r><button class='hpbtn' id="hpdirbtn">Continue</button></r></td>
       </tr>   
        </table> 
        
    
    </fieldset>
<script>
$('#checkhp').mouseup(function() {
  if ($(this).is(':checked')) {
    setTimeout(function() {
      $('#checkhp').prop('checked', false);
    }, 1)
  }
})
</script>


 <br><br> 
 <fieldset>
    <legend>
        Done
    </legend>
    <br><br>
    <r>Are you done?</r><br>
    <form action="#" method="post">
    <input type="radio" name='doneSelect' value="Done" id="doneSelect"><input type="radio" name='doneSelect' value="NotDone" id="doneSelectNo"><br><br><br><br>
    <button id="donebtn" class="donebtn">Done</button>
    </form>
    
 <script>
$('#doneSelect').mouseup(function() {
  if ($(this).is(':checked')) {
    setTimeout(function() {
      $('#doneSelect').prop('checked', false);
    }, 1)
  }else{
     userDone(); 
  }
})
</script>   

<script>
$('#doneSelectNo').mouseup(function() {
  if ($(this).is(':checked')) {
    setTimeout(function() {
      $('#doneSelectNo').prop('checked', false);
    }, 1)
  }else{
     //alert("Please finish the setup. For the security of your web application, this page will must be removed. ");  
     notDone();
  }
})
</script>   
    <br><br>
</fieldset>

<div id="overlay"><center><b style="font-family:Verdana, color: white, font-size:16px"><br><br><br><br><br><br></b></center><center><div id="loader" class="loader"></div></center></div>
<div id="Detail" class="dialog-confirm" title="Ewahn Easy Set-up.">
  <r><span></span> <br>This process is extremely important, and should only take a few minutes.<br><br>Read the setup instructions and confirm when you are done at the bottom of the page. When you are done this page will remove itself from your server. <br><br>
  <br></r>
</div> 
<div id="notDone" class="dialog-confirm" title="Please finish set up.">
  <r><span></span> <br>This process is extremely important, and should only take a few minutes.<br><br>Read the setup instructions and confirm when you are done at the bottom of the page. When you are done this page will remove itself from your server. <br><br>
  <br></r>
</div> 
<div id="userDone" class="dialog-confirm" title="This page will be removed.">
  <r><span></span> <br>For the security of your web application, this page will be removed. Click <i>Continue</i> and then click <i>Done</i>. <br><br>
  <br></r>
</div> 
<div id="honeypotCreated" class="dialog-confirm" title="Honeypot directories created.">
  <r><span></span> <br>Random honeypot directories was created. <br><br>For your privacy, we do not display the newly created directories here.<br><br>
  <br></r>
</div>
</body>
</html>