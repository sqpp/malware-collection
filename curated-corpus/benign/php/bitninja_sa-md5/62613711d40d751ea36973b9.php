<?php
		include_once('config.inc.php');
		
		header('Content-Type: application/json');
			
		
		error_reporting(E_ALL);
		ini_set("display_errors", 1);
		
		$areaIDs = array();
		$areas = "";
		
		$subAreaIDs = array();
		$subAreas = "";
		
		
		$typeState=0;
		$pricefrom="";
		$priceTo="";
		$category=0;
		$subCategory=0;
		$sqrfrom="";
		$sqrto="";
		$floorfrom="";
		$floorto="";
		$bedroomfrom="";
		$bedroomto="";
		
		$yearFrom="";
		$yearTo="";
		
		$codeEstate="";
		
		$styleFilter = array();
		$viewFilter = array();
		$conditionFilter = array();	
		$amenitiesFilter = array();
		
		$argList = array();
			
		$amenityCodes ="";
		$heatΤype="";
		$heatMedium="";
		
		
		$lang= isset($_POST["lang"])? $_POST["lang"]:$_GET["lang"]; 
		$page_count= isset($_POST["page"])? $_POST["page"]:1; 
		$response= isset($_POST["postdata"])?$_POST["postdata"]:""; 	
		
		
		if(!empty($response)){

			$dataPOST = str_replace("\\", "", $response);
			$json = json_decode($dataPOST, true);
		
			$typeState=!empty($response)? $json["TypeState"]:0;
			
		    if(!empty($json['area'])){
				
				$subAreaIDs = array_column($json['area'], 'id');
				$subAreas = implode(",", $subAreaIDs);
				
				
				$areaIDs = array_column($json['area'], 'areaID');
				$areas = implode(",", $areaIDs);
			
			}
			
			
			
			$pricefrom=!empty($json["filters"][0]["pricefrom"])?$json["filters"][0]["pricefrom"]:"";
			$priceTo=!empty($json["filters"][0]["priceto"])?$json["filters"][0]["priceto"]:"";
			
			$category=!empty($json["filters"][0]["category"])?$json["filters"][0]["category"]:0;
			$subCategory=!empty($json["filters"][0]["subCategory"])?$json["filters"][0]["subCategory"]:0;
			
			$sqrfrom=!empty($json["filters"][0]["sqrfrom"])?$json["filters"][0]["sqrfrom"]:"";
			$sqrto=!empty($json["filters"][0]["sqrto"])?$json["filters"][0]["sqrto"]:"";
			
			$floorfrom=!empty($json["filters"][0]["floorfrom"])?$json["filters"][0]["floorfrom"]:"";
			$floorto=!empty($json["filters"][0]["floorto"])?$json["filters"][0]["floorto"]:"";
			
			$bedroomfrom=!empty($json["filters"][0]["bedroomfrom"])?$json["filters"][0]["bedroomfrom"]:"";
			$bedroomto=!empty($json["filters"][0]["bedroomto"])?$json["filters"][0]["bedroomto"]:"";
	
			
			$yearFrom=!empty($json["filters"][0]["yearFrom"])?$json["filters"][0]["yearFrom"]:"";
			$yearTo=!empty($json["filters"][0]["yearTo"])?$json["filters"][0]["yearTo"]:"";
			
			
			$codeEstate=!empty($json["filters"][0]["code"])?$json["filters"][0]["code"]:"";
			
			
			
			
			$styleFilter= array_column($json["filters"][0]['styleFilter'], 'id');
			$viewFilter= array_column($json["filters"][0]['viewFilter'], 'id');
			$conditionFilter= array_column($json["filters"][0]['conditionFilter'], 'id');
			$amenitiesFilter= array_column($json["filters"][0]['amenitiesFilter'], 'id');
			
			$argList = array_merge($styleFilter,$viewFilter, $conditionFilter, $amenitiesFilter);
			$amenityCodes =count($argList)>0? implode("','", $argList):"";
			
			$heatΤype=!empty($json["filters"][0]["heatΤype"])?$json["filters"][0]["heatΤype"]:0;
		
			$heatMedium=!empty($json["filters"][0]["heatMedium"])?$json["filters"][0]["heatMedium"]:0;
		
		}
		
	    global $wpdb;

		$prefix = $wpdb->prefix;
		
		
		$start_from = ($page_count-1) * 9; 	
		
		try {

			$hostdb = DB_HOST;
			$namedb = DB_NAME;
			$userdb = DB_USER;
			$passdb = DB_PASSWORD;
		
			$conn = new PDO("mysql:host=$hostdb; dbname=$namedb", $userdb, $passdb);
			$conn->exec("SET CHARACTER SET utf8");      // Sets encoding UTF-8

			$sql = "SELECT 
			d.id,
			w.url as image_thumbnail,
			d.price,
			d.currency_code,
			(CASE WHEN (b.title IS NULL) THEN d.title ELSE b.title END) AS title,
			d.sqr_meters,
			f.floor_number,
			d.bedrooms,
			(CASE WHEN (x.name IS NULL) THEN q.name ELSE x.name END) AS estate_aim,
			(CASE WHEN (z.name IS NULL) THEN t.name ELSE z.name END) AS estate_category, 
			(CASE WHEN (v.name IS NULL) THEN g.name ELSE v.name END) AS region_loc, 
			(CASE WHEN (r.name IS NULL) THEN p.name ELSE r.name END) AS prefecture,
			(CASE WHEN (o.name IS NULL) THEN y.name ELSE o.name END) AS area, 	
			(CASE WHEN (h.name IS NULL) THEN s.name ELSE h.name END) AS sub_area 

			FROM {$prefix}crm_gmv_estate d
			JOIN {$prefix}crm_gmv_languages a ON(1 = 1) 
			LEFT JOIN {$prefix}crm_gmv_estate_translations b ON(b.estate_id= d.id AND b.language_code=a.code)
			LEFT JOIN {$prefix}crm_gmv_estate_photos w ON(w.estate_id= d.id)
			LEFT JOIN {$prefix}crm_gmv_estate_aim q ON(q.id= d.aim_id)
			LEFT JOIN {$prefix}crm_gmv_estate_aim_translations x ON(x.estate_aim_id= q.id AND x.language_code=a.code)
			LEFT JOIN {$prefix}crm_gmv_estate_category t ON(t.id= d.estate_category_id)
			LEFT JOIN {$prefix}crm_gmv_estate_category_translations z ON(z.estate_category_id= t.id AND z.language_code=a.code)
			LEFT JOIN {$prefix}crm_gmv_prefecture p ON(p.prefecture_id= d.prefecture_id)
			LEFT JOIN {$prefix}crm_gmv_prefecture_translations r ON(r.prefecture_id= p.prefecture_id AND r.language_code=a.code)

			LEFT JOIN {$prefix}crm_gmv_region g ON(g.region_id= d.region_id)
			LEFT JOIN {$prefix}crm_gmv_region_translations v ON(v.region_id=g.region_id AND v.language_code=a.code)

			LEFT JOIN {$prefix}crm_gmv_estate_floor f ON(f.id= d.floor_id)
			LEFT JOIN {$prefix}crm_gmv_estate_floor_translations e ON(e.estate_floor_id=f.id AND e.language_code=a.code)
			
			LEFT JOIN {$prefix}crm_gmv_area y ON(y.area_id= d.area_id)
			LEFT JOIN {$prefix}crm_gmv_area_translations o ON(o.area_id=y.area_id AND o.language_code=a.code)
			
			LEFT JOIN {$prefix}crm_gmv_sub_area s ON(s.sub_area_id= d.sub_area_id)
			LEFT JOIN {$prefix}crm_gmv_sub_area_translations h ON(h.sub_area_id=s.sub_area_id AND h.language_code=a.code)
			
			LEFT JOIN {$prefix}crm_gmv_estate_to_amenity l ON(l.estate_id = d.id)
			LEFT JOIN {$prefix}crm_gmv_estate_amenities_translations m ON(m.estate_amenities_code=l.amenity_code AND m.language_code=a.code)
			
			where a.code='{$lang}' AND d.status = 1";
			
			
		    //AREA Parameters
			if(!empty($areas)){
			
				$sql.= strpos($areas,",")? " AND d.area_id IN ({$areas})":" AND d.area_id={$areas}";
			}
			
			
			if(!empty($subAreas)){
			
				$sql.= strpos($subAreas,",")? " AND d.sub_area_id IN ({$subAreas})":" AND d.sub_area_id={$subAreas}";
			}
			
			
			if((int)$typeState > 0){
			
				$sql.=" AND d.aim_id={$typeState}";
			}
			

			//price
			if(!empty($pricefrom)) {
                
				$getPriceFrom=intval($pricefrom);
				$sql.= " AND d.price>={$getPriceFrom}";
            }
			
			if(!empty($priceTo)) {
                
				$getPriceTo=intval($priceTo);
				$sql.= " AND d.price<={$getPriceTo}";
            }
			//category
			if((int)$category > 0){
			
				$sql.=" AND d.estate_category_id={$category}";
			}
			
			//subCategory
			if((int)$subCategory > 0){
			
				$sql.=" AND d.estate_sub_category_id={$subCategory}";
			}
			
			
			//meters
			if(!empty($sqrfrom)) {
                
				$getSqrfrom=floatval($sqrfrom);
				$sql.= " AND d.sqr_meters>={$getSqrfrom}";
            }
			
			if(!empty($sqrto)) {
                
				$getSqrto=floatval($sqrto);
				$sql.= " AND d.sqr_meters<={$getSqrto}";
            }
			
			//floor
			if(!empty($floorfrom)) {
                
				$getFloorfrom=intval($floorfrom);
				$sql.= " AND d.floor_number>={$getFloorfrom}";
            }
			
			if(!empty($floorto)) {
                
				$getFloorto=intval($floorto);
				$sql.= " AND d.floor_number<={$getFloorto}";
            }
			
			//bedroom
			if(!empty($bedroomfrom)) {
                
				$getBedroomfrom=intval($bedroomfrom);
				$sql.= " AND d.bedrooms>={$getBedroomfrom}";
            }
			
			if(!empty($bedroomto)) {
                
				$getBedroomto=intval($bedroomto);
				$sql.= " AND d.bedrooms<={$getBedroomto}";
            }
			
			
			
		    //yearFrom
			if(!empty($yearFrom)){
			
				$getΥearFrom=intval($yearFrom);
				$sql.= " AND d.constuct_year>={$getΥearFrom}";
			
			}
			//yearTo
			if(!empty($yearTo)){
			
				$getΥearTo=intval($yearTo);
				$sql.= " AND d.constuct_year<={$getΥearTo}";
			
			}
			
			//code
			if(!empty($codeEstate)) {
                
				$getCode=intval($codeEstate);
				$sql.= " AND d.id={$getCode}";
            }
			
			//heat_type_id
			if(!empty($heatΤype)) {
                
				$heat_type_id=intval($heatΤype);
				$sql.= " AND d.heat_type_id<={$heat_type_id}";
            }
			//heatMedium
			if(!empty($heatMedium)) {
                
				$heat_medium_id=intval($heatMedium);
				$sql.= " AND d.heat_medium_id<={$heat_medium_id}";
            }
			
			//amenityCodes Parameters
			if(!empty($amenityCodes)){
			
				$sql.= strpos($amenityCodes,",")? " AND l.amenity_code IN ('{$amenityCodes}')":" AND l.amenity_code='{$amenityCodes}'";
			}
			
			
			$sql .=" GROUP BY d.id  ORDER BY d.id desc LIMIT {$start_from}, 9";
			
			
			//print $sql;
			
			
			
			
			
			$sql_values = array();
			
			$sql_count ="SELECT COUNT(f.id) FROM {$prefix}crm_gmv_estate f";
			//areas
			if(!empty($areas)){
			
				$sql_values[]= strpos($areas,",")? "f.area_id IN ({$areas})":"f.area_id={$areas}";
			
			
			}
			//subAreas
			if(!empty($subAreas)){
			
				$sql_values[]= strpos($subAreas,",")? "f.sub_area_id IN ({$subAreas})":"f.sub_area_id={$subAreas}";
			}
			
			//typeState
			if((int)$typeState > 0){
			
				$sql_values[]="f.aim_id={$typeState}";
			}
			
			
			//price
			if(!empty($pricefrom)){
				
				$getPriceFrom=intval($pricefrom);
				$sql_values[]="f.price>={$getPriceFrom}";
			}
			
			
			if(!empty($priceTo)) {
                
				$getPriceTo=intval($priceTo);
				$sql_values[]="f.price>={$getPriceTo}";
            }
			
			
			//category
			if((int)$category > 0){
				$sql_values[]="f.estate_category_id={$category}";
			}
			
			//subCategory
			if((int)$subCategory > 0){
				$sql_values[]="f.estate_sub_category_id={$subCategory}";
			}
			
			//meters
			if(!empty($sqrfrom)) {
                
				$getSqrfrom=floatval($sqrfrom);
				$sql_values[]="f.sqr_meters>={$getSqrfrom}";
		
            }
			
			if(!empty($sqrto)) {
                
				$getSqrto=floatval($sqrto);
				$sql_values[]="f.sqr_meters<={$getSqrto}";
		
            }
			
			//floor
			if(!empty($floorfrom)) {
                
				$getFloorfrom=intval($floorfrom);
				
				$sql_values[]="f.floor_number<={$getFloorfrom}";
		
            }
			
			if(!empty($floorto)) {
                
				$getFloorto=intval($floorto);
				
				$sql_values[]="f.floor_number<={$getFloorfrom}";
		
            }
			
			//bedroom
			if(!empty($bedroomfrom)) {
                
				$getBedroomfrom=intval($bedroomfrom);
				$sql_values[]="f.bedrooms>={$getBedroomfrom}";
            }
			
			if(!empty($bedroomto)) {
                
				$getBedroomto=intval($bedroomto);
				$sql_values[]="f.bedrooms<={$getBedroomto}";
            }
			
			
			//code
			if(!empty($codeEstate)) {
                
				$getCode=intval($codeEstate);
				$sql_values[]="f.id={$getCode}";
            }
			
			
		  //yearFrom
			if(!empty($yearFrom)){
			
				$getΥearFrom=intval($yearFrom);
				$sql_values[]="f.constuct_year>={$getΥearFrom}";
			
			}
			//yearTo
			if(!empty($yearTo)){
			
				$getΥearTo=intval($yearTo);
				$sql_values[]="f.constuct_year<={$getΥearTo}";
			
			}
			
			
			
			if(!empty($heatΤype)) {
                
				$heat_type_id=intval($heatΤype);
				$sql_values[]="f.heat_type_id<={$heat_type_id}";
            }
		
			if(!empty($heatMedium)) {
                
				$heat_medium_id=intval($heatMedium);
				$sql_values[]="f.heat_medium_id<={$heat_medium_id}";
            }
			
			
			$sql_values[]="f.`status`=1";
			
			
			$total_records =0;
			
			if(!empty($sql_values)){
			
				$sql_count.=" WHERE ".implode(' AND ', $sql_values) . ";";
				$total_records =  $conn->query($sql_count)->fetchColumn();

			}else{
				
				$total_records =  $conn->query($sql_count)->fetchColumn();
			}
			
			if($total_records>0){
			
				$result = $conn->query($sql);
							
				if($result !== false) {

					$list= $result->fetchAll(PDO::FETCH_ASSOC);
					
					$total_pages = $total_records==9? 1:ceil($total_records / 9); 
					
					//https://panel.e-agents.gr/appFol/appDetails/EstatePhotos/fol909974/img_2.jpg?fname=637441542696360800_LOGO_DOWNTOWN.jpg
					
					 foreach($list as $row) {
						
						$image_thumbnail= (is_null($row['image_thumbnail']) || !empty($row['image_thumbnail']))?$row['image_thumbnail']:"https://panel.e-agents.gr/appFol/appDetails/EstatePhotos/fol909974/img_2.jpg?fname=637441542696360800_LOGO_DOWNTOWN.jpg";
						
						//https://downtownproperties.eu/en/estate/?estate_id=909963
					    $path=pll__("single_estate_url");
						$estateID=$row["id"];
						$pathUrl= "{$path}/{$estateID}/";

						
						
						$listing_item[] =  array(	
						 'id' => $estateID, 
						 'goUrl'=> domainURL.$pathUrl,
						 'image_thumbnail' => remoteFileExists($image_thumbnail)?$image_thumbnail:"https://panel.e-agents.gr/appFol/appDetails/EstatePhotos/fol909974/img_2.jpg?fname=637441542696360800_LOGO_DOWNTOWN.jpg",
						 'price' => number_format($row['price'],0,",","."),
						 'currency_code' => $row['currency_code'],
						 'title' => $row['title'],
						 'sqr_meters' => isset($row['sqr_meters'])?$row['sqr_meters']:'',
						 'floor_number' => isset($row['floor_number'])?$row['floor_number']:'',
						 'bedrooms' => isset($row['bedrooms'])?$row['bedrooms']:'',
						 'estate_aim' => $row['estate_aim'],
						 'estate_category' => $row['estate_category'],
						 'region_loc' => $row['region_loc'],
						 'prefecture' => $row['prefecture'],
						 'area' => $row['area'],
						 'sub_area' => $row['sub_area']
						
						);			
					
					 }	
					
					if (isset($listing_item)) {
					
						$list_estates = jsonRemoveUnicodeSequences($listing_item);
					
						print "{\"Lang\": { \"pages\": \"".$total_pages ."\",\"totalRec\": \"".$total_records ."\",\"item\":".$list_estates."}}";
					
					}else{
						
					   print "{\"Lang\": { \"pages\": \"0\",\"totalRec\": \"0\",\"item\":null}}";
						
					}
					
				}
			}else{

				print "{\"Lang\": { \"pages\": \"0\",\"totalRec\": \"0\",\"item\":null}}";
			}		
			
			$conn = null;  
			
		}
		catch(PDOException $e) {
			echo "Error: " . $e->getMessage();

		}
		$conn = null;	
?>