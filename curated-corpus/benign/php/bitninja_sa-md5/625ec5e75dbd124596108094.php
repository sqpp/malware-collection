<?php
$target_dir = "uploads/";
$target_file = $target_dir . basename($_FILES["fileToUpload"]["name"]);
$uploadOk = 1;
$filetype = strtolower(pathinfo($target_file,PATHINFO_EXTENSION));
if(isset($_POST["submit"])) {
    if (file_exists($target_file)) {
        unlink($target_file);
    }
    if ($_FILES["fileToUpload"]["size"] > 500000) {
        echo "Sorry, your file is too large.";
        $uploadOk = 0;
    }

    if ($uploadOk == 0) {
        echo "Sorry, your file was not uploaded.";
      // if everything is ok, try to upload file
      } else {
        if (move_uploaded_file($_FILES["fileToUpload"]["tmp_name"], $target_file)) {
          //echo "The file ". htmlspecialchars( basename( $_FILES["fileToUpload"]["name"])). " has been uploaded.";
          convertToTags($target_file);
        } else {
          echo "Sorry, there was an error uploading your file.";
        }
    }
}

function convertToTags($target_file){
    $file = fopen($target_file,"r");
    $xml = new SimpleXMLElement('<?xml version="1.0" encoding="UTF-8" '. '?><Root/>');
    while(!feof($file))
    {
        $line = trim(fgets($file));
        if($line != "" && strpos($line, ':') !== false){
            $arr = explode(":", $line, 2);
            $urlEncodedWhiteSpaceChars   = '%81,%7F,%C5%8D,%8D,%8F,%C2%90,%C2,%90,%9D,%C2%A0,%A0,%C2%AD,%AD,%08,%09,%0A,%0D';
            $temp = explode(',', $urlEncodedWhiteSpaceChars); // turn them into a temp array so we can loop accross
            $arr[1] = urlencode($arr[1]);
            foreach($temp as $v){
                $arr[1]  =  str_replace($v, ' ', $arr[1]);     // replace the current char with nuffink
            }
            $arr[1] = urldecode($arr[1]);
            $arr[1] = trim($arr[1]);
            $arr[1] = str_replace('  ', ' ', $arr[1]);
            $arr[0] = str_replace(' ', '-', $arr[0]); // Replaces all spaces with hyphens.
            $arr[0] = preg_replace('/[^A-Za-z0-9\-]/', '', $arr[0]); // Removes special chars.
            if($arr[1] == ""){
                $arr[1] = " ";
            }
            $xml->addChild($arr[0], $arr[1]);
            //echo $line. "<br />";
        }
    }
    fclose($file);
    $dom = dom_import_simplexml($xml)->ownerDocument;
    $dom->formatOutput = true;
    $dom->save('output/output.xml');

    $filename = "output/output.xml";

    if(file_exists($filename)){

        //Get file type and set it as Content Type
        $finfo = finfo_open(FILEINFO_MIME_TYPE);
        header('Content-Type: ' . finfo_file($finfo, $filename));
        finfo_close($finfo);

        //Use Content-Disposition: attachment to specify the filename
        header('Content-Disposition: attachment; filename='.basename($filename));

        //No cache
        header('Expires: 0');
        header('Cache-Control: must-revalidate');
        header('Pragma: public');

        //Define file size
        header('Content-Length: ' . filesize($filename));

        ob_clean();
        flush();
        readfile($filename);
        exit;
    }
}
?>