<?php
require_once __DIR__ . "/../../../include/dbcommon.php";

use Base\{ArrayUtils, Utils as BaseUtils, Validations};
use BBPlanner\Constants\{BillingItemType, MovementTypes};
use BBPlanner\Entities\{MovementsServices, MovementVoice, ReservationsServices};

BaseUtils::executeCatchedScript(function () {
    Validations::validate($_POST, [
        "movementID" => Validations::IS_POSITIVE_INTEGER,
    ]);

    $movement = MovementsServices::get($_POST["movementID"]);

    $warnings = [];

    if ($movement->typeID === MovementTypes::SPECIFIC_VOICES) {
        $voices = $movement->getSpecificVoicesMovementVoices();

        $freeAmountMovementsNotDocumentedSubtractionsVoices = ArrayUtils::some($voices, function (MovementVoice $voice) {
            return $voice->typeID === BillingItemType::FREE_AMOUNT_MOVEMENT_SUBTRACTION && !$voice->getReference()->freeAmountMovementIsDocumented();
        });

        if ($freeAmountMovementsNotDocumentedSubtractionsVoices > 0) {
            $warnings[] = "Nel movimento sono presenti scorpori di movimenti a caparra non documentati, pertanto, non verranno indicati nel documento";
        }
    }

    return [
        "warnings" => $warnings,
        "customers" => ReservationsServices::getCustomers($movement->reservationID),
    ];
});
