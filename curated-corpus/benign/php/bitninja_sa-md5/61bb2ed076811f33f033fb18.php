
<?php

date_default_timezone_set('UTC');
$timestamp = date("d/m/Y H:i:s");
$getNextBlocksize = 8;

logText("***************************************  starting at $timestamp","a");

/* validate verify token needed for setting up web hook */ 
if (isset($_GET['hub_verify_token'])) { 
    if ($_GET['hub_verify_token'] === 'jellyfish&penguins') {
        echo $_GET['hub_challenge'];
    } else {
        logText( 'Invalid Verify Token: '.$_GET['hub_verify_token']);
    }
    exit;
}

if (isset($_GET['op']))
{
    $op = $_GET['op'];
    if ($op == "reactivate") reactivate();
    if ($op == "clearlog") clearlog($timestamp);
    exit;
}

/* receive and send messages */
$fbm = new fb_message();
logText($fbm->toString());
logText($fbm->raw_input);
if ($fbm->type == "NONE" || $fbm->type == "DELIVERY" || $fbm->type == "READ")
{
    logText("ignoring message ".$fbm->toString());

}
else
{
    $mysqli = dbConnect();
    logText("db connected");
    $user = getUserDetails($mysqli,$fbm->senderId);
    if ($fbm->type != "GEOLOCATION")
    {
        $fbm->location = $user['last_location'];
        $fbm->lat = $user['last_latitude'];
        $fbm->long = $user['last_longitude'];
    }
    $now = new DateTime();
    $then = new DateTime($user['last_contact']);
    $delta = $now->diff($then);
    //logText("getUserDetails: ". $delta->days." days ".$delta->h." hours ".$delta->i." minutes");
    
        logText ("message type is $fbm->type message: $fbm->message");
    
    if ($fbm->type == "GEOLOCATION")
    {
          $user['last_location'] = updateGeoLocation($mysqli, $fbm->senderId, $fbm->lat, $fbm->long);
          $fbm->location = $user['last_location'];
          $response = $fbm->nearestOrNewestResponse();
    }
    elseif ($fbm->type == "QUICKREPLY")
    {
        $first4 = substr( $fbm->message, 0, 4 );
        if ($fbm->message == "SAME LOCATION")
        {
          $response = $fbm->nearestOrNewestResponse();
        }
        elseif ($fbm->message == "NEAREST")
        {
            $response = $fbm->getNextNGeneric($mysqli, "NEAREST", $getNextBlocksize, array(0));
        }
        elseif ($fbm->message == "NEWEST")
        {
            $response = $fbm->getNextNGeneric($mysqli, "NEWEST", $getNextBlocksize, array($timestamp));
        }
        elseif($first4 === "BACK" || $first4 === "NEXT")
        {
            $mode = "NEAREST";
            $m = substr( $fbm->message, 5, 1 );
            if ($m == t) $mode = "NEWEST";
            
            $startArray = explode("|", substr( $fbm->message, 7));
            
            $response = $fbm->getNextNGeneric($mysqli, $mode, $getNextBlocksize, $startArray);
        }
        else 
        {
            $response = $fbm->echoResponse($user);
        }
    }  
    elseif ($fbm->type == "POSTBACK")
    {
          $response = $fbm->postbackResponse($user);
    }    
    elseif ($fbm->type == "MESSAGE")
    {
        if (strtolower(trim($fbm->message)) == "where")
        {
            $response = $fbm->shareLocationResponse();
        }
        elseif((strtolower(trim($fbm->message)) == "buttons"))
        {
            $response = $fbm->testButtonsResponse();
        }
        elseif((strtolower(trim($fbm->message)) == "urls"))
        {
            $response = $fbm->testURLsResponse();
        }
        elseif ($user['last_location'] == "")
        {
            $response = $fbm->shareLocationResponse();
        }
        elseif ($delta->days > 0 || $delta->h > 0 || $delta->i >= 0)
        {
            $response = $fbm->updateLocationResponse($user);
        }
        else
        {
            $response = $fbm->echoResponse($user);
        }
    }

    updateLastContact($mysqli, $user, $timestamp);
    //sendResponse(headerResponse());
    for ($i=0;$i<count($response);$i++)
    {
        sendResponse($response[$i]);
        sleep(2);
    }
}


    function logText($text,$mode="a")
    {
        $t = $text;
        $handle = fopen("fb_chatbot_responder.log",$mode);
        fwrite($handle, $t."\r\n");
        fflush($handle);
        fclose($handle);
    }
    
    function sendResponse($response)
    {
        $accessToken = getAccessToken();
        $ch = curl_init('https://graph.facebook.com/v2.8/me/messages?access_token='.$accessToken);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $response);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        $result = curl_exec($ch);
        $error = curl_error($ch);

        logText("json: $response");
        logText("cURL result: $result");
        logText("cURL error: $error");
        curl_close($ch);
    }
    
    function getUserDetails($mysqli, $userId)
    {
        $ud = array();
        $result = $mysqli->query("select * from user where id = '$userId'");
        if (mysqli_num_rows($result) > 0)
        {
            while ($row = $result->fetch_assoc())
            {
                $ud = $row;
            }
        }
        else
        {
            $json = getUserDetailsFromFB($userId);
            $fn = $json['first_name'];
            $ln = $json['last_name'];
            $gn = $json['gender'];
            $mysqli->query("insert into user (id, first_name, second_name, last_contact,state) values ('$userId','$fn','$ln',now(),'NORMAL')");
            $date = date("Y/m/d H:i:s");
            $ud = array("id"=>"$userId","first_name"=>"$fn","second_name"=>"$ln","last_contact"=>"$date","last_latitude"=>"","last_longitude"=>"","last_location"=>"","state"=>"NORMAL");
            logText("got details from facebook for $userId");

        }
        return $ud;
    }
    
    function getUserDetailsFromFB($userId)
    {
        $accessToken = getAccessToken();
        $url = "https://graph.facebook.com/v2.8/$userId?fields=first_name,last_name,gender&access_token=$accessToken";
        logText("url: $url");
        $ch = curl_init($url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
        $result = curl_exec($ch);
        $error = curl_error($ch);
        $json = json_decode($result, true);
        logText("call for user details");
        logText("cURL result: $result");
        logText("cURL error: $error");
        curl_close($ch);
        return $json;
    }
    
    function updateGeoLocation($mysqli, $id, $lat, $long)
    {
        $key = "AIzaSyB7FHmVpjk_RNMWs4jDzrxk-NqOOXjRHs4";
        $url = "https://maps.googleapis.com/maps/api/geocode/json?latlng=$lat,$long&key=$key";
        $response = callGoolgeAPI($url);
        $response_a = json_decode($response,true);
        $locality = $response_a['results'][1]['formatted_address'];
        $pos = strpos($locality, ", New Zealand");
        if (!$pos === false) 	$locality = substr($locality, 0, $pos);
        $mysqli->query("update user set last_contact = now(), last_latitude = '$lat', last_longitude = '$long',last_location = '$locality', state='NORMAL' where id = '$id'");
		return $locality;
    }
    
    function updateLastContact($mysqli, $user, $timestamp)
    {
        $mysqli->query("update user set last_contact = now() where id = '".$user['id']."'");
    }
    
    function getAccessToken()
    {
        return "EAAYBabQOu6kBANmErSc3rQTFLalHDn4t5gajif8ll23wDqKasFaZCyJC8a3SpJKDmCZCQFuuIh5MYNAvMY7iUbKf5Dp6Fge59ulzkd2z4ZA4ovhvZB8HNew7hhyWR8wky5hIIxWSfKrY48wQmSDXjMcMOHqxT8XaLWmGhjO2ngZDZD";
    }
    
    function dbConnect()
    {
        $mysqli = new mysqli("localhost", "flixn","" , "generalStore");
        if ($mysqli->connect_errno) {
            logText( "Failed to connect to MySQL: (" . $mysqli->connect_errno . ") " . $mysqli->connect_error);
        }
        return $mysqli;
    }
    
    Function callGoolgeAPI($url)
    {
	    $ch = curl_init();
	    curl_setopt($ch, CURLOPT_URL, $url);
	    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	    curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
	    curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
	    $response = curl_exec($ch);
	    $error = curl_error ($ch);
	    curl_close($ch);
    	return $response;
    }
    
        
    function reactivate () 
    {
        $sender = '1425997940804726';
        $response = '{"recipient":{"id":"' . $sender . '"},"message":{"text":"reactivation message"}}';
        sendResponse($response);
        echo "reactivate message sent to PSID: $sender";
    }
    
    function clearlog($timestamp) 
    {
        logText("Clearing log ************ at $timestamp","w");
        echo "Log Cleared at $timestamp";
    }
    
    class fb_message
    {
       public $senderId = "";
       public $message = "";
       public $lat = "";
       public $long = "";
       public $location = "";
       public $payload = "";
       public $type = "NONE";
       public $raw_input = "";
        
       function  __construct()
        {
            $this->raw_input = file_get_contents('php://input');
            //logText($raw_input);
            $input = json_decode($this->raw_input, true);
            if (isset($input['entry'][0]['messaging'][0]['sender']['id'])) 
            {
                $this->senderId = $input['entry'][0]['messaging'][0]['sender']['id']; 
            }
            if (isset($input['entry'][0]['messaging'][0]['delivery']))
            {
                $this->type = "DELIVERY";
            }
            elseif (isset($input['entry'][0]['messaging'][0]['read']))
            {
                $this->type = "READ";
            }
            elseif (isset($input['entry'][0]['messaging'][0]['postback']))
            {
                $this->type = "POSTBACK";
                $this->payload = $input['entry'][0]['messaging'][0]['postback']['payload'];
            }
            elseif (isset($input['entry'][0]['messaging'][0]['message']))
            {
                if (isset($input['entry'][0]['messaging'][0]['message']['quick_reply']['payload']))
                {
                    $this->type = "QUICKREPLY";
                    $this->message = $input['entry'][0]['messaging'][0]['message']['quick_reply']['payload'];
                }
                elseif (isset($input['entry'][0]['messaging'][0]['message']['text']))
                {
                    $this->type = "MESSAGE";
                    $this->message = $input['entry'][0]['messaging'][0]['message']['text'];
                }
                elseif (isset($input['entry'][0]['messaging'][0]['message']['attachments'][0]['payload']['coordinates']))
                {
                    $this->type = "GEOLOCATION";
                    $this->lat = $input['entry'][0]['messaging'][0]['message']['attachments'][0]['payload']['coordinates']['lat'];
                    $this->long = $input['entry'][0]['messaging'][0]['message']['attachments'][0]['payload']['coordinates']['long'];
                }
            }
        }
        
        function toString()
        {
              return "message type: $this->type senderId: $this->senderId messageText: $this->message lat: $this->lat long: $this->long";
        }
        
        function shareLocationResponse()
        {
            $r = '{"recipient":{"id":"' . $this->senderId . '"},  "message":{"text":"Please share your location:","quick_replies":[{"content_type":"location",}]}}';
            return array($r);
        }
        
        //function updateLocationResponse()
        //{
        //    $r = '{"recipient":{"id":"' . $this->senderId . '"},  "message":{"text":"Please update your location:","quick_replies":[{"content_type":"location",}]}}';
        //    return array($r);
        //}        
        function confirmLocationResponse()
        {
             $r = '{"recipient":{"id":"' . $this->senderId . '"},"message":{"text":"you are in ' .$this->location. '"}}';
             return array($r);
        }
        
        function echoResponse($user)
        {
            global $timestamp;
            $r = '{"recipient":{"id":"' . $this->senderId . '"},"message":{"text":"Hi '.$user['first_name']. ' ' . $user['second_name']. ' You were in '.$user['last_location'] . ' when you said '. $this->message . ' "}}';
            return array($r);
        }
    
        function updateLocationResponse($user)
        {
           $r = '{"recipient":{"id":"' . $this->senderId . '"},
                    "message":{
                                "text":"Hi, are you still in ' . $user['last_location'] . '?",
                                "quick_replies":[
                                                    {
                                                        "content_type":"text",
                                                        "title":"Still Here",
                                                        "payload":"SAME LOCATION"
                                                    },
                                                    {
                                                        "content_type":"location"
                                                    }
                                                ]
                                }
                 }';
            return array($r);
        }
        
        function nearestOrNewestResponse()
        {
           $r = '{"recipient":{"id":"' . $this->senderId . '"},
                    "message":{
                                "text":"Would you like to see offers nearest '.$this->location.' or newest offers first?",
                                "quick_replies":[
                                                    {
                                                        "content_type":"text",
                                                        "title":"Nearest",
                                                        "payload":"NEAREST"
                                                    },
                                                    {
                                                        "content_type":"text",
                                                        "title":"Newest",
                                                        "payload":"NEWEST"
                                                    }
                                                ]
                                }
                 }';
            return array($r);
        }
        
        function testButtonsResponse()
        {
           $r = '{"recipient":{"id":"' . $this->senderId . '"},
                    "message":{
                                "text":"Please choose:",
                                "quick_replies":[
                                                    {
                                                        "content_type":"text",
                                                        "title":"Nearest",
                                                        "payload":"NEAREST BUTTON SELECTED"
                                                    },
                                                    {
                                                        "content_type":"text",
                                                        "title":"Newest",
                                                        "payload":"NEWEST BUTTON SELECTED"
                                                    },
                                                    {
                                                        "content_type":"text",
                                                        "title":"Category",
                                                        "payload":"CATEGORY BUTTON SELECTED"
                                                    },
                                                    {
                                                        "content_type":"text",
                                                        "title":"No more than 20 characters",
                                                        "payload":"LONG BUTTON SELECTED"
                                                    }
                                                ]
                                }
                 }';
            return array($r);
        }
        
        function nextOrStartOverResponse()
        {
             $r = '{"recipient":{"id":"' . $this->senderId . '"},"message":{"text":"nextOrStartOverResponse"}}';
             return array($r);
        }
        
        function testURLsResponse()
        {
             $r = '{"recipient":{"id":"' . $this->senderId . '"},
                    "message":{ "attachment":{"type":"template","payload":{"template_type":"button","text":"What do you want to do next?","buttons":
                        [
                            {"type":"web_url","url":"https://www.etsy.com","title":"Show Website"},
                            {"type":"postback","title":"Start Chatting","payload":"What is your point?"}
                        ]}}}}';
                    
                    
            return array($r);       
        }
        
        function postbackResponse($user)
        {
            $r = '{"recipient":{"id":"' . $this->senderId . '"},"message":{"text":"Hi '.$user['first_name']. ' ' . $user['second_name']. ' ' .$this->payload . '"}}';
            return array($r);
        }
        
        function getNextNList($mysqli, $mode)
        {
            $sql = "SELECT trading_name, b.id, street_number, street_name, suburb, city, o.id as oid, o.category, description, ".
                   "( 6371 * acos ( cos ( radians(-36.865193) ) * cos( lat_rad ) * cos( long_rad - radians(174.7576606) ) + sin ( radians(-36.865193) ) * sin( lat_rad ) ) ) AS distance ".
                   "FROM business b inner join offer o on b.id = o.business_id HAVING distance < 30 ORDER BY distance LIMIT 0 , 4";
            //logText($sql);

            $result = $mysqli->query($sql);
            if (mysqli_num_rows($result) > 1)
            {
                $comma = "";
                $r = '{"recipient":{"id":"'.$this->senderId.'"},"message":{"attachment":{"type": "template","payload":{"template_type":"list","top_element_style":"compact","elements":[';
                while ($row = $result->fetch_assoc())
                {
                    $distance = $row['distance'];
                    if ($distance >= 1.0)
                    {
                        $distance = " " . round($distance, 1)."km";
                    }
                    else 
                    {
                        $distance = " " . round($distance * 100, 0) * 10 ."m"; 
                    }
                    $r.= $comma.'{"title": "'.str_replace ("\"","'", $row['trading_name']).$distance.'",
                                  "image_url": "https://magicfinder-flixn.c9users.io/shop-icon.png",
                                   "subtitle": "'.str_replace ("\"","'", $row['description']).'",
                                   "default_action": {
                                   "type": "web_url",
                                   "url": "https://magicfinder-flixn.c9users.io/default.html",
                                   "messenger_extensions": false,
                                   "webview_height_ratio": "tall"

                                 },
                                 "buttons": 
                                 [
                                  {
                                    "title": "Buy",
                                    "type": "web_url",
                                    "url": "https://magicfinder-flixn.c9users.io/default.html",
                                    "messenger_extensions": false,
                                    "webview_height_ratio": "tall"
                      
                                  }
                                 ]                
                                }';
                    
                    
                    
                    //{"text":"'.$text.'","quick_replies":[{"content_type":"text","title":"More", "payload":"MORE"}]}}';
                    $comma = ",";
                }
                $r .= '], "buttons": 
                          [
                            {
                                "title": "View More",
                                "type": "postback",
                                "payload": "payload"                        
                            }
                          ]
                        }}}}';
            }

            else
            {
                 $r = '{"recipient":{"id":"' . $this->senderId . '"},"message":{"text":"No more offers"}}';
            }
            return array($r);
        }
        
        
        function getNextNGeneric($mysqli, $mode, $blocksize, $startArray)
        {
             logText("entering getNextNGeneric startArray ".$startArray);
            
            for ($i=0; $i<count($startArray)-1; $i++)
            {
                logText("getNextNGeneric startArray[$i] ".$startArray[$i]);
            }
            
            $rNav = "";
            $limit = $blocksize + 1;
            $order_by = "distance";
            $startClause = "distance >= ".end($startArray);
            $nextPayload = "NEXTd";
            $backPayload = "BACKd";
            
            if($mode == NEWEST)
            {
                $order_by = "refresh_date_time desc";
                $startClause = "refresh_date_time >= '".end($startArray)."'";
                $nextPayload = "NEXTt";
                $backPayload = "BACKt";
            }
            
            $nextButton = false;
            

            if (count($startArray) > 1)
            {
                $backButton = true;
                for ($i=0; $i<count($startArray)-1; $i++)
                {
                    $backPayload .= "|" . $startArray[$i];
                }
            }
            
            $sql = "SELECT trading_name, b.id, street_number, street_name, suburb, city, o.image_url as image, o.id as oid, o.category, description, ".
                   "( 6371 * acos ( cos ( radians($this->lat) ) * cos( lat_rad ) * cos( long_rad - radians($this->long) ) + sin ( radians($this->lat) ) * sin( lat_rad ) ) ) AS distance ".
                   "FROM business b inner join offer o on b.id = o.business_id HAVING distance < 30 and $startClause ".
                   "ORDER BY $order_by LIMIT 0 , $limit";
            logText($sql);

            $result = $mysqli->query($sql);
            
            if (mysqli_num_rows($result) >0)
            {
                $comma = "";
                $r = '{"recipient":{"id":"'.$this->senderId.'"},
                        "message":{"attachment":{"type": "template","payload":{"template_type":"generic","elements":[';
                $rcount = 1;
                while ($row = $result->fetch_assoc())
                {
                    $distance = $row['distance'];
                    if ($distance >= 1.0)
                    {
                        $distance = " " . round($distance, 1)."km";
                    }
                    else 
                    {
                        $distance = " " . round($distance * 100, 0) * 10 ."m"; 
                    }
                    if ($rcount < $limit)
                    {
                        $r.= $comma.'{"title": "'.str_replace ("\"","'", $row['trading_name']).$distance.'",
                                  "image_url": "https://magicfinder-flixn.c9users.io/images/'.$row['image'].'",
                                   "subtitle": "'.str_replace ("\"","'", $row['description']).'",
                                   "default_action": {
                                    "type": "web_url",
                                    "url": "https://magicfinder-flixn.c9users.io/details.php?x='.$row['oid'].'&y='.$this->senderId.'",
                                    "messenger_extensions": false,
                                    "webview_height_ratio": "tall"
                                    },
                                    "buttons": 
                                    [
                                        {
                                            "type":"phone_number",
                                            "title":"Call Now",
                                            "payload":"0272741914"
                                        }
                                    ]}';
                    }
                    else
                    {
                        $nextButton = true;
                        if($mode == "NEWEST")
                        {
                            $startArray[] = $row['refresh_date_time'];
                            $nextPayload = "NEXTt";
                        }
                        if($mode == "NEAREST")
                        {
                            $startArray[] = $row['distance'];
                            $nextPayload = "NEXTd";
                        }
                        for ($i;$i<count($startArray);$i++)
                        {
                            $nextPayload .= "|".$startArray[$i];
                        }
                        
                    }
                    
                    $comma = ",";
                    $rcount++;
                }

                $r .= ']}}}}';
            }

                        
                        // $sf = "";
                        // if ($startfrom != "") $sf =$startfrom."|";
                        // $rNav = '{"recipient":{"id":"' . $this->senderId . '"},
                        //           "message":{
                        //           "text":"Please choose:",
                        //           "quick_replies":[
                        //                             {
                        //                                 "content_type":"text",
                        //                                 "title":"Back",
                        //                                 "payload":"BACK"
                        //                             },
                        //                             {
                        //                                 "content_type":"text",
                        //                                 "title":"Next",
                        //                                 "payload":"NEXT|'.$sf.$row['distance'].'"
                        //                             }
                        //                         ]
                        //             }
                        //         }';
            
            logText("r: $r");
            if ($nextButton || $backButton)
            {
                 $rNav = '{"recipient":{"id":"' . $this->senderId . '"},
                           "message":{"text":"Please choose:","quick_replies":[';
                if ($backButton)
                {
                  $rNav .=  '{"content_type":"text","title":"Back","payload":"'.$backPayload.'"}';
                  if ($nextButton) $rNav .= ",";
                }
                if ($nextButton)
                {
                    $rNav .=  '{"content_type":"text","title":"Next","payload":"'.$nextPayload.'"}';
                }
                $rNav .= ']}}';
            }
            
            logText("rNav: $rNav");
            
            if ($rNav == "")
            {
                $r = array($r);
            }
            else 
            {
                $r = array($r,$rNav);
            }
            return $r;
        }
        
        function headerResponse()
        {
            $url = "https://magicfinder-flixn.c9users.io/images/nzrobots01.jpg";
            $r = '{"recipient": {"id":"'.$this->senderId.'"},"message": {"attachment": {"type": "image","payload": {"url": "'.$url.'" }}}}';
            return array($r);
        }
    }    
    
?>