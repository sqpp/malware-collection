<?php

if (!defined('QA_VERSION')) { 
	require_once '../../qa-include/qa-base.php';
}
require_once QA_INCLUDE_DIR.'qa-app-options.php';
require_once QA_INCLUDE_DIR.'qa-app-users.php';
require_once QA_PLUGIN_DIR.'notification-pro/qa-np.php';
require_once QA_PLUGIN_DIR.'notification-pro/qa-np-user.php';

if($_SERVER["REQUEST_METHOD"] != "POST"){
	header('Location: ../../');
	exit;
}

if(qa_is_logged_in()) {
	$qa_np_ajax = new qa_np_ajax();
	$qa_np_ajax->response();
} else {
	header("Content-Type: text/html; charset=UTF-8");
	echo '';
}
	
class qa_np_ajax {
	var $np;
	var $uc;
	var $enable;
	var $saveperiod;
	var $mode;
	var $userid;
		
	//function qa_np_ajax() {
	/*poshtibani az php7
	Deprecated: Methods with the same name as their class will not be constructors in a future version of PHP; qa_np_user has a deprecated constructor in /home/ircircle/public_html/Math/qa-plugin/notification-pro/qa-np-user.php on line 13*/
	public function __construct() {
		$this->np = new qa_np();
		if(qa_np::installed()) {
			$this->uc = new qa_np_user();
			$this->enable = (int)$this->np->opt(qa_np::ENABLE);
			$this->saveperiod = (int)$this->np->opt(qa_np::AE_SAVE_PERIOD);
			$this->mode = $_POST['mode'];
			$this->userid = qa_get_logged_in_userid();
		}
		
		header("Content-Type: text/html; charset=UTF-8");
	}
	function response() {
		if(qa_np::installed()) {
			if ($this->enable) {
				switch ($this->mode) {
				case 'notices':
					$count = $this->uc->new_notification_count($this->userid, @$_POST['newestid'], @$_POST['isnotify']);
					if($count != 0)
						echo $this->uc->notification_count($this->userid, @$_POST['isnotify']);
					break;
				case 'allnotices':
					echo $this->uc->notification_count($this->userid, 'all');
					break;
				case 'content':
					echo $this->uc->make_nc_window(@$_POST['isnotify'], true);
					break;
				case 'notified':
					$this->uc->watched_user_notice($this->userid, @$_POST['isnotify']);
					break;
				case 'readed':
					$this->uc->readed_user_notice($this->userid, @$_POST['id'], @$_POST['isnotify']);
					break;
				case 'addnotices':
					echo $this->uc->notification_contents('win', 0, @$_POST['isnotify'], @$_POST['oldestid'], false);
					break;
				case 'delete':
					$this->uc->delete_user_notice($this->userid, @$_POST['id'], @$_POST['isnotify']);
					break;
				}
			}
		}
	}
}