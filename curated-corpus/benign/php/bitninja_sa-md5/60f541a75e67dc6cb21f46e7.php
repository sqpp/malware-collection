<?php
// including database connection file 
include('connection.php');
include('new_functions.php');


// create table column array that match with database table column name 
$columns = array( 
	0=> 'id',
	1=> 'SS',
	2=> 'bull_no',
	3=> 'birth',
	4=>	'category',
	5=>	'breed',
	6=>	'Name',
	7=>	'Dam_weight',
	8=> 'fat',
	9=> 'sire_no',
	10=> 'sire_dame',
	11=> 'sire_daughters_yield',
	12=> 'breeding_value',
	13=> 'star_value',
	14=> 'view_more',
);
	
//total rows to be display in table
$limit 	= $_POST['length'];
// starting point 
$start	= $_POST['start'];
// get selected sorting column name 
$order_col 	= $columns[$_POST['order'][0]['column']];
// get order direction 
$dir 	= $_POST['order'][0]['dir'];
// datatable default search;
$search = $_POST['search']['value']; 

// Custome search field
$breed = $_POST['breed'];
$star_value = $_POST['star_value'];
$ss = $_POST['ss'];

$query_param='';
#checking default search and creating query (exclude join date and Position column because they have seaprate custome filter code below)
if(!empty($search)){
	$query_param="and (`breed` like '%$search%' or `bull_no` like  '%$search%' or `ss` like  '%$search%' or `dam_weight` like  '%$search%') ";
}

#checking  from, to input field "join date" and creating query
//if(!empty($joinDateFrom) && !empty($joinDateTo)){
//	$query_param.="and join_data between '$joinDateFrom' and '$joinDateTo' ";
//}

#checking "position" field and creating query
if(!empty($breed)){
	$query_param.="and breed like '$breed' ";
}

/*if(!empty($bull_type)){
	$query_param.="and bull_type like '%$bull_type%' ";
}*/

if(!empty($star_value)){
	$query_param.="and star_value like '$star_value' ";
}

if(!empty($ss)){
	$query_param.="and ss like '$ss' ";
}



// total record count 
$total_record  = getAllRecordsCount($conn);

// getting records
$get_records=getAllRecordsArray($conn, $start, $limit, $order_col, $dir, $query_param);

//get filtered count
$totalFiltered = getAllRecordsCount($conn, $query_param);

$data = array();
// check 
if(!empty($get_records))
{	
	// arranging records as per table column sequence
	foreach ($get_records as $record)
	{
		// match table columns with database column name 
		$nestedData[$columns[0]] = $record[$columns[0]];
		$nestedData[$columns[1]] = $record[$columns[1]];
		$nestedData[$columns[2]] = $record[$columns[2]];
		$nestedData[$columns[3]] = $record[$columns[3]];
		$nestedData[$columns[4]] = $record[$columns[4]];
		$nestedData[$columns[5]] = $record[$columns[5]];
		$nestedData[$columns[6]] = $record[$columns[6]];
		$nestedData[$columns[7]] = $record[$columns[7]];
		$nestedData[$columns[8]] = $record[$columns[8]];
		$nestedData[$columns[9]] = $record[$columns[9]];
		$nestedData[$columns[10]] = $record[$columns[10]];
		$nestedData[$columns[11]] = $record[$columns[11]];
		$nestedData[$columns[12]] = $record[$columns[12]];
		$nestedData[$columns[13]] = $record[$columns[13]];
		$nestedData[$columns[14]] = $record[$columns[14]];
	
		
		$data[] = $nestedData;

	}
}

$json_data = array(
	"draw"            => intval($_POST['draw']),  
	"recordsTotal"    => intval($total_record),  // total record count
	"recordsFiltered" => intval($totalFiltered), // total filtered record count
	"data"            => $data   // data in array 
	);

echo json_encode($json_data); // encode array to json
?>