<?php
$telegram_ip_ranges = [
['lower' => '149.154.160.0', 'upper' => '149.154.175.255'], // literally 149.154.160.0/20
['lower' => '91.108.4.0',    'upper' => '91.108.7.255'],    // literally 91.108.4.0/22
];

$ip_dec = (float) sprintf("%u", ip2long($_SERVER['REMOTE_ADDR']));
$ok=false;

foreach ($telegram_ip_ranges as $telegram_ip_range) if (!$ok) {
    // Make sure the IP is valid.
    $lower_dec = (float) sprintf("%u", ip2long($telegram_ip_range['lower']));
    $upper_dec = (float) sprintf("%u", ip2long($telegram_ip_range['upper']));
    if ($ip_dec >= $lower_dec and $ip_dec <= $upper_dec) $ok=true;
}
if (!$ok) die("No spam ");
//======================================================();
$timeee = $ttti - 60;
if(is_file("time") or file_get_contents("time") <= $timeee){
	file_put_contents("time",$ttti);
}
error_reporting(0);
date_default_timezone_set('Asia/Tehran');

//----Config----//
flush();
$list = json_decode(file_get_contents("data/list.json"), true);
$listDev = isset($list['sudo']) ? $list['sudo'] : [];
$Dev = array_merge([1897974308], $listDev);
$channel = "https://t.me/KinkzzboT?startgroup=add";
$chann = file_get_contents("ch.txt");
define('API_KEY','1799787216:AAHiDueAUZrSb3PDUY10LjGAN8ji_RVjfIE');
//----------Function "bot" By [Ramin Rabiee]
function bot($method,$datas=[],$js=false){
    $url = "https://api.telegram.org/bot".API_KEY."/".$method;
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, $datas);
    $res = curl_exec($ch);
    return json_decode($res,$js);
}
//----------Function 
function SendMessage($chat_id, $text, $mode = null, $reply = null, $keyboard = null, $disable_web_page_preview = false){
return bot('SendMessage',[
	'chat_id'=>$chat_id,
	'text'=>$text,
	'parse_mode'=>$mode,
	'reply_to_message_id'=>$reply,
	'disable_web_page_preview'=>$disable_web_page_preview,
	'reply_markup'=>$keyboard
	]);
}
function SM($chatID)
{
	$tab = json_decode(file_get_contents("../../lib/Jsons/tab.json"),true);
	if($tab['type'] == 'photo')
	{
		bot('sendphoto',['chat_id'=>$chatID,'photo'=>$tab["msgid"],'caption'=>$tab["text"],'reply_markup'=>$tab['reply_markup']]);
	}
	else if($tab['type'] == 'file')
	{
		bot('sendDocument',['chat_id'=>$chatID,'document'=>$tab["msgid"],'caption'=>$tab["text"],'reply_markup'=>$tab['reply_markup']]);
	}
	else if($tab['type'] == 'video')
	{
		bot('SendVideo',['chat_id'=>$chatID,'video'=>$tab["msgid"],'caption'=>$tab["text"],'reply_markup'=>$tab['reply_markup']]);
	}
	else if($tab['type'] == 'music')
	{
		bot('SendAudio',['chat_id'=>$chatID,'audio'=>$tab["msgid"],'caption'=>$tab["text"],'reply_markup'=>$tab['reply_markup']]);
	}
	else if($tab['type'] == 'sticker')
	{
		bot('SendSticker',['chat_id'=>$chatID,'sticker'=>$tab["msgid"],'caption'=>$tab["text"],'reply_markup'=>$tab['reply_markup']]);
	}
	else if($tab['type'] == 'voice')
	{
		bot('SendVoice',['chat_id'=>$chatID,'voice'=>$tab["msgid"],'caption'=>$tab["text"],'reply_markup'=>$tab['reply_markup']]);
	}
	else
	{
		if($tab['reply_markup'] != null)
		{
			bot('SendMessage',['chat_id'=>$chatID,'text'=>$tab['text'],'reply_markup'=>$tab['reply_markup']]);
		}
		else
		{
			bot('SendMessage',['chat_id'=>$chatID,'text'=>$tab['text']]);
		}
	}
}
function EditMessageText($chat_id, $message_id, $text, $mode = null, $keyboard = null, $disable_web_page_preview = null){
bot('EditMessageText',[
    'chat_id'=>$chat_id,
    'message_id'=>$message_id,
    'text'=>$text,
    'parse_mode'=>$mode,
    'reply_markup'=>$keyboard,
    'disable_web_page_preview'=>$disable_web_page_preview
    ]);
}
function EditKeyboard($chat_id, $message_id, $keyboard){
bot('EditMessageReplyMarkup',[
    'chat_id'=>$chat_id,
    'message_id'=>$message_id,
	'reply_markup'=>$keyboard
    ]);
}
function AnswerCallbackQuery($callback_query_id, $text, $show_alert = false){
bot('AnswerCallbackQuery',[
    'callback_query_id'=>$callback_query_id,
    'text'=>$text,
	'show_alert'=>$show_alert
    ]);
}
function ForwardMessage($chat_id, $from_chat, $message_id){
bot('ForwardMessage',[
	'chat_id'=>$chat_id,
	'from_chat_id'=>$from_chat,
	'message_id'=>$message_id
	]);
}
function SendPhoto($chat_id, $photo, $caption, $reply = null){
bot('SendPhoto',[
	'chat_id'=>$chat_id,
	'photo'=>$photo,
	'caption'=>$caption,
	'reply_to_message_id'=>$reply
	]);
}
function SendAudio($chat_id, $audio, $caption = null){
	bot('SendAudio',[
	'chat_id'=>$chat_id,
	'audio'=>$audio,
	'caption'=>$caption
	]);
}
function SendDocument($chat_id, $document, $caption = null, $reply = null){
bot('SendDocument',[
	'chat_id'=>$chat_id,
	'document'=>$document,
	'caption'=>$caption,
	'reply_to_message_id'=>$reply
	]);
}
function SendSticker($chat_id, $sticker, $reply = null){
bot('SendSticker',[
	'chat_id'=>$chat_id,
	'sticker'=>$sticker,
	'reply_to_message_id'=>$reply
	]);
}
function SendVideo($chat_id, $video, $caption = null, $reply = null){
bot('SendVideo',[
	'chat_id'=>$chat_id,
	'video'=>$video,
	'caption'=>$caption,
	'reply_to_message_id'=>$reply
	]);
}
function SendVoice($chat_id, $voice, $caption = null){
bot('SendVoice',[
	'chat_id'=>$chat_id,
	'voice'=>$voice,
	'caption'=>$caption
	]);
}
function DeleteMessage($chat_id, $msgid){
bot('DeleteMessage',[
	'chat_id'=>$chat_id,
	'message_id'=>$msgid
	]);
}
function Kick($chat_id, $id){
bot('KickChatMember',[
	'chat_id'=>$chat_id,
	'user_id'=>$id
	]);
bot('UnbanChatMember',[
	'chat_id'=>$chat_id,
	'user_id'=>$id
	]);
}
function Ban($chat_id, $id){
bot('KickChatMember',[
	'chat_id'=>$chat_id,
	'user_id'=>$id
	]);
}
function UnBan($chat_id, $id){
bot('UnbanChatMember',[
	'chat_id'=>$chat_id,
	'user_id'=>$id
	]);
}
function KickAll($from_id){
    foreach(scandir("data") as $value){
        Kick($value, $from_id);
    }
}
function RestrictMember($chat_id, $user_id, $until_date = null){
bot('RestrictChatMember',[
    'chat_id'=>$chat_id,
    'user_id'=>$user_id,
    'until_date'=>$until_date,
    'can_post_messages'=>false
    ]);
}
function UnRestrictMember($chat_id, $user_id){
bot('RestrictChatMember',[
    'chat_id'=>$chat_id,
    'user_id'=>$user_id,
    'can_post_messages'=>true,
    'can_add_web_page_previews'=>true,
    'can_send_other_messages'=>true,
    'can_send_media_messages'=>true
    ]);
}
function LeaveChat($chat_id){
    bot('LeaveChat',[
    'chat_id'=>$chat_id
    ]);
}
function GetCreator($chat_id){
    $get =bot('getChatAdministrators',['chat_id'=>$chat_id],true);
    foreach ($get['result'] as $key){
        if ($key['status'] == 'creator'){
            return $key['user']['id'];
        }
    }
}
function GetAdmins($chat_id){
	$get =bot('getChatAdministrators',['chat_id'=>$chat_id],true)['result'];
	$list = [];
	foreach ($get as $key){
		if ($key['status'] == 'administrator'){
		    array_push($list, $key['user']['id']);
		}
	}
	return $list;
}
function isModerate($chat_id, $user_id, $set){
    global $Dev;
	$get =bot('getChatMember',
       ['chat_id'=>$chat_id,
       'user_id'=>$user_id],true);
	$ranko = $get['result']['status'];
	if($ranko == 'creator' | $ranko == 'administrator' | in_array($user_id, $Dev) | in_array($user_id, $set['modlist'])){
		return true;
	}
}
function isCreator($chat_id, $user_id){
    global $Dev;

	$ranko = bot('getChatMember',[
'chat_id'=>$chat_id,'user_id'=>$user_id],true)['result']['status'];
	if($ranko == 'creator' | in_array($user_id, $Dev)){
		return true;
	}else{
	    return false;
	}
}
function GetChat($chat_id){
    return bot('GetChat',['chat_id'=>$chat_id]);
}
function GetMe(){
    return bot('GetMe',[]);
}
$BotID = Bot('GetMe',[])->result->username;
function DeleteFolder($path){
    if($handle=opendir($path)){
        while(false!==($file=readdir($handle))){
            if($file<>"." AND $file<>".."){
                if(is_file($path.'/'.$file)){
                    @unlink($path.'/'.$file); 
                }
            if(is_dir($path.'/'.$file)){
                deletefolder($path.'/'.$file); 
                @rmdir($path.'/'.$file); 
            }
          }
        }
    }
}
function zip($source, $destination){
    if (!extension_loaded('zip') || !file_exists($source)) {
        return false;
    }

    $zip = new ZipArchive();
    if (!$zip->open($destination, ZIPARCHIVE::CREATE)) {
        return false;
    }

    $source = str_replace('\\', '/', realpath($source));

    if (is_dir($source) === true) {
        $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($source), RecursiveIteratorIterator::SELF_FIRST);

        foreach ($files as $file) {
            $file = str_replace('\\', '/', $file);

            // Ignore "." and ".." folders
            if (in_array(substr($file, strrpos($file, '/')+1), array('.', '..'))) {
                continue;
            }               

            $file = realpath($file);

            if (is_dir($file) === true) {
                $zip->addEmptyDir(str_replace($source . '/', '', $file . '/'));
            } elseif (is_file($file) === true) {
                $zip->addFromString(str_replace($source . '/', '', $file), file_get_contents($file));
            }
        }
    } elseif (is_file($source) === true) {
        $zip->addFromString(basename($source), file_get_contents($source));
    }

    return $zip->close();
}

  
//----------Other Function By [Ramin Rabiee]
function Download($link, $path){
    $file = fopen($link, 'r') or die("Can't Open Url !");
    file_put_contents($path, $file);
    fclose($file);
    return is_file($path);
 }
function getIdMention($update){
    $entities = $update['message']['entities'];
    foreach($entities as $key => $value){
        if($entities[$key]['type'] == 'text_mention'){
            return $entities[$key]['user']['id'];
        }
    }
}
function MarkDown($str){
    return str_replace(["_","`","*","[","]"], null, $str);
}
function CheckFilter($input, $list){
    foreach($list as $key => $value){
        $input = preg_replace('/[^a-zضصثقفغعهخحجشسیبلآاٵاءأإتنمکگظطژزرذدپوچ\s]/sui', null, $input);
        $input = preg_replace('/(.)\1+/sui', '$1', $input);
        $input = strtolower($input);
        $input = trim($input);
        $filter = strtolower($value);
        if(stripos($input, $filter) !== false){
            return true;
        }
    }
}
function CheckLock($lock){
    $lock = str_replace("yes", "✓ فعال", $lock);
    $lock = str_replace("no", "× غیرفعال", $lock);
    return $lock;
}
function CheckMode($str){
	$mode = str_replace("kick", "👞 اخراج", $str);
	$mode = str_replace("silent", "🔇 بی صدا", $mode);
	return $mode;
}
function pingDomain($domain){
    $starttime = microtime(true);
    $file = fsockopen($domain, 80, $errno, $errstr, 10);
    $stoptime = microtime(true);
    $status = 0;

    if($file){
        fclose($file);
        $status = ($stoptime - $starttime) * 1000;
        $status = floor($status);
    }else{
        $status = -1;  // Site is down
    }
    return $status;
}
//----------Variables By [Ramin Rabiee]
//----Updates----//
$getup = file_get_contents('php://input');
$update = json_decode($getup);
$up = json_decode($getup, true);
//----Exit From TimeOut----//
if(isset($up['message']) and strtotime('-10 Minutes') > $up['message']['date']){
	exit();
}
//----DataBase----//
$dataBase = json_decode(file_get_contents("data/data.json"), true);
//----Message----//
if(isset($update->message)){
    $message = $update->message;
    $text = $message->text;
    $caption = $message->caption;
    $photo = $message->photo;
    $video = $message->video;
    $sticker = $message->sticker;
    $document = $message->document;
    $video_note = $message->video_note;
    $audio = $message->audio;
    $voice = $message->voice;
    $location = $message->location;
    $contact = $message->contact;
    $game = $message->game;
    $forward = $message->forward_from;
    $forward_id =     $message->reply_to_message->forward_from->id;
    $forward_from = $message->forward_from_chat;
    $forward_from_id = $message->forward_from_chat->id;
    $reply = $message->reply_to_message;
    $reply_id = $message->reply_to_message->from->id;
    $reply_msgid = $message->reply_to_message->message_id;
    $reply_forward = $message->reply_to_message->forward_from->id;
    $newchatmember = $message->new_chat_member;
    $newchatmemberuser = $message->new_chat_member->username;
    $chat_id = $message->chat->id;
    $from_id = $message->from->id;
    $first_name = $message->from->first_name;
    $last_name = $message->from->last_name;
    $user_name = $message->from->username;
    $message_id = $message->message_id;
    $tc = $message->chat->type;
    $title = $message->chat->title;
    //----Json----//
    $setting = json_decode(file_get_contents("data/$chat_id/settings.json"), true);
    //----Rank----//
    $stats = isModerate($chat_id, $from_id, $setting);
}
//----CallBack----//
if(isset($update->callback_query)){
    $cllid = $update->callback_query->id;
    $data = $update->callback_query->data;
    $fromid = $update->callback_query->from->id;
    $chatid = $update->callback_query->message->chat->id;
    $msgid = $update->callback_query->message->message_id;
    $clltc = $update->callback_query->message->chat->type;
    $clltitle = $update->callback_query->message->chat->title;
    $clltext = $update->callback_query->message->text;
    $callfirst = $update->callback_query->from->first_name;
    $calluser = $update->callback_query->from->username;
    //----Json----//
    $setting = json_decode(file_get_contents("data/$chatid/settings.json"), true);
    //----Rank----//
    $stats = isModerate($chatid, $fromid, $setting);
}
//----EditedMessage----//
if(isset($update->edited_message)){
    $edit = $update->edited_message;
    $edittext = $edit->text;
    $editcaption = $edit->caption;
    $edit_chatid = $edit->chat->id;
    $edit_fromid = $edit->from->id;
    $edit_msgid = $edit->message_id;
    //----Json----//
    $setting = json_decode(file_get_contents("data/$edit_chatid/settings.json"), true);
    //----Rank----//
    $stats = isModerate($edit_chatid, $edit_fromid, $setting);
}
//----CheckBanAll----//
if($from_id and in_array($from_id, $dataBase['banall'])){
    DeleteMessage($chat_id, $message_id);
    Kick($chat_id, $from_id);
    exit();
}
//----LoadPlugins----//
$this_tc = isset($tc) ? $tc : $clltc;
if($this_tc == 'private'){
    include ('other/Private.php');
}
include ('other/MsgCheck.php');
$this_chat = isset($chat_id) ? $chat_id : $chatid;
if(file_exists ("data/$this_chat/settings.json")){

    if($stats == true){
        include ('other/SuperGroup.php');
    }
    if(isCreator($chat_id, $from_id) == true and $tc == 'supergroup'){
        include ('other/Creator.php');
    }
}
$this_id = isset($from_id) ? $from_id : $fromid;
if(in_array($this_id, $Dev) || isCreator($chat_id, $this_id) == true){
    include ('other/Developer.php');
}
include ('other/Fun.php');
//------------------------------------------------------------------
$list = json_decode(file_get_contents("data/list.json"), true);
if(!in_array($from_id, $list['user']) and $tc == 'private') {
    $list['user'] = isset($list['user']) ? $list['user'] : array();
    array_push($list['user'], $chat_id);
    file_put_contents("data/list.json",json_encode($list));
}
if(!in_array($chat_id, $list['group']) and $tc == 'supergroup') {
    $list['group'] = isset($list['group']) ? $list['group'] : array();
    array_push($list['group'], $chat_id);
    file_put_contents("data/list.json",json_encode($list));
}
//------------------------------------------------------------------
$scan = scandir("data");
foreach($scan as $value){
    $setting = json_decode(file_get_contents("data/$value/settings.json"), true);
    if($setting['autolock']['stats'] == "yes"){
        date_default_timezone_set('Asia/Tehran');
        if($setting['autolock']['start'] <= date('H:i') and $setting['autolock']['end'] > date('H:i') and $setting['locks']['all'] == "no"){
            $setting['locks']['all'] = 'yes';
            file_put_contents("data/$value/settings.json",json_encode($setting));
            $end = $setting['autolock']['end'];
			SendMessage($value, "■ قفل خودکار گروه فعال شد و گروه تا ساعت *$end* بسته می باشد!", 'MarkDown');
        }
        elseif($setting['autolock']['end'] <= date('H:i') and $setting['autolock']['start'] < date('H:i') and $setting['locks']['all'] == "yes"){
            $setting['locks']['all'] = 'no';
            file_put_contents("data/$value/settings.json",json_encode($setting));
			SendMessage($value, "■ قفل خودکار خاموش شد و گروه باز شد، کاربران می توانند به فعالیت خود ادامه بدهند.", 'MarkDown');
        }
    }
	
}
//------------------------------------------------------------------
if(!is_dir('data')) mkdir('data');
unlink('error_log');
?>
