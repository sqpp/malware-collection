<?php
	define('DS', DIRECTORY_SEPARATOR);
	define('ROOT', dirname(dirname(dirname(dirname(__FILE__)))));
	
	foreach($_POST as $key=>$value){
		$_POST[$key] = htmlentities($value, ENT_QUOTES, 'UTF-8');
	}
	foreach($_GET as $key=>$value){
		$_GET[$key] = htmlentities($value, ENT_QUOTES, 'UTF-8');
	}
	
	require_once (ROOT . DS . 'library' . DS . 'bootstrap.php');
	
	switch($_POST['search']){
		case	'main':
				doMainSearch();
				break;
		case	'searchDoctor':
				searchDoctor();
				break;
		case	'reservelistsSearch':
				reservelistsSearch();
				break;
		case	'schedulelistsSearch':
				schedulelistsSearch();
				break;
		case	'clinicStaffListsSearch':
				clinicStaffListsSearch();
				break;
		case	'newsListSearch':
				newsListSearch();
				break;
		case	'newsTypeListSearch':
				newsTypeListSearch();
				break;
		case	'insuranceCompanyListSearch':
				insuranceCompanyListSearch();
				break;
		case	'insuranceTypeListSearch':
				insuranceTypeListSearch();
				break;
		case	'insuranceContractListSearch':
				insuranceContractListSearch();
				break;
		case	'workgroupListSearch':
				workgroupListSearch();
				break;
		case	'servicetypeListSearch':
				servicetypeListSearch();
				break;
		case	'shiftListSearch':
				shiftListSearch();
				break;
		case	'drugListSearch':
				drugListSearch();
				break;
		case	'quickMenuManageSearch':
				quickMenuManageSearch();
				break;
		case	'questionsListSearch':
				questionsListSearch();
				break;
		case	'doctorPageSearch':
				doctorPageSearch();
				break;
		default :
			// if action is not defined or unknown move to main page
			tools::redirectLink('index.php');
	}
	
	/**
	 * send values of search form in main page and echo return result of query
	 */
	function doMainSearch()
	{
		$where = array();
		$isInsurance = false;
		
		if(!validate::isEmpty(trim($_POST['doctorName'])))
			$where['concat(firstname," ",family)']['like'] = '%'.$_POST['doctorName'].'%';
		if($_POST['specialtytype'])
			$where['specialtyTypeIdRef']['='] = $_POST['specialtytype'];
		if($_POST['scientificclass'])
			$where['scientificClassIdRef']['='] = $_POST['scientificclass'];
		if($_POST['state'])
			$where['stateIdRef']['='] = $_POST['state'];
		if($_POST['city'])
			$where['clinic.cityIdRef']['='] = $_POST['city'];
		if(!validate::isEmpty(trim($_POST['gender'])))
			$where['gender']['='] = $_POST['gender'];
		if(!validate::isEmpty(trim($_POST['insuranceCompany']))){
			$where['insurancecompany.name']['like'] = '%'.$_POST['insuranceCompany'].'%';
			$isInsurance = true;
		}
		if(!validate::isEmpty(trim($_POST['insuranceType']))){
			$where['insurancetype.name']['like'] = '%'.$_POST['insuranceType'].'%';
			$isInsurance = true;
		}
		if(!isset($_POST['page']) || empty($_POST['page']))
			$_POST['page'] = '1';

		$searchController = new searchController();
		echo $searchController->doMainSearch($where, $isInsurance, $_POST['page']);
	}
	
	function searchDoctor()
	{
		$where = array();
		$where['concat(firstname," ",family)']['like'] = '%'.$_POST['doctorName'].'%';
		
		$searchController = new searchController();
		echo $searchController->searchDoctorContent($where);
	}
	
	function reservelistsSearch()
	{
		$contentController = new contentController();
		$searchController = new searchController();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(!isset($_POST['tabId']) || empty($_POST['tabId']))
			$_POST['tabId'] = 'today';
		
		$searchController->setSearchValues($_POST);
		
		$totalNumRows = $searchController->reservelistsSearchContent($pageNum, true, $howLimit, $_POST['tabId']);
		$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
		$reservelist = $searchController->reservelistsSearchContent($pageNum, false, $howLimit, $_POST['tabId']);

		if(is_array($reservelist) && count($reservelist) > 0){
			$edit = $contentController ->contentPermission('ویرایش نوبت');
			$delete = $contentController ->contentPermission('حذف نوبت');
			$absent = $contentController ->contentPermission('غایب');
			$active = $contentController ->contentPermission('حضور');
			$copy = $contentController ->contentPermission('کپی نوبت');
            $continue = $contentController ->contentPermission('ادامه درمان');
            $transport = $contentController ->contentPermission('انتقال نوبت');
			$visit = $contentController ->contentPermission('انتقال به ویزیت');
		}
		
		$today = 'style="background-color : inherit"';
		$visited = 'style="background-color : inherit"';
		$canceled = 'style="background-color : inherit"';
		$all = 'style="background-color : inherit"';
		
		if($_POST['tabId'] == 'today')
			$today = 'class="selected"';
		else if($_POST['tabId'] == 'visited')
			$visited = 'class="selected"';
		else if($_POST['tabId'] == 'canceled')
			$canceled = 'class="selected"';
		else
			$all = 'class="selected"';
		$tabId = $_POST['tabId'];
		
		$functionPaging = 'reservelistsSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'reservelists.php');
	}
	
	function schedulelistsSearch()
	{
		$howLimit = $_SESSION['recordsInPage'];
		$searchController = new searchController();
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(!isset($_POST['tabId']) || empty($_POST['tabId']))
			$_POST['tabId'] = 'now';
		
		$searchController->setSearchValues($_POST);
		
		echo $searchController->reservingSearchContent($pageNum, $howLimit, $_POST['tabId']);
	}
	
	function clinicStaffListsSearch()
	{
		$searchController = new searchController();
		$howLimit = $_SESSION['recordsInPage'];
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		echo $searchController->clinicStaffSearchContent($pageNum, $howLimit, $searchValue);
	}
	
	function newsListSearch()
	{
		$searchController = new searchController();
		$contentController = new contentController();
		$doctor = array();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		if($_SESSION['isDoctor']){
			$totalNumRows = $searchController ->newsListSearchContent($_SESSION['workinginformationId'], $pageNum, true, $howLimit, $searchValue);
			$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
			$newsList = $searchController ->newsListSearchContent($_SESSION['workinginformationId'], $pageNum, false, $howLimit, $searchValue);
			if(is_array($newsList) && count($newsList) > 0){
				$edit = $contentController ->contentPermission('ویرایش اطلاعیه');
				$delete = $contentController ->contentPermission('حذف اطلاعیه');
			}
		}
		else {
			$where = array();
			$where['name']['like'] =  'اطلاعیه ها';
			$where['workinginformationIdRef']['='] =  $_SESSION['workinginformationId'];
			$from = '((workinginformation inner join doctorPermission on(doctorIdRef = id)) inner join menu on(menu.id = menuIdRef)) inner join staff on(staff.id = staffIdRef)';
			$doctor = $contentController->select('workinginformation.id as id, firstname, family', $from, $where, false, '', 'custom');
			
			$totalNumRows = $searchController ->newsListSearchContent($doctor[0]['id'], $pageNum, true, $howLimit, $searchValue);
			$totalPage = ceil(intval($totalNumRows) / $howLimit);
			
			$newsList = $searchController ->newsListSearchContent($doctor[0]['id'], $pageNum, false, $howLimit, $searchValue);
			if(is_array($newsList) && count($newsList) > 0){
				$edit = $contentController ->contentDoctorPermission($doctor[0]['id'], 'ویرایش اطلاعیه');
				$delete = $contentController ->contentDoctorPermission($doctor[0]['id'], 'حذف اطلاعیه');
			}
		}
		
		$functionPaging = 'newsListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'newsList.php');
	}
	
	function newsTypeListSearch()
	{
		$searchController = new searchController();
		$contentController = new contentController();
		$doctor = array();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		if($_SESSION['isDoctor']){
			$totalNumRows = $searchController ->newsTypeListSearchContent($_SESSION['workinginformationId'], $pageNum, true, $howLimit, $searchValue);
			$totalPage = ceil(intval($totalNumRows) / $howLimit);
			
			$newsTypeList = $searchController ->newsTypeListSearchContent($_SESSION['workinginformationId'], $pageNum, false, $howLimit, $searchValue);
			if(is_array($newsTypeList) && count($newsTypeList) > 0){
				$edit = $contentController ->contentPermission('ویرایش انواع اطلاعیه');
				$delete = $contentController ->contentPermission('حذف انواع اطلاعیه');
			}
		}
		else {
			$where = array();
			$where['name']['like'] =  'انواع اطلاعیه';
			$where['workinginformationIdRef']['='] =  $_SESSION['workinginformationId'];
			$from = '((workinginformation inner join doctorPermission on(doctorIdRef = id)) inner join menu on(menu.id = menuIdRef)) inner join staff on(staff.id = staffIdRef)';
			$doctor = $contentController->select('workinginformation.id as id, firstname, family', $from, $where, false, '', 'custom');
			
			$totalNumRows = $searchController ->newsTypeListSearchContent($doctor[0]['id'], $pageNum, true, $howLimit, $searchValue);
			$totalPage = ceil(intval($totalNumRows) / $howLimit);
			
			$newsTypeList = $searchController ->newsTypeListSearchContent($doctor[0]['id'], $pageNum, false, $howLimit, $searchValue);
			if(is_array($newsTypeList) && count($newsTypeList) > 0){
				$edit = $contentController ->contentDoctorPermission($doctor[0]['id'], 'ویرایش انواع اطلاعیه');
				$delete = $contentController ->contentDoctorPermission($doctor[0]['id'], 'حذف انواع اطلاعیه');
			}
		}
		
		$functionPaging = 'newsTypeListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'newsTypeList.php');
	}
	
	function insuranceCompanyListSearch()
	{
		$searchController = new searchController();
		$contentController = new contentController();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		$totalNumRows = $searchController -> insuranceCompanyListSearchContent($pageNum, true, $howLimit, $searchValue);
		$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
		$insuranceCompanyList = $searchController ->insuranceCompanyListSearchContent($pageNum, false, $howLimit, $searchValue);
		if(is_array($insuranceCompanyList) && count($insuranceCompanyList) > 0){
			$edit = $contentController ->contentPermission('ویرایش شرکت بیمه');
			$delete = $contentController ->contentPermission('حذف شرکت بیمه');
		}
		
		$functionPaging = 'insuranceCompanyListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'insurancecompanylist.php');
	}
	
	function insuranceTypeListSearch()
	{
		$searchController = new searchController();
		$contentController = new contentController();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		$totalNumRows = $searchController ->insuranceTypeListSearchContent($pageNum, true, $howLimit, $searchValue);
		$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
		$insuranceTypeList = $searchController ->insuranceTypeListSearchContent($pageNum, false, $howLimit, $searchValue);
		if(is_array($insuranceTypeList) && count($insuranceTypeList) > 0){
			$edit = $contentController ->contentPermission('ویرایش نوع بیمه');
			$delete = $contentController ->contentPermission('حذف نوع بیمه');
		}
		
		$functionPaging = 'insuranceTypeListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'insurancetypelist.php');
	}
	
	function insuranceContractListSearch()
	{
		$searchController = new searchController();
		$contentController = new contentController();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		$totalNumRows = $searchController ->insuranceContractSearchContent($pageNum, true, $howLimit, $searchValue);
		$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
		$insuranceContractList = $searchController ->insuranceContractSearchContent($pageNum, false, $howLimit, $searchValue);
		if(is_array($insuranceContractList) && count($insuranceContractList) > 0){
			$edit = $contentController ->contentPermission('ویرایش قرارداد بیمه');
			$delete = $contentController ->contentPermission('حذف قرارداد بیمه');
		}
		
		$functionPaging = 'insuranceContractListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'insurancecontractlist.php');
	}
	
	function workgroupListSearch()
	{
		$searchController = new searchController();
		$contentController = new contentController();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		$totalNumRows = $searchController ->workgroupListSearchContent($pageNum, true, $howLimit, $searchValue);
		$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
		$workgroupList = $searchController ->workgroupListSearchContent($pageNum, false, $howLimit, $searchValue);
		if(is_array($workgroupList) && count($workgroupList) > 0){
			$edit = $contentController ->contentPermission('ویرایش گروه کاری');
			$delete = $contentController ->contentPermission('حذف گروه کاری');
		}
		
		$functionPaging = 'workgroupListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'workgroupList.php');
	}
	
	function servicetypeListSearch()
	{
		$searchController = new searchController();
		$contentController = new contentController();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		$totalNumRows = $searchController ->servicetypeListSearchContent($pageNum, true, $howLimit, $searchValue);
		$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
		$servicetypeList = $searchController ->servicetypeListSearchContent($pageNum, false, $howLimit, $searchValue);
		if(is_array($servicetypeList) && count($servicetypeList) > 0){
			$edit = $contentController ->contentPermission('ویرایش خدمت');
			$delete = $contentController ->contentPermission('حذف خدمت');
		}
		
		$functionPaging = 'servicetypeListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'servicetypeList.php');
	}
	
	function shiftListSearch()
	{
		$searchController = new searchController();
		$contentController = new contentController();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		$totalNumRows = $searchController ->shiftListSearchContent($pageNum, true, $howLimit, $searchValue);
		$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
		$shiftList = $searchController ->shiftListSearchContent($pageNum, false, $howLimit, $searchValue);
		if(is_array($shiftList) && count($shiftList) > 0){
			$edit = $contentController ->contentPermission('ویرایش شیفت');
			$delete = $contentController ->contentPermission('حذف شیفت');
		}
		
		$functionPaging = 'shiftListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'shiftList.php');
	}
	
	function drugListSearch()
	{
		$searchController = new searchController();
		$contentController = new contentController();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		$totalNumRows = $searchController ->drugListSearchContent($pageNum, true, $howLimit, $searchValue);
		$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
		$drugList = $searchController ->drugListSearchContent($pageNum, false, $howLimit, $searchValue);
		if(is_array($drugList) && count($drugList) > 0){
			$edit = $contentController ->contentPermission('ویرایش دارو');
			$delete = $contentController ->contentPermission('حذف دارو');
		}
		
		$functionPaging = 'drugListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'drugList.php');
	}
	
	function quickMenuManageSearch()
	{
		$searchController = new searchController();
		$howLimit = $_SESSION['recordsInPage'];
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
		
		echo $searchController->quickMenuSearchContent($pageNum, $howLimit, $searchValue);
	}
	
	function questionsListSearch()
	{
		$searchController = new searchController();
		//$contentController = new contentController();
		$howLimit = $_SESSION['recordsInPage'];	// howLimit = records in a page
		$pageNum = intval($_POST['page']);
		if($_POST['howLimit'] != 'default' && $_POST['howLimit'] != NULL && !empty($_POST['howLimit']))
			$howLimit = intval($_POST['howLimit']);
		if(!isset($_POST['tabId']) || empty($_POST['tabId']))
			$_POST['tabId'] = 'private';
		if(isset($_POST['searchValue']))
			$searchValue = $_POST['searchValue'];
		else
			$searchValue = '';
			
		$totalNumRows = $searchController ->questionsListSearchContent($pageNum, true, $howLimit, $_POST['tabId'], $searchValue);
		$totalPage = ceil(intval($totalNumRows) / $howLimit);
		
		$questionsList = $searchController ->questionsListSearchContent($pageNum, false, $howLimit, $_POST['tabId'], $searchValue);
		//$edit = $contentController ->contentPermission('ویرایش جواب سوال');
		
		$private = 'style="background-color : inherit"';
		$public = 'style="background-color : inherit"';
		$answered = 'style="background-color : inherit"';
		
		if($_POST['tabId'] == 'private')
			$private = 'style="background-color : #90a8b7"';
		else if($_POST['tabId'] == 'public')
			$public = 'style="background-color : #90a8b7"';
		else if($_POST['tabId'] == 'answered')
			$answered = 'style="background-color : #90a8b7"';
		$tabId = $_POST['tabId'];
		
		$functionPaging = 'questionsListSearch';
		require (ROOT . DS . 'application' . DS . 'views' . DS . 'admin' . DS . (!empty($_SESSION['template'])?$_SESSION['template']:'default') . DS . 'questionsList.php');
	}
	
	function doctorPageSearch(){
		$searchController = new searchController();
		
		$reserveShowDay = '';
		$reserveDay = '';
		$reserveDeActiveDay = '';
		
		$where = array();
		$where['id'] = $_POST['clinicId'];
		$reserveSetting = $searchController->select('clinic.reserveShowDay, clinic.reserveDay, clinic.reserveDeActiveDay, clinic.id as clinicId, clinic.type as clinicType, clinic.showUnActiveList', 'clinic', $where);
		
		if($reserveSetting[0]['reserveShowDay'] != 0)
			$reserveShowDay = date('Y-m-d', strtotime("+".$reserveSetting[0]['reserveShowDay']." day"));
		if($reserveSetting[0]['reserveDay'] != 0)
			$reserveDay = date('Y-m-d', strtotime("+".$reserveSetting[0]['reserveDay']." day"));
		if($reserveSetting[0]['reserveDeActiveDay'] != 0)
			$reserveDeActiveDay = date('Y-m-d', strtotime("+".$reserveSetting[0]['reserveDeActiveDay']." day"));
		
		$fromLimit = 0;
		$howLimit = 10;
		$searchController->_model->setNull('_fields');
		$selection = 'shift.name as shiftName, firstname, family, workinginformation.id as workinginformationId, 
					  schedulelist.id as schedulelistId, listDate,'.
					 'schedulelist.beginTime as listBeginTime, schedulelist.endTime as listEndTime, total, totalSold, reserveMax, reserveSold, '.	
					 'internetMax, internetSold, schedulelist.active as active, specialtytype.name as specialtyName , user.active as user_active ';
		$from = '(((((schedulelist inner join workinginformation on(workinginformation.id = workinginformationIdRef)) '.
				'inner join doctor on(doctor.workinginformationIdRef = workinginformation.id))'.
				'left join shift on(shift.id = shiftIdRef)) inner join staff on(staff.id = staffIdRef))'.
				'left join specialtytype on(specialtytype.id = doctor.specialtyTypeIdRef))'.'
				left join user on(user.id = workinginformation.userIdRef) ' ;
		$searchController->_model->setTable($from);
		$searchController->_model->setFields('clinicIdRef', $reserveSetting[0]['clinicId']);
		$whereStr = 'clinicIdRef = :clinicIdRef AND ';
		$searchController->_model->setFields('user_active', 1);
			$whereStr .= 'user.active = :user_active  AND ';
		if($reserveSetting[0]['showUnActiveList'] == 0){
			$searchController->_model->setFields('active', 1);
			$whereStr .= 'schedulelist.active = :active AND ';
		}
		if(!empty($_POST['specialtyType'])){
			$searchController->_model->setFields('specialtyTypeIdRef', $_POST['specialtyType']);
			$whereStr .= 'specialtyTypeIdRef = :specialtyTypeIdRef AND ';
		}
		if(!empty($_POST['scientificClass'])){
			$searchController->_model->setFields('scientificClassIdRef', $_POST['scientificClass']);
			$whereStr .= 'scientificClassIdRef = :scientificClassIdRef AND ';
		}
		if(!empty($_POST['doctor'])){
			$searchController->_model->setFields('workinginformationIdRef', $_POST['doctor']);
			$whereStr .= 'doctor.workinginformationIdRef = :workinginformationIdRef AND ';
		}
		
		if($reserveDeActiveDay != '')
			$searchController->_model->setFields('listDate1', $reserveDeActiveDay);
		else
			$searchController->_model->setFields('listDate1', date('Y-m-d'));
		if($reserveShowDay != ''){
			$searchController->_model->setFields('listDate2', $reserveShowDay);
			$whereStr .= 'listDate >= :listDate1 AND listDate <= :listDate2 ';
		}
		else if($reserveDay != ''){
			$searchController->_model->setFields('listDate2', $reserveDay);
			$whereStr .= 'listDate >= :listDate1 AND listDate <= :listDate2 ';
		}
		else
			$whereStr .= 'listDate >= :listDate1 ';
		
		$searchController->_model->setWhereString($whereStr);
		if($reserveDay != '')
			$reservingRows = $searchController->_model->customQuery($selection, ' order by listDate ASC');
		else
			$reservingRows = $searchController->_model->customQuery($selection, ' order by listDate ASC', '', "LIMIT $fromLimit, $howLimit");
		
		$where = array();
		$where['clinicIdRef'] = $reserveSetting[0]['clinicId'];
		$reserveOutSettings = $searchController->select('*', 'reserveoutsetting', $where);
		
		$text = $searchController->_view->DoctorPageWeek('up', $reserveSetting[0]['clinicType'], $reserveOutSettings);
		
		if(is_array($reservingRows) && count($reservingRows) > 0){
			$i = 0;
			foreach ($reservingRows as $row){
				$searchController->_model->setNull('_fields');
				$searchController->_view->setNull();
				$from = 'listservise inner join (select id, name from servicetype order by serviceVersion DESC) as servicetype on (id = serviceTypeIdRef)';
				$searchController->_model->setFields('scheduleListIdRef', $row['schedulelistId']);
				$searchController->_model->setTable($from);
				$service = $searchController->_model->select('id, name', '', ' group by id');
				$searchController->_view->setRows($service);
				$text .= $searchController->_view->DoctorPageWeekContent($row, $i++, $reserveSetting[0]['clinicType'], $reserveSetting[0]['clinicId'], $reserveOutSettings);
			}
		}
		else{
			$text .= $searchController->_view->DoctorPageWeek('noRecord', '', $reserveOutSettings);
		}
		$text .= $searchController->_view->DoctorPageWeek('');
		echo $text;
	}
	
?>

