<?php
require_once __DIR__ . "/../../../include/dbcommon.php";

use Base\{Utils as BaseUtils, Validations};
use Base\QueryBuilder\{ConditionGroup, Select};
use BBPlanner\Constants\{Permissions};
use BBPlanner\Entities\{ReservationGuest, ReservationsGuestsServices, ReservationsServices, StructuresServices};

BaseUtils::executeCatchedScript(function () {
    Validations::validate($_POST, [
        "reservationID" => Validations::IS_POSITIVE_INTEGER,
        "editValues" => Validations::IS_ASSOCIATIVE_ARRAY,
    ]);

    Validations::validateIfExists($_POST["editValues"], [
        "checkIn" => Validations::IS_DATE_STRING,
        "checkOut" => Validations::IS_DATE_STRING,
    ]);

    $editValues = $_POST["editValues"];

    $reservation = ReservationsServices::get($_POST["reservationID"]);
    $alloggiatiPermissionPresence = StructuresServices::checkPermission($reservation->structureID, Permissions::ALLOGGIATI);

    $sections = [];

    if ($alloggiatiPermissionPresence && (array_key_exists("checkIn", $editValues) || array_key_exists("checkOut", $editValues))) {
        $checkInToControl = $editValues["checkIn"] ?: $reservation->getFirstCheckIn();
        $checkOutToControl = $editValues["checkOut"] ?: $reservation->getLastCheckOut();

        if ($checkInToControl !== $reservation->getFirstCheckIn() || $checkOutToControl !== $reservation->getLastCheckOut()) {
            $guestsThatWillNotBeModifiedCount = ReservationsGuestsServices::getCount(function (Select $query) use ($reservation, $checkInToControl, $checkOutToControl) {
                $query->isEqual("reservationID", $reservation->id);
                $query->conditionGroup(ConditionGroup::OR, function (ConditionGroup $conditionGroup) use ($reservation) {
                    $conditionGroup->isNotEqual("checkIn", $reservation->getFirstCheckIn());
                    $conditionGroup->isNotEqual("checkOut", $reservation->getLastCheckOut());
                });
                $query->conditionGroup(ConditionGroup::OR, function (ConditionGroup $conditionGroup) use ($checkInToControl, $checkOutToControl) {
                    $conditionGroup->isSmaller("checkIn", $checkInToControl);
                    $conditionGroup->isGreaterThan("checkOut", $checkOutToControl);
                });
            });

            if ($guestsThatWillNotBeModifiedCount > 0) {
                $sections[] = "showReservationGuestVariationAlert";
            }
        }
    }

    return compact("sections");
});
