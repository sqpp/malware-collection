<?php

	// praiseu16.php
	require '../includes.php';
	//require 'isleagueready.php';

	$db = Connect();

	$TeamID = filter_input(INPUT_POST, 'OurTeamID', FILTER_SANITIZE_STRING);
	$U16ID = filter_input(INPUT_POST, 'U16ID', FILTER_SANITIZE_STRING);
	
	// Check for errors in input or unacceptable numbers (e.g negative numbers in this case).
	// Report an error and cancel the script if any of these fail.
	
	if (!is_numeric($TeamID) or !is_numeric($U16ID)) {
		die ("Something isn't numeric in 'praiseu16.php'");
	}

	try {
		$Team = new Team;
		$Team->Load($TeamID);

		$Team->DetailsArray['U16Praised'] = 1;

		// Find the player number that we sent and subtract 10 from his %leaving variable.
		$Index = 0;
		foreach ($Team->U16sArray as $U16) {
			if ($Index == $U16ID) {
				$U16->ChanceOfLeaving -= 10;
				if ($U16->ChanceOfLeaving < 0) { $U16->ChanceOfLeaving = 0; }
				echo intval($U16->ChanceOfLeaving / 2); // Echo back the final figure to be filled in the player's new %leaving column.
			}
			$Index++ ;
		}
		
		// Re-encode just the trainers part back to the JSON string.
		$Team->DetailsJSON = json_encode($Team->DetailsArray);
		$Team->U16sJSON = json_encode($Team->U16sArray);
			
		$db->beginTransaction();
		
		// Now resave the details and U16s section
        $query = $db->prepare("UPDATE teams SET "
		. "DetailsJSON = :NewDetails, "
		. "U16sJSON = :NewU16s "
		. "WHERE ID = :TeamID");
		
		$query->bindParam(':NewDetails', $Team->DetailsJSON, PDO::PARAM_STR);
		$query->bindParam(':NewU16s', $Team->U16sJSON, PDO::PARAM_STR);
		$query->bindParam(':TeamID', $TeamID, PDO::PARAM_INT);
		
		$query->execute();
		$db->Commit();
		
	}
	 
	catch (PDOException $ex) {
		Echo $ex->getMessage();
	}
