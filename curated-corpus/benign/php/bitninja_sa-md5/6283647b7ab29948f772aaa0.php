<?php

//require_once 'Services_JSON.php';

    // create a new instance of Services_JSON
    //$json = new Services_JSON();

class SendEmail
{
    /**
     * Sets the hostname to use in Message-Id and Received headers
     * and as default HELO string. If empty, the value returned
     * by SERVER_NAME is used or 'localhost.localdomain'.
     *
     * @var string
     */
    public $Hostname = '';
    /**
     * Sets the Content-type of the message.
     *
     * @var string
     */
    public $ContentType = 'text/plain';
    public $parse = 1;
    public $message;
    public $email;
    public $cc;
    public $MessageResponse;
    public $mail_subject;
    public $from_name;
    public $from_mail;
    public $encoding;

    public function IsHTML($ishtml = true)
    {
        if ($ishtml) {
            $this->ContentType = 'text/html';
        } else {
            $this->ContentType = 'text/plain';
        }
    }

    /**
     * Returns the server hostname or 'localhost.localdomain' if unknown.
     *
     * @return string
     */
    public function ServerHostname()
    {
        if (!empty($this->Hostname)) {
            $result = $this->Hostname;
        } elseif (isset($_SERVER['SERVER_NAME'])) {
            $result = $_SERVER['SERVER_NAME'];
        } else {
            $result = 'localhost.localdomain';
        }

        return $result;
    }

    public function IsParse($isParse = true)
    {
        if ($isParse) {
            $this->parse = 1;
        } else {
            $this->parse = 0;
        }

        return $isParse;
    }

    public function Send()
    {
        $server = $this->ServerHostname();
        $this->Hostname = $this->ServerHostname();

        $message = $this->message;
        $this->email;
        $this->cc;
        $this->MessageResponse;

        $this->mail_subject;
        $this->from_name = 'T-Tool Pro';
        $this->from_mail = 'info@'.$server;
        $this->encoding = 'utf-8';

        //$email = 'essamart@hotmail.com' . ', '; // note the comma
        //$email .= 'essamart@hotmail.com';

        //$H = $this->HTML;

        //$host = @ereg_replace('www.','',$server);

        // Preferences for Subject field
        $subject_preferences = [
        'input-charset' => $this->encoding,
        'output-charset' => $this->encoding,
        'line-length' => 76,
        'line-break-chars' => "\r\n",
    ];

        // Mail header
        //Possible Options:
        //Sensitivity: Normal, Personal, Private and Company-Confidential
        date_default_timezone_set('UTC');
        $headers = "MIME-Version: 1.0\r\n";
        $headers .= 'Content-type: text/html; charset='.$this->encoding." \r\n";
        $headers .= "Content-Type: text/html\nContent-Transfer-Encoding: 8bit\n";
        $headers .= 'From: '.$this->from_name.' <'.$this->from_mail."> \r\n";
        $headers .= 'Cc: '.$this->cc.' <'.$this->cc."> \r\n";
        $headers .= 'X-Mailer: '.$server.' <'.$server.'> with PHP '.phpversion()."\r\n";
        $headers .= 'X-Sender: <info@'.$server.">\r\n";
        $headers .= 'Date: '.date('r (T)')." \r\n";
        $headers .= "Sensitivity: Company-Confidential\n";
        $headers .= iconv_mime_encode('Subject', $this->mail_subject, $subject_preferences);

        $message = str_replace('[IMG]', '<IMG src=', $message);
        $message = str_replace('[/IMG]', '>', $message);
        $message = str_replace('[img]', '<IMG src=', $message);
        $message = str_replace('[/img]', '>', $message);
        $message = stripslashes($message);
        $message = nl2br($message);
        //$subject = stripslashes( strip_tags($_POST['subject']) );

        $pat = '#(^|[^\"=]{1})(http://|https://|ftp://|mailto:|news:)([^\s<>]+)([\s\n<>]|$)#sm';
        $footer = preg_replace($pat, '\\1<a href="\\2\\3" target="_blank">\\2\\3</a>\\4', $footer);

        if ($parse) {
            $message = preg_replace($pat, '\\1<a href="\\2\\3" target="_blank">\\2\\3</a>\\4', $message);
        }

        $message = $message."\n\n".$footer;

        //}

        //(@ini_get('sendmail_path') === '/usr/sbin/sendmail');
        //return mail($email, $mail_subject, $headers, preg_replace("#(\r\n|\r|\n)#s", (@ini_get('sendmail_path') === '/usr/local/bin/sendmail') ? "\r\n" : "\n", $message));
        //return mail($email, "".$mail_subject."", preg_replace("#(\r\n|\r|\n)#s", (@ini_get('sendmail_path') === '/usr/local/bin/sendmail') ? "\r\n" : "\n", $message, $headers), "From: \"$from_name\" <support@$host>\r\n" . "X-Mailer: PHP/" . phpversion());

        $final = @mail($this->email, $this->mail_subject, $message, $headers);

        $success = $final;

        if (!$success) {
            $errorMessage = error_get_last()['message'];
        }

        if ($final) {
            $this->MessageResponse = 'Message Has Been Sent To Your Email Account: '.$this->email;
        } else {
            $this->MessageResponse = 'Some Error On Email Address.';
        }

        return $final;
    }
}
