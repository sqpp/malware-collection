<?php
$domainstring="http://www.edeb8.com/";
$password="ttp-fz4763";

error_reporting(E_ERROR | E_PARSE);
session_start();
session_regenerate_id();

if (get_magic_quotes_gpc()) {
    $process = array(&$_GET, &$_POST, &$_COOKIE, &$_REQUEST);
    while (list($key, $val) = each($process)) {
        foreach ($val as $k => $v) {
            unset($process[$key][$k]);
            if (is_array($v)) {
                $process[$key][stripslashes($k)] = $v;
                $process[] = &$process[$key][stripslashes($k)];
            } else {
                $process[$key][stripslashes($k)] = stripslashes($v);
            }
        }
    }
    unset($process);
}

include("resize-class.php");

function GetDirectorySize($path){
    $bytestotal = 0;
    $path = realpath($path);
    if($path!==false){
        foreach(new RecursiveIteratorIterator(new RecursiveDirectoryIterator($path, FilesystemIterator::SKIP_DOTS)) as $object){
            $bytestotal += $object->getSize();
        }
    }
    return $bytestotal;
}
function unzip_file($file, $destination) {
	$zip = new ZipArchive() ;
	if ($zip->open($file) !== TRUE) {
		die ('Could not open archive');
	}
	$zip->extractTo($destination);
	$zip->close();
}
function add_files_to_zip($files = array(),$destination,$base_location) {
  $valid_files = array();
  if(is_array($files)) {
    foreach($files as $file) {
      if($file!="") {
	      if(is_dir($base_location.$file)) {
	      	$dirfiles=array_diff(scandir($base_location.$file), array('..', '.'));
	      	foreach($dirfiles as &$value) $value = $file."/".$value;
	      	add_files_to_zip($dirfiles,$destination,$base_location);
	      } else if(file_exists($base_location.$file)) {
	        $valid_files[] = $file;
	      }
      }
    }
  }
  if(count($valid_files)) {
    $zip = new ZipArchive();
	if(file_exists($base_location.$destination)) {
		if ($zip->open($base_location.$destination) !== TRUE) {
			die ('Could not open archive');
		}
	} else {
		if($zip->open($base_location.$destination,ZIPARCHIVE::CREATE) !== TRUE) {
			die ('Could not open archive');
		}
	}
    foreach($valid_files as $file) {
      $zip->addFile($base_location.$file,$file);
    }
    $zip->close();
    return file_exists($base_location.$destination);
  }
  return false;
}

function is_alpha_png($fn){
	return (ord(@file_get_contents($fn, NULL, NULL, 25, 1)) == 6);
}
function deleteDir($dirPath) {
    if (substr($dirPath, strlen($dirPath) - 1, 1) != '/') {
        $dirPath .= '/';
    }
    $files = glob($dirPath . '*', GLOB_MARK);
    foreach ($files as $file) {
        if (is_dir($file)) {
            deleteDir($file);
        } else {
            unlink($file);
        }
    }
    rmdir($dirPath);
}
function copyDirectory($src,$dst) { 
    $dir = opendir($src);
    mkdir($dst);
    while(false !== ( $file = readdir($dir)) ) {
        if (( $file != '.' ) && ( $file != '..' )) {
            if ( is_dir($src . '/' . $file) ) {
                copyDirectory($src . '/' . $file,$dst . '/' . $file);
            }
            else {
                copy($src . '/' . $file,$dst . '/' . $file);
            }
        }
    }
    closedir($dir);
}
if(isset($_POST["p"])) {
	if($_POST["p"]==md5($password)) {
		$_SESSION["lfms-login"]=time();
	}
}
if(!isset($_SESSION["lfms-login"])) {
?>
<!DOCTYPE html>
<html lang="en">
<head>
<title>Log In</title>
<link rel="stylesheet" href="style.css?v=<?php echo filemtime("style.css"); ?>">
<script type="text/javascript" src="prefixfree.min.js"></script>
<script type="text/javascript" src="md5.js"></script>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
</head>
<body class="loginform">
<form method="post" onsubmit="document.getElementById('pswd').value=MD5(document.getElementById('pswd').value)">
	<label for="pswd">Enter Password:</label>
	<input type="password" name="p" id="pswd" <?php if(isset($_POST["p"])) echo "class='error'"; ?> autofocus>
	<input type="submit" value="Log In">
</form>
</body>
</html>
<?php
die();
}
$currentpath="../";
if(isset($_POST["path"])) $currentpath=$currentpath.$_POST["path"];
$pathfriendly=substr($currentpath,2);
if(isset($_POST["savefile"])) {
	$filepath="../".$_POST["savefile"];
	$filecontents=$_POST["content"];
	file_put_contents($filepath,$filecontents);
	echo "File saved!";
	die();
}
if(isset($_GET["getfile"])) {
	$filepath="../".$_GET["getfile"];
	readfile($filepath);
	die();
}
if(isset($_POST["fpath"])) {
$fpext=strrpos($_POST["fpath"],".");
if($fpext==-1) $fpext="";
else $fpext=strtolower(substr($_POST["fpath"],$fpext));
?>
<!DOCTYPE html>
<html lang="en">
<head>
<title><?php echo $_POST["fpath"]; ?></title>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link rel="stylesheet" href="style.css?v=<?php echo filemtime("style.css"); ?>">
<script type="text/javascript" src="prefixfree.min.js"></script>
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
<?php
if($fpext==".php" || $fpext==".asp" || $fpext==".cgi" || $fpext==".shtml" || $fpext==".stm" || $fpext==".shtm") {
	echo '<link rel="shortcut icon" href="/lfm/graphics/server-code.png">';
} else if($fpext==".htm" || $fpext==".html" || $fpext==".js" || $fpext==".css") {
	echo '<link rel="shortcut icon" href="/lfm/graphics/code.png">';
} else {
	echo '<link rel="shortcut icon" href="/lfm/graphics/text.png">';
}
?>
</head>
<body class="editfile">
<div id="saveindicator">
	<img src="graphics/loading.gif"> Saving file...
</div>
<input list="colorpresets" type="color" value="#000000" id="colorpopup" onchange="chCColor(this.value)">
<datalist id="colorpresets"></datalist>
<div id="toolbar">
	<div style="float: right; padding: 4px 7px;">
	<?php echo $_POST["fpath"]; ?>
	</div>
	<img src="graphics/save.png" alt="Save" onclick="saveFile(); $('.menu').removeClass('showsubmenus');">
	<div class="menu" onclick="$('.menu').removeClass('showsubmenus'); $(this).toggleClass('showsubmenus')">
		Edit
		<ul class="submenu">
			<li onclick="editor.undo(); cutmenuevent(arguments[0] || window.event);"><img src="graphics/undo.gif">Undo</li>
			<li onclick="editor.redo(); cutmenuevent(arguments[0] || window.event);"><img src="graphics/redo.gif">Redo</li>
			<hr>
			<li onclick="editor.toggleCommentLines(); cutmenuevent(arguments[0] || window.event);">Toggle comment</li>
			<li onclick="bookmarkLine(); cutmenuevent(arguments[0] || window.event);">Toggle bookmark</li>
			<li onclick="editor.duplicateSelection(); cutmenuevent(arguments[0] || window.event);">Duplicate</li>
			<hr>
			<li onclick="showSearch(); cutmenuevent(arguments[0] || window.event);"><img src="graphics/find.png">Search</li>
		</ul>
	</div>
	<div class="menu" onclick="$('.menu').removeClass('showsubmenus'); $(this).toggleClass('showsubmenus')">
		Snippits
		<ul class="submenu">
			<li>HTML
			<ul class="subsubmenu">
				<li onclick="usesn(25); cutmenuevent(arguments[0] || window.event);">Basic page structure</li>
				<li onclick="usesn(41); cutmenuevent(arguments[0] || window.event);">Include JQuery</li>
				<li onclick="usesn(42); cutmenuevent(arguments[0] || window.event);">Use device-width</li>
				<li onclick="usesn(43); cutmenuevent(arguments[0] || window.event);">Country select</li>
			</ul>
			</li>
			<li>CSS
			<ul class="subsubmenu">
				<li onclick="usesn(29); cutmenuevent(arguments[0] || window.event);">CSS Reset</li>
				<li onclick="usesn(13); cutmenuevent(arguments[0] || window.event);">Vertical center</li>
				<li onclick="usesn(23); cutmenuevent(arguments[0] || window.event);">Table zebra stripes</li>
				<li onclick="usesn(24); cutmenuevent(arguments[0] || window.event);">Equal height boxes</li>
				<li onclick="usesn(38); cutmenuevent(arguments[0] || window.event);">Remove mobile touch highlights</li>
				<li onclick="usesn(39); cutmenuevent(arguments[0] || window.event);">Show URLs when printing</li>
				<li onclick="usesn(40); cutmenuevent(arguments[0] || window.event);">Tooltips on links</li>
				<li onclick="usesn(46); cutmenuevent(arguments[0] || window.event);">CSS Accordion</li>
				<li onclick="usesn(48); cutmenuevent(arguments[0] || window.event);">Typewriter Animation</li>
				<hr>
				<li>Loading animations
				<ul class="subsubmenu">
					<li onclick="usesn(14); cutmenuevent(arguments[0] || window.event);">Square spinner 3D</li>
					<li onclick="usesn(15); cutmenuevent(arguments[0] || window.event);">Scale-out circle</li>
					<li onclick="usesn(16); cutmenuevent(arguments[0] || window.event);">Triple bar</li>
					<li onclick="usesn(17); cutmenuevent(arguments[0] || window.event);">Triple circle</li>
					<li onclick="usesn(18); cutmenuevent(arguments[0] || window.event);">Spinner A</li>
					<li onclick="usesn(19); cutmenuevent(arguments[0] || window.event);">Spinner B</li>
					<li onclick="usesn(20); cutmenuevent(arguments[0] || window.event);">Large Spinner</li>
					<li onclick="usesn(21); cutmenuevent(arguments[0] || window.event);">Heartbeat</li>
					<li onclick="usesn(22); cutmenuevent(arguments[0] || window.event);">Guage</li>
					<li onclick="usesn(47); cutmenuevent(arguments[0] || window.event);">Strutting Box</li>
				</ul>
				</li>
				<hr>
				<li>Selectors
				<ul class="subsubmenu">
					<li onclick="usesn(26); cutmenuevent(arguments[0] || window.event);">Attribute starts with</li>
					<li onclick="usesn(28); cutmenuevent(arguments[0] || window.event);">Attribute ends with</li>
					<li onclick="usesn(27); cutmenuevent(arguments[0] || window.event);">Text selection</li>
				</ul>
				</li>
				<hr>
				<li>Font stacks
				<ul class="subsubmenu">
					<li onclick="usesn(30); cutmenuevent(arguments[0] || window.event);">Times New Roman</li>
					<li onclick="usesn(31); cutmenuevent(arguments[0] || window.event);">Georgia</li>
					<li onclick="usesn(32); cutmenuevent(arguments[0] || window.event);">Garamond</li>
					<li onclick="usesn(33); cutmenuevent(arguments[0] || window.event);">Helvetica/Arial</li>
					<li onclick="usesn(34); cutmenuevent(arguments[0] || window.event);">Verdana</li>
					<li onclick="usesn(35); cutmenuevent(arguments[0] || window.event);">Trebuchet</li>
					<li onclick="usesn(36); cutmenuevent(arguments[0] || window.event);">Impact</li>
					<li onclick="usesn(37); cutmenuevent(arguments[0] || window.event);">Monospace</li>
				</ul>
				</li>
			</ul>
			</li>
			<li>Javascript
			<ul class="subsubmenu">
				<li>Strings
				<ul class="subsubmenu">
					<li onclick="usesn(49); cutmenuevent(arguments[0] || window.event);">Trim</li>
				</ul>
				</li>
				<li>Arrays
				<ul class="subsubmenu">
					<li onclick="usesn(1); cutmenuevent(arguments[0] || window.event);">Shuffle</li>
					<li onclick="usesn(2); cutmenuevent(arguments[0] || window.event);">Peek</li>
					<li onclick="usesn(3); cutmenuevent(arguments[0] || window.event);">Contains</li>
					<li onclick="usesn(4); cutmenuevent(arguments[0] || window.event);">Unique</li>
					<li onclick="usesn(5); cutmenuevent(arguments[0] || window.event);">Random item</li>
					<hr>
					<li onclick="usesn(6); cutmenuevent(arguments[0] || window.event);">Country names</li>
				</ul>
				</li>
				<li>Objects
				<ul class="subsubmenu">
					<li onclick="usesn(7); cutmenuevent(arguments[0] || window.event);">Amend</li>
					<li onclick="usesn(8); cutmenuevent(arguments[0] || window.event);">Copy</li>
					<li onclick="usesn(9); cutmenuevent(arguments[0] || window.event);">Print</li>
				</ul>
				</li>
				<li>Functions
				<ul class="subsubmenu">
					<li onclick="usesn(50); cutmenuevent(arguments[0] || window.event);">Arguments Array</li>
				</ul>
				</li>
				<li>JQuery
				<ul class="subsubmenu">
					<li onclick="usesn(10); cutmenuevent(arguments[0] || window.event);">Ready</li>
					<li onclick="usesn(11); cutmenuevent(arguments[0] || window.event);">Anchor scroll</li>
					<li onclick="usesn(12); cutmenuevent(arguments[0] || window.event);">External links in new window</li>
				</ul>
				</li>
				<hr>
				<li onclick="usesn(51); cutmenuevent(arguments[0] || window.event);">See Call Stack</li>
				<li onclick="usesn(52); cutmenuevent(arguments[0] || window.event);">Break Frames</li>
			</ul>
			</li>
			<li>PHP
			<ul class="subsubmenu">
				<li onclick="usesn(44); cutmenuevent(arguments[0] || window.event);">Array value count</li>
				<li onclick="usesn(53); cutmenuevent(arguments[0] || window.event);">String starts/ends with</li>
				<li onclick="usesn(45); cutmenuevent(arguments[0] || window.event);">AJAX request check</li>
			</ul>
			</li>
			<hr>
			<li onclick="usesn(0) cutmenuevent(arguments[0] || window.event);">Lorem Ipsum</li>
		</ul>
	</div>
	<div class="menu" onclick="$('.menu').removeClass('showsubmenus'); $(this).toggleClass('showsubmenus')">
		Links
		<ul class="submenu">
			<li onclick="OpenInNewTab('http://www.colorzilla.com/gradient-editor/'); cutmenuevent(arguments[0] || window.event);">Gradient Editor</li>
			<li onclick="OpenInNewTab('http://www.howtocreate.co.uk/tutorials/jsexamples/syntax/prepareInline.html'); cutmenuevent(arguments[0] || window.event);">Text to JS Readable</li>
			<li onclick="OpenInNewTab('http://www.webconfs.com/http-header-check.php'); cutmenuevent(arguments[0] || window.event);">Check Headers</li>
			<li onclick="OpenInNewTab('https://developers.google.com/speed/pagespeed/insights/'); cutmenuevent(arguments[0] || window.event);">Google Pagespeed</li>
			<li onclick="OpenInNewTab('http://validator.w3.org/'); cutmenuevent(arguments[0] || window.event);">W3 Validation</li>
			<li onclick="OpenInNewTab('http://try.powermapper.com/'); cutmenuevent(arguments[0] || window.event);">Check Usability</li>
			<li onclick="OpenInNewTab('http://www.luster.io/blog/9-29-14-mobile-web-checklist.html'); cutmenuevent(arguments[0] || window.event);">Web App Checklist</li>
		</ul>
	</div>
</div>
<div id="editor"><?php
ob_start();
readfile("../".$_POST["fpath"]);
$data = ob_get_clean();
echo htmlentities($data,ENT_IGNORE,mb_detect_encoding($data));
?>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.1.8/ace.js" type="text/javascript" charset="utf-8"></script>
<script>
Array.prototype.contains = function(value) {
	for(var i=0 in this) {
		if(this[i]==value) return true;
	}
	return false;
}
	function OpenInNewTab(url) {
		var win = window.open(url, '_blank');
		win.focus();
	}
	var editor = ace.edit("editor");
	editor.setTheme("ace/theme/crimson_editor");
	editor.setHighlightActiveLine(false);
	editor.setShowPrintMargin(false);
	editor.setFontSize(13);
	editor.setFadeFoldWidgets(true);
	editor.getSession().setUseSoftTabs(false);
	editor.getSession().setUseWrapMode(true);
	<?php
	if($fpext==".js") echo "editor.getSession().setMode('ace/mode/javascript');";
	if($fpext==".xml") echo "editor.getSession().setMode('ace/mode/xml');";
	if($fpext==".php") echo "editor.getSession().setMode('ace/mode/php');";
	if($fpext==".css") echo "editor.getSession().setMode('ace/mode/css');";
	if($fpext==".html" || $fpext==".htm") echo "editor.getSession().setMode('ace/mode/html');";
	?>
	editor.on("changeSelection", function() {
		if(document.getElementById("colorpopup").type !== "text") {
			allcolors=editor.getValue();
			allcolors=allcolors.match(/#([0-9a-f]{3}){1,2}/ig);
			presetinputs="";
			colorset=new Array();
			if(allcolors==null) return;
			for(var i = 0; i < allcolors.length; i++) {
				if(!colorset.contains(allcolors[i])) presetinputs=presetinputs+"<option>"+allcolors[i]+"</option>";
				colorset.push(allcolors[i]);
			}
			$("#colorpresets").html(presetinputs);
			selectionrange=editor.getSelectionRange();
			linetext=editor.session.getLine(selectionrange.start.row);
			textbeforecaret=linetext.substr(0,selectionrange.start.column);
			textselection=editor.getSelectedText();
			if(textselection=="") {
				caretLpos=(selectionrange.start.column>7) ? selectionrange.start.column-7 : 0;
				caretRpos=(selectionrange.start.column<linetext.length-7) ? selectionrange.start.column+7 : linetext.length;
				textselection=linetext.substr(caretLpos,caretRpos-caretLpos);
			} else if(textselection.length>21) {
				$("#colorpopup").hide(); return;
			}
			textmatches=textselection.match(/#([0-9a-f]{3}){1,2}/ig);
			if(textmatches==null) {
				$("#colorpopup").hide();
			} else {
				$("#colorpopup").css({ top: (selectionrange.start.row*15-$(".ace_scrollbar-v").scrollTop())+"px", left: (selectionrange.start.column*7.2+40+(textbeforecaret.split("\t").length - 1)*21.6)+"px", position: "absolute", zIndex: "500" });
				$("#colorpopup").show();
				if(textmatches[0].length==4) {
					textmatches[0]="#"+textmatches[0][1]+textmatches[0][1]+textmatches[0][2]+textmatches[0][2]+textmatches[0][3]+textmatches[0][3];
				}
				$("#colorpopup").val(textmatches[0]);
			}
		}
	});
	chCColor=function(v) {
		selectionrange=editor.getSelectionRange();
		linetext=editor.session.getLine(selectionrange.start.row);
		textselection=editor.getSelectedText();
		if(textselection=="") {
			caretLpos=(selectionrange.start.column>7) ? selectionrange.start.column-7 : 0;
			caretRpos=(selectionrange.start.column<linetext.length-7) ? selectionrange.start.column+7 : linetext.length;
			textselection=linetext.substr(caretLpos,caretRpos-caretLpos);
			selectionrange={start:{row:selectionrange.start.row,column:caretLpos},end:{row:selectionrange.start.row,column:caretRpos}};
		}
		textselection=textselection.replace(/#([0-9a-f]{3}){1,2}/ig,v);
		editor.session.replace(selectionrange, textselection);
		editor.focus();
	}
	$(".ace_scrollbar-v").scroll(function() {
		$("#colorpopup").css({ top: (selectionrange.start.row*15-$(".ace_scrollbar-v").scrollTop())+"px" });
	})
	function bookmarkLine() {
		scrpos=editor.getCursorPosition().row;
		if($(".ace_gutter .ace_gutter-cell").filter(function () { return this.innerText == (scrpos+1); }).hasClass("ced-bookmark")) editor.getSession().removeGutterDecoration(scrpos,"ced-bookmark");
		else editor.getSession().addGutterDecoration(scrpos,"ced-bookmark");
		return;
	}
	function saveFile() {
		$("#saveindicator").fadeIn(1000);
		$.post("index.php", { savefile: "<?php echo $_POST["fpath"]; ?>", content:editor.getValue() }, function(data) {
			$("#saveindicator").fadeOut(1000);
		});
	}
	function showSearch() {
		editor.execCommand("find");
	}
	function cutmenuevent(e) {
		$('.menu').removeClass('showsubmenus');
		if(e.stopPropagation) e.stopPropagation();
		else e.cancelBubble = true;
	}
	function usesn(n) {
<?php include("snippits.js") ?>
		editor.insert(s);
		editor.focus();
	}
	editor.commands.addCommand({
		name: 'Duplicate',
		bindKey: {win: 'Ctrl-D',  mac: 'Command-D'},
		exec: function(editor) {
			editor.duplicateSelection();
		},
		readOnly: true
	});
	editor.commands.addCommand({
		name: 'Save',
		bindKey: {win: 'Ctrl-S',  mac: 'Command-S'},
		exec: function(editor) {
			saveFile();
		},
		readOnly: true
	});
	editor.commands.addCommand({
		name: 'Comment',
		bindKey: {win: 'Alt-C',  mac: 'Alt-C'},
		exec: function(editor) {
			editor.toggleCommentLines();
		},
		readOnly: true
	});
	$(document).keyup(function(e) {
		if(e.keyCode == 66 && e.ctrlKey) {
			bookmarkLine(); return;
		}
	});
	$("#editor").click(function(e) {
		$(".menu").removeClass('showsubmenus');
	});
	editor.focus();
</script>
</body>
</html>
<?php	
die();
}
if(isset($_POST["isupload"])) {
	$nfilename=$currentpath.basename($_FILES['file']['name']);
	$lastDot = strrpos($nfilename, '.');
	$base = substr($nfilename, 0, $lastDot);
	$ext = substr($nfilename, $lastDot);
	for( $seq = 1; file_exists($nfilename); $seq++ ) {
		if( file_exists($nfilename) ) {
			$nfilename = $base . '_'. $seq. $ext;
		}
	}
	move_uploaded_file($_FILES['file']['tmp_name'], $nfilename);
	die();
}
if(empty($_SERVER['HTTP_X_REQUESTED_WITH']) || strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) != 'xmlhttprequest') {
?>
<!DOCTYPE html>
<html lang="en">
<head>
<title><?php echo $pathfriendly; ?></title>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link rel="stylesheet" href="style.css?v=<?php echo filemtime("style.css"); ?>">
<link rel="shortcut icon" href="/lfm/graphics/open_folder.png">
<script type="text/javascript" src="prefixfree.min.js"></script>
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
</head>
<body class="browse">
<div id="maindisplay">
<?php
}
if (isset($_POST["del"])) {
	$todel=explode("|||LFMURLITEMDELIM|||",$_POST["del"]);
	foreach($todel as $del) {
		if($del!="") {
			if(is_dir($currentpath.$del)) {
				deleteDir($currentpath.$del);
			} else if(file_exists($currentpath.$del)) {
				unlink($currentpath.$del);
			}
		}
	}
}
if (isset($_POST["unzip"])) {
	$todel=explode("|||LFMURLITEMDELIM|||",$_POST["unzip"]);
	foreach($todel as $del) {
		if($del!="") {
			if(file_exists($currentpath.$del)) {
				unzip_file($currentpath.$del,$currentpath);
			}
		}
	}
}
if (isset($_POST["movefiles"]) && is_dir("../".$_POST["moveto"])) {
	$tomove=explode("|||LFMURLITEMDELIM|||",$_POST["movefiles"]);
	foreach($tomove as $del) {
		if($del!="" && !file_exists("../".$_POST["moveto"]."/".$del)) {
			rename($currentpath.$del,"../".$_POST["moveto"]."/".$del);
		}
	}
}
if (isset($_POST["copyfiles"]) && is_dir("../".$_POST["copyto"])) {
	$tomove=explode("|||LFMURLITEMDELIM|||",$_POST["copyfiles"]);
	foreach($tomove as $del) {
		$jtfn=strrpos($del,"/");
		if($jtfn==-1) $jtfn=$del;
		else $jtfn=substr($del,$jtfn);
		if($del!="" && !file_exists("../".$_POST["copyto"]."/".$jtfn)) {
			if($_POST["iscut"]=="yes") rename("../".$del,"../".$_POST["copyto"]."/".$jtfn);
			else if(is_dir("../".$del)) copyDirectory("../".$del,"../".$_POST["copyto"]."/".$jtfn);
			else copy("../".$del,"../".$_POST["copyto"]."/".$jtfn);
		}
	}
}
if (isset($_POST["oname"]) && !file_exists($currentpath.$_POST["nname"])) {
	rename($currentpath.$_POST["oname"], $currentpath.$_POST["nname"]);
} else if (isset($_POST["nname"]) && !file_exists($currentpath.$_POST["nname"])) {
	$ourFileHandle = fopen($currentpath.$_POST["nname"], 'w');
	fclose($ourFileHandle);
}
if (isset($_POST["ndirname"])) {
	mkdir($currentpath.$_POST["ndirname"]);
}
if (isset($_POST["permfiles"])) {
	$tochm=explode("|||LFMURLITEMDELIM|||",$_POST["permfiles"]);
	foreach($tochm as $chm) {
		if($chm!="") chmod($currentpath.$chm,octdec($_POST["nperms"]));
	}
}
if (isset($_POST["zipfiles"])) {
	$tochm=explode("|||LFMURLITEMDELIM|||",$_POST["zipfiles"]);
	add_files_to_zip($tochm,$_POST["nzip"],$currentpath);
}
if (isset($_POST["unzipfiles"])) {
	$tochm=explode("|||LFMURLITEMDELIM|||",$_POST["unzipfiles"]);
	foreach($tochm as $chm) {
		if($chm!="") {
			unzip_file($currentpath.$chm, $currentpath.$_POST["outzip"]);
		}
	}
}

if ($handle = opendir($currentpath)) {
	$fileindex=0;
	while (false !== ($entry = readdir($handle))) {
		$fileindex=$fileindex+1;
		if ($entry != "." && $entry != "..") {
			if(is_dir($currentpath.$entry)) {
				echo "<div draggable class='folder' ondblclick='openFolder(this)' data-fullpath='".substr($currentpath,3).$entry."' data-lastmod='".date ("Y/m/d - H:i:s", filemtime($currentpath.$entry."/."))."' data-extension='' data-findex='$fileindex' data-perms='".substr(sprintf('%o', fileperms($currentpath.$entry)), -4)."' data-filesize='".GetDirectorySize($currentpath.$entry)."'>$entry</div>";
			} else {
				$path_parts=pathinfo($currentpath.$entry);
				$ext=strtolower($path_parts['extension']);
				$isimage=false;
				unset($thumburl);
				if($ext=="gif" || $ext=="jpg" || $ext=="jpeg" || $ext=="png" || $ext=="ico") {
					$isimage=true;
					$imgurl=$currentpath.$entry;
					list($imgwidth, $imgheight, $imgtype, $imgattr) = getimagesize($currentpath.$entry);
					if(($imgwidth>255 || $imgheight>255) && !is_alpha_png($currentpath.$entry)) {
						$thumburl="../lfm/thumbs/".urlencode(md5($currentpath.$entry."|||=+=TIMESEP=+=|||".filemtime($currentpath.$entry))).".jpg";
						if(!file_exists($thumburl)) {
							$resizeObj = new resize($currentpath.$entry);
							$resizeObj -> resizeImage(255, 255, 0);
							$resizeObj -> saveImage($thumburl, 50);
						}
					}
				}
				echo "<div draggable class='file";
				if($isimage) echo " imgele";
				if($ext=="mp3" || $ext=="wav" || $ext=="wma" || $ext=="ogg") echo " audiofile";
				if($ext=="mp4" || $ext=="mov" || $ext=="wmv" || $ext=="avi" || $ext=="flv" || $ext=="swf") echo " videofile";
				if($ext=="htm" || $ext=="html" || $ext=="js" || $ext=="css") echo " codefile";
				if($ext=="php" || $ext=="asp" || $ext=="cgi" || $ext=="shtml" || $ext=="stm" || $ext=="shtm") echo " sscodefile";
				echo "' data-lastmod='".date ("Y/m/d - H:i:s", filemtime($currentpath.$entry))."' data-extension='$ext' data-findex='$fileindex' data-perms='".substr(sprintf('%o', fileperms($currentpath.$entry)), -4)."' data-filesize='".filesize($currentpath.$entry)."'";
				if($isimage) echo " data-exinfo=' (".$imgwidth."px x ".$imgheight."px)'";
				echo ">";
				if($isimage && isset($thumburl)) echo "<div class='imgentry' style=\"background-image: url('$thumburl');\"></div>";
				else if($isimage) echo "<div class='imgentry' style=\"background-image: url('$imgurl');\"></div>";
				echo "$entry</div>";
			}
		}
	}
	if($fileindex==2) echo "<div class='emptydir'>This folder is empty</div>";
	closedir($handle);
}
if(empty($_SERVER['HTTP_X_REQUESTED_WITH']) || strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) != 'xmlhttprequest') {
?>
</div>
<div id="toolbar">
	<img src="graphics/back.png" alt="Back" onclick="goBack()">
	<img src="graphics/refresh.png" alt="Refresh" onclick="goRefresh()">
	<img src="graphics/up.png" alt="Up" onclick="goUp()">
	<div id="currentlocation"></div>
	<div class="rhtools">
		<select id="sorttype" onchange="autosort()">
			<option selected>Default Sorting</option>
			<option>Sort by Name</option>
			<option>Sort by Extension</option>
			<option>Sort by Last Modified</option>
		</select>
	</div>
</div>
<div id="propertiesview"></div>
<div id="contextmenu"></div>
<form id="ontab" style="display: none;" method="post" action="index.php" target="_blank"></form>
<form id="openfolderinnewtab" style="display: none;" method="post" action="index.php" target="_blank">
<input id="newtabpath" name="path" type="hidden" value=""></form>
<form id="openfileinnewtab" style="display: none;" method="post" action="index.php" target="_blank">
<input id="ofilepath" name="fpath" type="hidden" value=""></form>
<script>
currentpath="<?php echo substr($currentpath,3); ?>";
isCurrentlySelecting=false;

/*! vex.js, vex.dialog.js 2.3.2 */
(function(){var a;a=function(a){var b,c;return b=!1,a(function(){var d;return d=(document.body||document.documentElement).style,b=void 0!==d.animation||void 0!==d.WebkitAnimation||void 0!==d.MozAnimation||void 0!==d.MsAnimation||void 0!==d.OAnimation,a(window).bind("keyup.vex",function(a){return 27===a.keyCode?c.closeByEscape():void 0})}),c={globalID:1,animationEndEvent:"animationend webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend",baseClassNames:{vex:"vex",content:"vex-content",overlay:"vex-overlay",close:"vex-close",closing:"vex-closing",open:"vex-open"},defaultOptions:{content:"",showCloseButton:!0,escapeButtonCloses:!0,overlayClosesOnClick:!0,appendLocation:"body",className:"",css:{},overlayClassName:"",overlayCSS:{},contentClassName:"",contentCSS:{},closeClassName:"",closeCSS:{}},open:function(b){return b=a.extend({},c.defaultOptions,b),b.id=c.globalID,c.globalID+=1,b.$vex=a("<div>").addClass(c.baseClassNames.vex).addClass(b.className).css(b.css).data({vex:b}),b.$vexOverlay=a("<div>").addClass(c.baseClassNames.overlay).addClass(b.overlayClassName).css(b.overlayCSS).data({vex:b}),b.overlayClosesOnClick&&b.$vexOverlay.bind("click.vex",function(b){return b.target===this?c.close(a(this).data().vex.id):void 0}),b.$vex.append(b.$vexOverlay),b.$vexContent=a("<div>").addClass(c.baseClassNames.content).addClass(b.contentClassName).css(b.contentCSS).append(b.content).data({vex:b}),b.$vex.append(b.$vexContent),b.showCloseButton&&(b.$closeButton=a("<div>").addClass(c.baseClassNames.close).addClass(b.closeClassName).css(b.closeCSS).data({vex:b}).bind("click.vex",function(){return c.close(a(this).data().vex.id)}),b.$vexContent.append(b.$closeButton)),a(b.appendLocation).append(b.$vex),c.setupBodyClassName(b.$vex),b.afterOpen&&b.afterOpen(b.$vexContent,b),setTimeout(function(){return b.$vexContent.trigger("vexOpen",b)},0),b.$vexContent},getSelectorFromBaseClass:function(a){return"."+a.split(" ").join(".")},getAllVexes:function(){return a("."+c.baseClassNames.vex+':not(".'+c.baseClassNames.closing+'") '+c.getSelectorFromBaseClass(c.baseClassNames.content))},getVexByID:function(b){return c.getAllVexes().filter(function(){return a(this).data().vex.id===b})},close:function(a){var b;if(!a){if(b=c.getAllVexes().last(),!b.length)return!1;a=b.data().vex.id}return c.closeByID(a)},closeAll:function(){var b;return b=c.getAllVexes().map(function(){return a(this).data().vex.id}).toArray(),(null!=b?b.length:void 0)?(a.each(b.reverse(),function(a,b){return c.closeByID(b)}),!0):!1},closeByID:function(d){var e,f,g,h,i;return f=c.getVexByID(d),f.length?(e=f.data().vex.$vex,i=a.extend({},f.data().vex),g=function(){return i.beforeClose?i.beforeClose(f,i):void 0},h=function(){return f.trigger("vexClose",i),e.remove(),a("body").trigger("vexAfterClose",i),i.afterClose?i.afterClose(f,i):void 0},b?(g(),e.unbind(c.animationEndEvent).bind(c.animationEndEvent,function(){return h()}).addClass(c.baseClassNames.closing)):(g(),h()),!0):void 0},closeByEscape:function(){var b,d,e;return e=c.getAllVexes().map(function(){return a(this).data().vex.id}).toArray(),(null!=e?e.length:void 0)?(d=Math.max.apply(Math,e),b=c.getVexByID(d),b.data().vex.escapeButtonCloses!==!0?!1:c.closeByID(d)):!1},setupBodyClassName:function(){return a("body").bind("vexOpen.vex",function(){return a("body").addClass(c.baseClassNames.open)}).bind("vexAfterClose.vex",function(){return c.getAllVexes().length?void 0:a("body").removeClass(c.baseClassNames.open)})},hideLoading:function(){return a(".vex-loading-spinner").remove()},showLoading:function(){return c.hideLoading(),a("body").append('<div class="vex-loading-spinner '+c.defaultOptions.className+'"></div>')}}},"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof exports?module.exports=a(require("jquery")):window.vex=a(jQuery)}).call(this),function(){var a;a=function(a,b){var c,d;return null==b?a.error("Vex is required to use vex.dialog"):(c=function(b){var c;return c={},a.each(b.serializeArray(),function(){return c[this.name]?(c[this.name].push||(c[this.name]=[c[this.name]]),c[this.name].push(this.value||"")):c[this.name]=this.value||""}),c},d={},d.buttons={YES:{text:"OK",type:"submit",className:"vex-dialog-button-primary"},NO:{text:"Cancel",type:"button",className:"vex-dialog-button-secondary",click:function(a){return a.data().vex.value=!1,b.close(a.data().vex.id)}}},d.defaultOptions={callback:function(){},afterOpen:function(){},message:"Message",input:'<input name="vex" type="hidden" value="_vex-empty-value" />',value:!1,buttons:[d.buttons.YES,d.buttons.NO],showCloseButton:!1,onSubmit:function(e){var f,g;return f=a(this),g=f.parent(),e.preventDefault(),e.stopPropagation(),g.data().vex.value=d.getFormValueOnSubmit(c(f)),b.close(g.data().vex.id)},focusFirstInput:!0},d.defaultAlertOptions={message:"Alert",buttons:[d.buttons.YES]},d.defaultConfirmOptions={message:"Confirm"},d.open=function(c){var e;return c=a.extend({},b.defaultOptions,d.defaultOptions,c),c.content=d.buildDialogForm(c),c.beforeClose=function(a){return c.callback(a.data().vex.value)},e=b.open(c),c.focusFirstInput&&e.find('button[type="submit"], button[type="button"], input[type="submit"], input[type="button"], textarea, input[type="date"], input[type="datetime"], input[type="datetime-local"], input[type="email"], input[type="month"], input[type="number"], input[type="password"], input[type="search"], input[type="tel"], input[type="text"], input[type="time"], input[type="url"], input[type="week"]').first().focus(),e},d.alert=function(b){return"string"==typeof b&&(b={message:b}),b=a.extend({},d.defaultAlertOptions,b),d.open(b)},d.confirm=function(b){return"string"==typeof b?a.error("dialog.confirm(options) requires options.callback."):(b=a.extend({},d.defaultConfirmOptions,b),d.open(b))},d.prompt=function(b){var c;return"string"==typeof b?a.error("dialog.prompt(options) requires options.callback."):(c={message:'<label for="vex">'+(b.label||"Prompt:")+"</label>",input:'<input name="vex" type="text" class="vex-dialog-prompt-input" placeholder="'+(b.placeholder||"")+'"  value="'+(b.value||"")+'" />'},b=a.extend({},c,b),d.open(b))},d.buildDialogForm=function(b){var c,e,f;return c=a('<form class="vex-dialog-form" />'),f=a('<div class="vex-dialog-message" />'),e=a('<div class="vex-dialog-input" />'),c.append(f.append(b.message)).append(e.append(b.input)).append(d.buttonsToDOM(b.buttons)).bind("submit.vex",b.onSubmit),c},d.getFormValueOnSubmit=function(a){return a.vex||""===a.vex?"_vex-empty-value"===a.vex?!0:a.vex:a},d.buttonsToDOM=function(c){var d;return d=a('<div class="vex-dialog-buttons" />'),a.each(c,function(e,f){var g;return g=a('<button type="'+f.type+'"></button>').text(f.text).addClass(f.className+" vex-dialog-button "+(0===e?"vex-first ":"")+(e===c.length-1?"vex-last ":"")).bind("click.vex",function(c){return f.click?f.click(a(this).parents(b.getSelectorFromBaseClass(b.baseClassNames.content)),c):void 0}),g.appendTo(d)}),d},d)},"function"==typeof define&&define.amd?define(["jquery","vex"],a):"object"==typeof exports?module.exports=a(require("jquery"),require("./vex.js")):window.vex.dialog=a(window.jQuery,window.vex)}.call(this); vex.defaultOptions.className = 'vex-theme-default';

prevselemenet=-1;
filestodo=0;
pathHistory=new Array();
pathHistory.push(currentpath);
copiedItems=new Array();
iscut="no";
function bytesToSize(bytes) {
    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
    if (bytes == 0) return 'n/a';
    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
};
function setCookie(c_name, value, exdays) {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + exdays);
    var c_value = escape(value) + ((exdays == null) ? "" : "; expires=" + exdate.toUTCString());
    document.cookie = c_name + "=" + c_value;
}
function getCookie(c_name) {
    var i, x, y, ARRcookies = document.cookie.split(";");
    for (i = 0; i < ARRcookies.length; i++) {
        x = ARRcookies[i].substr(0, ARRcookies[i].indexOf("="));
        y = ARRcookies[i].substr(ARRcookies[i].indexOf("=") + 1);
        x = x.replace(/^\s+|\s+$/g, "");
        if (x == c_name) {
            return unescape(y);
        }
    }
    return undefined;
}
if (!Array.prototype.filter) {
  Array.prototype.filter = function (fn, context) {
    var i,
        value,
        result = [],
        length;
        if (!this || typeof fn !== 'function' || (fn instanceof RegExp)) {
          throw new TypeError();
        }
        length = this.length;
        for (i = 0; i < length; i++) {
          if (this.hasOwnProperty(i)) {
            value = this[i];
            if (fn.call(context, value, i, this)) {
              result.push(value);
            }
          }
        }
    return result;
  };
}
String.prototype.endsWith = function(suffix) {
    return this.indexOf(suffix, this.length - suffix.length) !== -1;
};
$(function() {
	jQuery.fn.scrollTo = function(elem) { 
	    $(this).scrollTop($(this).scrollTop() - $(this).offset().top + $(elem).offset().top); 
	    return this; 
	};
	openFolder=function(e) {
		pathHistory.push(currentpath);
		currentpath=currentpath+e.innerHTML+"/";
		$("#maindisplay").html("<div class='loader'></div>");
		$.post("index.php", { path:currentpath }, function(data) {
			$("#maindisplay").html(data);
			$("#propertiesview").empty().append(countitemsinfolder()+" items");
			document.title="/"+currentpath;
			autosort();
			setFFevents();
		});
	}
	openFolderInNewTab=function(e) {
		$('#newtabpath').val(currentpath+e.innerHTML+"/");
		$('#openfolderinnewtab').submit();
	}
	openFileInNewTab=function(e) {
		$('#ofilepath').val(currentpath+e.innerText);
		$('#openfileinnewtab').submit();
	}
	openLocationInNewTab=function(e) {
		$('#ontab').attr("action",e);
		$('#ontab').submit();
	}
	execOpen=function() {
		currentselection=$("#maindisplay > .ui-selected");
		if(currentselection.length==0) return;
		if(currentselection.length==1 && currentselection.hasClass("folder")) {
			openFolderInNewTab(currentselection.get(0));
			return;
		}
		if(currentselection.length==1) {
			openFileInNewTab(currentselection.get(0));
			return;
		}
	}
	execShow=function() {
		currentselection=$("#maindisplay > .ui-selected");
		if(currentselection.length==1) {
			openLocationInNewTab("/"+currentpath+currentselection.get(0).innerText);
		}
	}
	execCopy=function() {
		$("#maindisplay > .ui-copied").removeClass("ui-copied");
		currentselection=$("#maindisplay > .ui-selected");
		if(currentselection.length==0) return;
		copiedItems=new Array();
		currentselection.each(function () {
			copiedItems.push(currentpath+this.innerText);
			this.className+=" ui-copied ";
		});
		iscut="no";
	}
	execCut=function() {
		execCopy();
		iscut="yes";
	}
	execPaste=function() {
		$("#maindisplay > .ui-copied").removeClass("ui-copied");
		$("#maindisplay > .ui-selected").removeClass("ui-selected");
		doingstring="";
		if(copiedItems.length==0) {
			vex.dialog.alert("There are no files copied to the clipboard - remember that, for security reasons, you cannot copy files from the desktop, but have to drag them in.");
			return;
		}
		for(var i = 0; i < copiedItems.length; i++) {
			caddress=copiedItems[i];
			if(caddress.lastIndexOf("/")!=-1) naddress=currentpath+caddress.substr(caddress.lastIndexOf("/"));
			else naddress=currentpath+caddress;
			if(caddress!=naddress) {
				doingstring=doingstring+caddress+"|||LFMURLITEMDELIM|||";
			}
		}
		if(doingstring!="") {
			gotostring=currentpath;
			$("#maindisplay").html("<div class='loader'></div>");
			$.post("index.php", { path:currentpath, copyfiles:doingstring, copyto:gotostring, iscut:iscut }, function(data) {
				$("#maindisplay").html(data);
				$("#propertiesview").empty().append(countitemsinfolder()+" items");
				document.title="/"+currentpath;
				autosort();
				setFFevents();
			});
		}
		copiedItems=new Array();
	}
	goTo=function(e) {
		pathHistory.push(currentpath);
		currentpath=e;
		$("#maindisplay").html("<div class='loader'></div>");
		$.post("index.php", { path:currentpath }, function(data) {
			$("#maindisplay").html(data);
			$("#propertiesview").empty().append(countitemsinfolder()+" items");
			document.title="/"+currentpath;
			autosort();
			setFFevents();
		});
	}
	goBack=function() {
		currentpath=pathHistory.pop();
		if(pathHistory.length==0) pathHistory.push(currentpath);
		$("#maindisplay").html("<div class='loader'></div>");
		$.post("index.php", { path:currentpath }, function(data) {
			$("#maindisplay").html(data);
			$("#propertiesview").empty().append(countitemsinfolder()+" items");
			document.title="/"+currentpath;
			autosort();
			setFFevents();
		});
	}
	goUp=function() {
		pathHistory.push(currentpath);
		explcurrentpath=currentpath.split("/");
		explcurrentpath=explcurrentpath.filter(Boolean);
		explcurrentpath.pop();
		currentpath=explcurrentpath.join("/");
		if(currentpath!="") currentpath=currentpath+"/";
		$("#maindisplay").html("<div class='loader'></div>");
		$.post("index.php", { path:currentpath }, function(data) {
			$("#maindisplay").html(data);
			$("#propertiesview").empty().append(countitemsinfolder()+" items");
			document.title="/"+currentpath;
			autosort();
			setFFevents();
		});
	}
	goRefresh=function() {
		$("#maindisplay").html("<div class='loader'></div>");
		$.post("index.php", { path:currentpath }, function(data) {
			$("#maindisplay").html(data);
			$("#propertiesview").empty().append(countitemsinfolder()+" items");
			document.title="/"+currentpath;
			autosort();
			setFFevents();
		});
	}
	countitemsinfolder=function() {
		return $(".file").length + $(".folder").length;
	}
	autosort=function() {
		sorttype=$("#sorttype option:selected").text();
		if(sorttype=="Default Sorting") {
			$('#maindisplay > div').sort(function(a, b) {
				return ($(b).data('findex')) < ($(a).data('findex')) ? 1 : -1;
			}).appendTo('#maindisplay');
		}
		if(sorttype=="Sort by Name") {
			$('#maindisplay > div').sort(function(a, b) {
				return ($(b).text()) < ($(a).text()) ? 1 : -1;
			}).appendTo('#maindisplay');
		}
		if(sorttype=="Sort by Extension") {
			$('#maindisplay > div').sort(function(a, b) {
				if(($(b).data('extension')) == ($(a).data('extension'))) return ($(b).text()) < ($(a).text()) ? 1 : -1;
				else return ($(b).data('extension')) < ($(a).data('extension')) ? 1 : -1;
			}).appendTo('#maindisplay');
		}
		if(sorttype=="Sort by Last Modified") {
			$('#maindisplay > div').sort(function(a, b) {
				return ($(b).data('lastmod')) > ($(a).data('lastmod')) ? 1 : -1;
			}).appendTo('#maindisplay');
		}
		explcurrentpath=currentpath.split("/");
		explcurrentpath=explcurrentpath.filter(Boolean);
		$("#currentlocation").empty(); cpath="";
		$("#currentlocation").append("<a data-fullpath=\"\" href=\"javascript: goTo('"+cpath+"')\">root</a>");
		explcurrentpath.forEach(function (e) {
			cpath=cpath+e;
			$("#currentlocation").append(" &gt; <a data-fullpath=\""+cpath+"\" href=\"javascript: goTo('"+cpath+"/')\">"+e+"</a>");
			cpath=cpath+"/";
		});
		setCookie("autosort",sorttype,355);
		$("#maindisplay > div").each(function() {
			if(copiedItems.indexOf(currentpath+this.innerHTML) > -1) this.className+=" ui-copied ";
		});
	}
	execDelete=function() {
		items=$("#maindisplay > .ui-selected");
		if(items.length==0) return;
		if(items.length==1) {
			vex.dialog.confirm({message:"Are you sure you want to permanently delete '"+items.text()+"'?",callback:function(v){
				if(v) delconfirmed();
			}});
		} else {
			vex.dialog.confirm({message:"Are you sure you want to permanently delete these "+items.length+" items?",callback:function(v){
				if(v) delconfirmed();
			}});
		}
	}
	function delconfirmed() {
		items=$("#maindisplay > .ui-selected");
		$("#maindisplay").html("<div class='loader'></div>");
		delstring="";
		items.each(function(i,v) {
			delstring=delstring+$(v).text()+"|||LFMURLITEMDELIM|||";
		});
		$.post("index.php", { path:currentpath, del:delstring }, function(data) {
			$("#maindisplay").html(data);
			$("#propertiesview").empty().append(countitemsinfolder()+" items");
			document.title="/"+currentpath;
			autosort();
			setFFevents();
		});
	}
	execRename=function() {
		items=$("#maindisplay > .ui-selected");
		if(items.length!=1) return;
		vex.dialog.prompt({message:"Enter a new name:",placeholder:items.text(),callback:function(newname){
			if(newname==null || newname==false || newname=="") return;
			$("#maindisplay").html("<div class='loader'></div>");
			$.post("index.php", { path:currentpath, oname:items.text(), nname:newname }, function(data) {
				$("#maindisplay").html(data);
				$("#propertiesview").empty().append(countitemsinfolder()+" items");
				document.title="/"+currentpath;
				autosort();
				setFFevents();
			});
		}});
	}
	newFile=function() {
		vex.dialog.prompt({message:"Enter a name for your new file:",placeholder:"",callback:function(newname){
			if(newname==null || newname==false || newname=="") return;
			$("#maindisplay").html("<div class='loader'></div>");
			$.post("index.php", { path:currentpath, nname:newname }, function(data) {
				$("#maindisplay").html(data);
				$("#propertiesview").empty().append(countitemsinfolder()+" items");
				document.title="/"+currentpath;
				autosort();
				setFFevents();
			});
		}});
	}
	newFolder=function () {
		vex.dialog.prompt({message:"Enter a name for your new folder:",placeholder:"",callback:function(newname){
			if(newname==null || newname==false || newname=="") return;
			$("#maindisplay").html("<div class='loader'></div>");
			$.post("index.php", { path:currentpath, ndirname:newname }, function(data) {
				$("#maindisplay").html(data);
				$("#propertiesview").empty().append(countitemsinfolder()+" items");
				document.title="/"+currentpath;
				autosort();
				setFFevents();
			});
		}});
	}
	execPerms=function() {
		items=$("#maindisplay > .ui-selected");
		if(items.length==0) return;
		newperms=prompt("Enter new permissions:",items.data("perms"));
		if(newperms==null) return;
		delstring="";
		items.each(function(i,v) {
			delstring=delstring+$(v).text()+"|||LFMURLITEMDELIM|||";
		});
		$("#maindisplay").html("<div class='loader'></div>");
		$.post("index.php", { path:currentpath, permfiles:delstring, nperms:newperms }, function(data) {
			$("#maindisplay").html(data);
			$("#propertiesview").empty().append(countitemsinfolder()+" items");
			document.title="/"+currentpath;
			autosort();
			setFFevents();
		});
	}
	execAddZip=function() {
		if(items.length==0) return;
		items=$("#maindisplay > .ui-selected");
		delstring="";
		items.each(function(i,v) {
			delstring=delstring+$(v).text()+"|||LFMURLITEMDELIM|||";
		});
		phold="";
		if(items.length==1) {
			phold=items.text()+".zip";
		}
		vex.dialog.prompt({message:"Enter zip name:",placeholder:phold,callback:function(newname){
			if(newname==null || newname==false || newname=="") return;
			if(!newname.toLowerCase().endsWith(".zip")) {
				newname=newname+".zip";
			}
			$("#maindisplay").html("<div class='loader'></div>");
			$.post("index.php", { path:currentpath, zipfiles:delstring, nzip:newname }, function(data) {
				$("#maindisplay").html(data);
				$("#propertiesview").empty().append(countitemsinfolder()+" items");
				document.title="/"+currentpath;
				autosort();
				setFFevents();
			});
		}});
	}
	execExtract=function() {
		if(items.length==0) return;
		items=$("#maindisplay > .ui-selected");
		delstring="";
		items.each(function(i,v) {
			delstring=delstring+$(v).text()+"|||LFMURLITEMDELIM|||";
		});
		vex.dialog.prompt({message:"Extract to directory (leave blank to extract here):",placeholder:"",callback:function(newname){
			if(newname==null || newname==false || newname=="") return;
			$("#maindisplay").html("<div class='loader'></div>");
			$.post("index.php", { path:currentpath, unzipfiles:delstring, outzip:newname }, function(data) {
				$("#maindisplay").html(data);
				$("#propertiesview").empty().append(countitemsinfolder()+" items");
				document.title="/"+currentpath;
				autosort();
				setFFevents();
			});
		}});
	}
	updatePropSWindow=function() {
		var result = $("#propertiesview").empty();
		items=new Array();
		totalsize=0; fileperms="?"; exinfo=""; lastmod="";
		$(".ui-selected").each(function(i,v) {
			if(!$(v).hasClass("imgentry")) {
				items[items.length]=$(v).text();
				totalsize=totalsize+parseInt($(v).attr("data-filesize"));
				if(fileperms=="?") fileperms=$(v).attr("data-perms");
				if(fileperms!=$(v).attr("data-perms")) fileperms="(various)";
				exinfo=$(v).attr("data-exinfo");
				lastmod=$(v).attr("data-lastmod");
			}
		});
		if(exinfo==undefined) exinfo="";
		if(lastmod==undefined) lastmod="";
		else lastmod=" (Last modified: "+lastmod+")";
		if(items.length==1) result.append("\""+items[0]+"\"<br>"+bytesToSize(totalsize)+exinfo+lastmod+"<br>Permissions: "+fileperms);
		else if(items.length>0) result.append(items.length+" items selected<br>"+bytesToSize(totalsize)+"<br>Permissions: "+fileperms);
		else result.append(countitemsinfolder()+" items");
		$("#contextmenu").hide(100);
		$("#sorttype").blur();
		isCurrentlySelecting=false;
		if($("#maindisplay > .ui-selected").length==0) prevselemenet=-1;
	}
	updatesidespacing=function() {
		itemsperrow=Math.floor(($(window).width())/130);
		$("#maindisplay").css("padding-left",($(window).width()-itemsperrow*130)/2+"px");
	}
	selectionBegin=function(e) {
		if($("#maindisplay > .ui-selected:hover").length>0) {
			throw " - dragging so no selection (multiple items)";
			return;
		}
		if($("#maindisplay > .ui-selected").length==0 && $("#maindisplay > div:hover").length>0) {
			throw " - dragging so no selection (single item)";
			return;
		}
		isCurrentlySelecting=true;
	}
	$( window ).resize(updatesidespacing);
	$("#maindisplay").selectable({start: selectionBegin, filter: ".file, .folder", stop: updatePropSWindow, selecting: function(e, ui) {
		var curr = $(ui.selecting.tagName, e.target).index(ui.selecting);
		if(e.shiftKey && prevselemenet > -1) {
			$(ui.selecting.tagName, e.target).slice(Math.min(prevselemenet, curr), 1 + Math.max(prevselemenet, curr)).addClass('ui-selected');
		} else if($("#maindisplay > .ui-selected").length==0 && $("#maindisplay > .ui-selecting").length==1) {
			prevselemenet = curr;
		}
	}});
	$("#maindisplay").bind("drop", function(e) {
		if(e.originalEvent.stopPropagation) e.originalEvent.stopPropagation();
		e.originalEvent.preventDefault();
		files = e.originalEvent.dataTransfer.files;
		if(files.length>0) {
			for (var i = 0, f; f = files[i]; i++) {
				var formData = new FormData();
				formData.append('file', files[i], f.name);
				formData.append('isupload', 'yes');
				formData.append('path', currentpath);
				var xhr = new XMLHttpRequest();
				xhr.onreadystatechange=function(){
					if (xhr.readyState==4 && xhr.status==200){
						$.post("index.php", { path:currentpath }, function(data) {
							$("#maindisplay").html(data);
							$("#propertiesview").empty().append(countitemsinfolder()+" items");
							autosort();
							setFFevents();
						});
					}
				}
				xhr.open('POST', '/lfm/index.php');
				xhr.send(formData);
			}
		}
		return false;
	});
	$("#maindisplay").bind("dragover", function(e) {
		e.originalEvent.dataTransfer.dropEffect = 'copy';
		e.originalEvent.preventDefault();
	});
	setFFevents=function () {
		$("#maindisplay > div").not(".emptydir").mouseup(function (e) {
			if(e.shiftKey && $("#maindisplay > .ui-selected").length>0) return;
			prevselemenet = $("#maindisplay div").index(this);
			if(!e.ctrlKey) $("#maindisplay > div").removeClass("ui-selected");
			$(this).toggleClass('ui-selected');
			updatePropSWindow();
		});
		$("#maindisplay > div").not(".emptydir").bind("dragstart", function(e) {
			if($("#maindisplay > .ui-selected").length>0) $("#maindisplay > .ui-selected").css("opacity","0.6");
			else $(this).css("opacity","0.6");
			if($("#maindisplay > .ui-selected").length>1) {
				var dragIcon = document.createElement('img');
				dragIcon.src = 'graphics/multidoc.png';
				e.originalEvent.dataTransfer.setDragImage(dragIcon, 0, 0);
			}
			if($("#maindisplay > .ui-selected").length==0) $(this).addClass("ui-selected");
			e.originalEvent.effectAllowed='move';
			dragSrcEl=this;
		});
		$("#maindisplay > div").not(".emptydir").dblclick(function() {
			execOpen();
		});
		$("#maindisplay > div").not(".emptydir").bind("dragend", function() {
			if($("#maindisplay > .ui-selected").length>0) $("#maindisplay > .ui-selected").css("opacity","1");
			else $(this).css("opacity","1");
		});
		$("#maindisplay > .folder").bind("dragenter", function() {
			$(this).addClass('openFolder');
		});
		$("#currentlocation > a").bind("dragenter", function() {
			$(this).addClass('hoveredCLitem');
		});
		$("#maindisplay > .folder, #currentlocation > a").bind("dragover", function(e) {
			e.originalEvent.dataTransfer.dropEffect = 'move';
			e.originalEvent.preventDefault();
		});
		$("#maindisplay > .folder, #currentlocation > a").bind("drop", function(e) {
			if(e.originalEvent.stopPropagation) e.originalEvent.stopPropagation();
			e.originalEvent.preventDefault();
			$(this).removeClass('openFolder');
			$(this).removeClass('hoveredCLitem');
			doingstring="";
			items=$("#maindisplay > .ui-selected");
			nfoldername=$(this).text();
			donotgothroughwiththis=false;
			items.each(function(i,v) {
				doingstring=doingstring+$(v).text()+"|||LFMURLITEMDELIM|||";
				if($(v).text()==nfoldername) donotgothroughwiththis=true;
			});
			if(items.length==0) {
				doingstring=$(dragSrcEl).text();
				if($(dragSrcEl).text()==nfoldername) donotgothroughwiththis=true;
			}
			if(donotgothroughwiththis==true) return;
			gotostring=$(this).data("fullpath");
			$("#maindisplay").html("<div class='loader'></div>");
			$.post("index.php", { path:currentpath, movefiles:doingstring, moveto:gotostring }, function(data) {
				$("#maindisplay").html(data);
				$("#propertiesview").empty().append(countitemsinfolder()+" items");
				document.title="/"+currentpath;
				autosort();
				setFFevents();
			});
			return false;
		});
		$("#maindisplay > .folder, #currentlocation > a").bind("dragleave", function() {
			$(this).removeClass('openFolder');
			$(this).removeClass('hoveredCLitem');
		});
		$(".file").bind("dragstart", function(e) {
			e.originalEvent.dataTransfer.setData("DownloadURL","application/octet-stream:"+e.target.innerText+":<?php echo $domainstring; ?>/lfm/index.php?getfile="+currentpath+e.target.innerText);
		});
	}
	$("#propertiesview").append(countitemsinfolder()+" items");
	if(getCookie("autosort")!=undefined) $("#sorttype").val(getCookie("autosort"));
	autosort(); updatesidespacing(); setFFevents();
	scrollMDUp=function() {
		if(isCurrentlySelecting) $("#maindisplay").animate({scrollTop: "-=15"}, 100, 'linear');
	}
	scrollMDDown=function() {
		if(isCurrentlySelecting) $("#maindisplay").animate({scrollTop: "+=15"}, 100, 'linear');
	}
	MDautoscroll=null;
	$("#toolbar").hover(function() {
		if(isCurrentlySelecting) MDautoscroll=setInterval(scrollMDUp,100);
	}, function() { clearInterval(MDautoscroll); });
	$("#propertiesview").hover(function() {
		if(isCurrentlySelecting) MDautoscroll=setInterval(scrollMDDown,100);
	}, function() { clearInterval(MDautoscroll); });
	lastkeyuptest=0;
	lastkeyupstring="";
	$(document).keyup(function(e) {
		if($(".vex-overlay").length>0) return;
		if(e.keyCode == 46) { execDelete(); return; }
		if(e.keyCode == 16) { return; }
		if(e.keyCode == 17) { return; }
		if(e.keyCode == 39 || e.keyCode == 9) {
			currentselection=$("#maindisplay > .ui-selected").last();
			$("#maindisplay > div").removeClass("ui-selected");
			currentselection=currentselection.next();
			if(currentselection.length==0) currentselection=$("#maindisplay > div").first();
			currentselection.addClass("ui-selected");
			$("#maindisplay").scrollTo(".ui-selected");
			return;
		}
		if(e.keyCode == 37) {
			currentselection=$("#maindisplay > .ui-selected").first();
			$("#maindisplay > div").removeClass("ui-selected");
			currentselection=currentselection.prev();
			if(currentselection.length==0) currentselection=$("#maindisplay > div").last();
			currentselection.addClass("ui-selected");
			$("#maindisplay").scrollTo(".ui-selected");
			return;
		}
		if(e.keyCode == 38) {
			currentselection=$("#maindisplay > .ui-selected").first();
			$("#maindisplay > div").removeClass("ui-selected");
			itemsperrow=Math.floor(($(window).width())/130);
			while(itemsperrow>0) {
				itemsperrow=itemsperrow-1;
				currentselection=currentselection.prev();
			}
			if(currentselection.length==0) currentselection=$("#maindisplay > div").first();
			currentselection.addClass("ui-selected");
			$("#maindisplay").scrollTo(".ui-selected");
			return;
		}
		if(e.keyCode == 40) {
			currentselection=$("#maindisplay > .ui-selected").last();
			$("#maindisplay > div").removeClass("ui-selected");
			itemsperrow=Math.floor(($(window).width())/130);
			while(itemsperrow>0) {
				itemsperrow=itemsperrow-1;
				currentselection=currentselection.next();
			}
			if(currentselection.length==0) currentselection=$("#maindisplay > div").last();
			currentselection.addClass("ui-selected");
			$("#maindisplay").scrollTo(".ui-selected");
			return;
		}
		if(e.keyCode == 65 && e.ctrlKey) {
			$("#maindisplay > div").removeClass("ui-selected").addClass("ui-selected");
			updatePropSWindow();
			return;
		}
		if(e.keyCode == 67 && e.ctrlKey) {
			execCopy();
			return;
		}
		if(e.keyCode == 88 && e.ctrlKey) {
			execCut();
			return;
		}
		if(e.keyCode == 86 && e.ctrlKey) {
			execPaste();
			return;
		}
		if(e.keyCode == 13) {
			execOpen();
			return;
		}
		letter=String.fromCharCode(e.keyCode).toLowerCase();
		if(new Date().getTime()-lastkeyuptest>500) {
			lastkeyupstring=letter;
			candidates=$("#maindisplay > div").filter(function () {
				return $(this).text().indexOf(letter) == 0;
			});
		} else {
			candidates=$("#maindisplay > div").filter(function () {
				return $(this).text().indexOf(lastkeyupstring+letter) == 0;
			});
			if(letter!=lastkeyupstring) lastkeyupstring=lastkeyupstring+letter;
		}
		currentselection=$("#maindisplay > .ui-selected").last();
		$("#maindisplay > div").removeClass("ui-selected");
		while(true) {
			currentselection=currentselection.next();
			if(currentselection.length==0) break;
			if(candidates.is(currentselection)) { currentselection.addClass("ui-selected"); break; }
		}
		if($(".ui-selected").length==0) candidates.first().addClass("ui-selected");
		updatePropSWindow();
		lastkeyuptest=new Date().getTime();
	});
	$(document).keydown(function(e) {
		if((e.keyCode == 65 && e.ctrlKey) || (e.keyCode == 9) || (e.keyCode == 38) || (e.keyCode == 40)) {
			e.preventDefault();
		}
	});
	$(document).click(function () {
		$("#contextmenu").hide(100);
	});
	$("#maindisplay").scroll(function () {
		$("#contextmenu").hide(100);
	});
	$(document).bind("contextmenu", function(e) {
		e.preventDefault();
		if($("#maindisplay:hover").length==0) return;
		if($("#maindisplay > div:hover").length==0) {
			//$("#maindisplay > div").removeClass("ui-selected");
		} else if(!$("#maindisplay > div:hover").hasClass("ui-selected")) {
			$("#maindisplay > div").removeClass("ui-selected");
			$("#maindisplay > div:hover").addClass("ui-selected");
		}
		if(e.pageX+200 < $("#maindisplay").width()-20) {
			$("#contextmenu").css("left", e.pageX);
			$("#contextmenu").css("right", "auto");
		} else {
			$("#contextmenu").css("left", "auto");
			$("#contextmenu").css("right", $("#maindisplay").width()-e.pageX);
		}
		$("#contextmenu").css("top", e.pageY);
		$("#contextmenu").css("bottom", "auto");
		$("#contextmenu").empty();
		if($(".ui-selected").length>0) {
			if($(".ui-selected").length==1) {
				$("#contextmenu").append("<strong><a href='javascript: execOpen();'>Open</a></strong>");
				$("#contextmenu").append("<a href='javascript: execShow();'>Show on web</a>");
				$("#contextmenu").append("<a href='javascript: execRename();'>Rename</a>");
			}
			$("#contextmenu").append("<a href='javascript: execDelete();'>Delete</a>");
			$("#contextmenu").append("<a href='javascript: execPerms();'>Permissions</a>");
			$("#contextmenu").append("<hr style='border: 0; border-top:1px solid #ddd; margin: 0;'>");
			$("#contextmenu").append("<a href='javascript: execCut();'>Cut</a>");
			$("#contextmenu").append("<a href='javascript: execCopy();'>Copy</a>");
			$("#contextmenu").append("<a href='javascript: execPaste();'>Paste</a>");
			$("#contextmenu").append("<hr style='border: 0; border-top:1px solid #ddd; margin: 0;'>");
			allzips=true;
			$(".ui-selected").each(function(i,e) {
				if(!$(e).text().toLowerCase().endsWith(".zip")) allzips=false;
			});
			if(allzips) $("#contextmenu").append("<a href='javascript: execExtract();'>Extract Zip</a>");
			else $("#contextmenu").append("<a href='javascript: execAddZip();'>Add to Zip</a>");
		} else {
			$("#contextmenu").append("<a href='javascript: newFile();'>New File</a>");
			$("#contextmenu").append("<a href='javascript: newFolder();'>New Folder</a>");
			$("#contextmenu").append("<a href='javascript: execPaste();'>Paste</a>");
		}
		if($("#contextmenu").height()+e.pageY>$( window ).height()) {
			$("#contextmenu").css("top", "auto");
			$("#contextmenu").css("bottom", $( window ).height()-e.pageY);
		}
		$("#contextmenu").show(100);
	});
});
</script>
</body>
</html>
<?php
}
?>