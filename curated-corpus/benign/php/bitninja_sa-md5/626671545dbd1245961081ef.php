<?php
@require_once( "../cskeleton.php" );
$iam = substr( $_SERVER['PHP_SELF'], 1 );

$blob = PreSkeleton( $iam, 0 );
$msg = "";
$allow = Authorize( $blob, $msg );

function process( $basic )
{
    $ret = array();
    if( count( $basic ) > 0 ) {
        foreach( $basic as $value ) {
            if( is_dir( $value ) ) {
                if( (strpos( $value, "Control" ) === FALSE) and (strpos( $value, ".htaccess") === FALSE) ) {
                    $subdir = glob( $value . "/*" );
                    $subset = process( $subdir );
                    if( count( $subset ) > 0 ) {
                        foreach( $subset as $svalue ) {
                            array_push( $ret, $svalue );
                        }
                    }
                }
            }
            else {
                array_push( $ret, $value );
            }
        }
    }
    return( $ret );
}

function cprocess( $basic )
{
    $ret = array();
    if( count( $basic ) > 0 ) {
        foreach( $basic as $value ) {
            if( is_dir( $value ) ) {
                if( strpos( $value, ".htaccess") === FALSE ) {
                    $subdir = glob( $value . "/*" );
                    $subset = process( $subdir );
                    if( count( $subset ) > 0 ) {
                        foreach( $subset as $svalue ) {
                            array_push( $ret, $svalue );
                        }
                    }
                }
            }
            else {
                array_push( $ret, $value );
            }
        }
    }
    return( $ret );
}


if( $allow == 1 ) {
    require_once( "../dwtb.php" );
    clearstatcache();

    $usr = "";
    $pwd = "";
    if( !empty( $_POST['usr'] ) ) {
        $usr = trim(FieldTest( $_POST['usr'], 50, 0 ));
    }
    if( !empty( $_POST['pwd'] ) ) {
        $pwd = trim($_POST['pwd']);
    }

    $systemlist = array( "siteinfo.dat", "appinfo.dat", "masterlayout.dat", "customlayout.dat", "customlayout1.dat", "customlayout2.dat", "info.txt",
                         "pagetable.dat", "skeleton.css", "edges.dat", "robots.txt", "siteinfo.txt",
                         ".htaccess" );

    $res = "";
    $editmarkfile = $strippath . "/Control/editmark.txt";

    if( !empty( $_POST['usr'] ) and !empty( $_POST['pwd'] )) {
        if( !empty( $_POST['data'] ) ) {
            if( $_POST['data'] != 2 ) {

                $filepile = array();
                foreach( $systemlist as $value ) {
                    $realfn = $strippath . "/" . $value;
                    $altfn = $fixpath . $value;
                    if( $_POST['data'] == 1 ) {
                      if( file_exists( $realfn ) ) {
                        array_push( $filepile, array( 0=>$realfn, $altfn ) );
                      }
                    }
                    else if( $_POST['data'] == 3 ) {
                      if( file_exists( $altfn ) ) {
                        array_push( $filepile, array( 0=>$realfn, $altfn ) );
                      }
                    }
                }

                if( $_POST['data'] == 1 ) {
                  $datalist = glob( $strippath . "/customlayout*.dat" );
                  foreach( $datalist as $value ) {
                    $basefn = substr( $value, strrpos( $value, "/" ));
                    $realfn = $value;
                    $altfn = $fixpath . $basefn;
                    if( file_exists( $realfn ) ) {
                      array_push( $filepile, array( 0=>$realfn, $altfn ) );
                    }
                  }
                }
                if( $_POST['data'] == 3 ) {
                  $datalist = glob( $fixpath . "customlayout*.dat" );
                  foreach( $datalist as $value ) {
                    $basefn = substr( $value, strrpos( $value, "/" ));
                    $altfn = $value;
                    $realfn = $strippath . $basefn;
                    if( file_exists( $altfn ) ) {
                      array_push( $filepile, array( 0=>$realfn, $altfn ) );
                    }
                  }
                  $datalist = glob( $fixpath . "*.xml" );
                  foreach( $datalist as $value ) {
                    $basefn = substr( $value, strrpos( $value, "/" ));
                    $altfn = $value;
                    $realfn = $strippath . $basefn;
                    if( file_exists( $altfn ) ) {
                      array_push( $filepile, array( 0=>$realfn, $altfn ) );
                    }
                  }
                }

                if( $_POST['data'] == 1 ) {     // FROM live
                    $datalist = glob( $strippath . "/data/*" );
                    foreach( $datalist as $value ) {
                        $basefn = substr( $value, strrpos( $value, "/" ));
                        $realfn = $value;
                        $altfn = $fixpath . "data" . $basefn;
                        array_push( $filepile, array( 0=>$realfn, $altfn ) );
                    }
                    $datalist = glob( $strippath . "/images/*" );
                    foreach( $datalist as $value ) {
                        $basefn = substr( $value, strrpos( $value, "/" ));
                        $realfn = $value;
                        $altfn = $fixpath . "images" . $basefn;
                        array_push( $filepile, array( 0=>$realfn, $altfn ) );
                    }

                    foreach( $filepile as $value ) {
                        $infn = $value[0];
                        $outfn = $value[1];
                        @unlink( $outfn );
                        @copy( $infn, $outfn );
                        @chmod( $outfn, 0777 );
                    }
                    $res = "<h3>Get FROM Live completed</h3>";
                    $now = time();
                    $fh = @fopen( $editmarkfile, "w+" );
                    if( $fh != FALSE ) {
                        fwrite( $fh, $now );
                        fclose( $fh );
                    }
                    else {
                        $res .= "Could not write to " . $editmarkfile;
                    }

                }
                else if( $_POST['data'] == 3 ) {    // TO live
                    $editmarkval = 0;
                    if( file_exists( $editmarkfile ) ) {
                        $editmarkval = file_get_contents( $editmarkfile );
                    }
                    $datalist = glob( $fixpath . "data/*" );
                    foreach( $datalist as $value ) {
                        $basefn = substr( $value, strrpos( $value, "/" ));
                        $altfn = $value;
                        $realfn = $strippath . "/data" . $basefn;
                        array_push( $filepile, array( 0=>$realfn, $altfn ) );
                    }
                    $datalist = glob( $fixpath . "images/*" );
                    foreach( $datalist as $value ) {
                        $basefn = substr( $value, strrpos( $value, "/" ));
                        $altfn = $value;
                        $realfn = $strippath . "/images" . $basefn;
                        array_push( $filepile, array( 0=>$realfn, $altfn ) );
                    }

                    $dontmark = 0;
                    $srv = $_SERVER['SERVER_NAME'];
                   	$connid = ftp_connect( $srv );
                    if( $connid == FALSE ) {
                     	$connid = ftp_connect( "ftp." . $srv );
                    }
                    if( $connid != FALSE ) {
                    	$logres = @ftp_login( $connid, $usr, $pwd );
                        if( $logres != FALSE ) {
                            ftp_pasv( $connid, TRUE );
                            foreach( $filepile as $value ) {
                                $comp = @stat( $value[1] );
                                if( $comp['mtime'] > $editmarkval ) {
                                    $realfn = substr( $value[0], strlen( $ftproot ));
                                    $sentit = @ftp_put( $connid, $realfn, $value[1], FTP_BINARY );
                                    if( $sentit === FALSE ) {
                                        $res .= "!!! put of " . $realfn . " (from " . $value[1] . ") failed<br>";
                                        $dontmark = 1;
                                    }
                                    else {
                                        $res .= "+ " . $realfn . " was updated<br>";
                                        if( (strpos( $realfn, "appinfo.dat" ) !== FALSE) or (strpos( $realfn, "siteinfo.dat" ) !== FALSE) ) {
                                          $basefn = substr( $value[0], strrpos( $value[0], "/" ));
                                          $tmpfn =  $strippath . "/Control" . $basefn;
                                          $realfn = substr( $tmpfn, strlen( $ftproot ));
                                          $sentit = @ftp_put( $connid, $realfn, $value[1], FTP_BINARY );
                                          if( $sentit === FALSE ) {
                                            $res .= "!!! put of " . $realfn . " (from " . $value[1] . ") failed<br>";
                                            $dontmark = 1;
                                          }
                                          else {
                                            $res .= "...a copy was saved to Control area<br>";
                                          }
                                        }
                                    }
                                }
                            }
                        }
                        else {
                        	$res .= "<h3>Login (" . $usr . "/" . $pwd . ") Failed</h3>";
                          $dontmark = 1;
                        }
                        ftp_close( $connid );
                        $res .= "<h3>Post TO Live completed</h3>";
                        if( $dontmark == 0 ) {
                          $now = time();
                          $fh = @fopen( $editmarkfile, "w+" );
                          if( $fh != FALSE ) {
                              fwrite( $fh, $now );
                              fclose( $fh );
                          }
                          else {
                              $res .= "Could not write to " . $editmarkfile;
                          }
                        }
                        else {
                          $res .= "edit/mark file NOT updated";
                        }

                    }
                    else {
                    	$res .= "<h3>Connect (" . $srv . ") Failed</h3>";
                    }
                }
            }
        }
        if( !empty($_POST['lock']) ) {
            if( $_POST['lock'] != 2 ) {
                $rawflst = glob( $fixpath . "*" );
                $fulllist = cprocess( $rawflst );
                if( $_POST['lock'] == 1 ) {         // make 644
                    $srv = $_SERVER['SERVER_NAME'];
                  	$connid = ftp_connect( $srv );
                    if( $connid == FALSE ) {
                     	$connid = ftp_connect( "ftp." . $srv );
                    }
                    if( $connid != FALSE ) {
                    	$logres = ftp_login( $connid, $usr, $pwd );
                        $look = ftp_pwd( $connid );
                        if( $logres != FALSE ) {
                            ftp_pasv( $connid, TRUE );
                            foreach( $fulllist as $value ) {
                                $file = substr( $value, strlen( $ftproot ) );
                                $sentit = ftp_site( $connid, "chmod 0644 " . $file );
                                if( $sentit === FALSE ) {
                                    $res .= "chmod of " . $value . " (" . $file . ") failed<br>";
                                }
                            }
                        }
                        else {
                        	$res .= "<h3>Login (" . $usr . "/" . $pwd . ") Failed</h3>";
                        }
                        ftp_close( $connid );
                        $res .= "<h3>Lock completed</h3>";
                    }
                    else {
                    	$res .= "<h3>Connect (" . $srv . ") Failed</h3>";
                    }
                }
                else if( $_POST['lock'] == 3 ) {    // make 777
                    $srv = $_SERVER['SERVER_NAME'];
                  	$connid = ftp_connect( $srv );
                    if( $connid == FALSE ) {
                     	$connid = ftp_connect( "ftp." . $srv );
                    }
                    if( $connid != FALSE ) {
                    	$logres = ftp_login( $connid, $usr, $pwd );
                        if( $logres != FALSE ) {
                            ftp_pasv( $connid, TRUE );
                            foreach( $fulllist as $value ) {
                                $file = substr( $value, strlen( $strippath )-12 );
                                $sentit = ftp_site( $connid, "chmod 0777 " . $file );
                                if( $sentit === FALSE ) {
                                    $res .= "chmod of " . $value . " (" . $file . ") failed<br>";
                                }
                            }
                        }
                        else {
                        	$res .= "<h3>Login (" . $usr . "/" . $pwd . ") Failed</h3>";
                        }
                        ftp_close( $connid );
                        $res .= "<h3>Unlock completed</h3>";
                    }
                    else {
                    	$res .= "<h3>Connect (" . $srv . ") Failed</h3>";
                    }
                }
            }
        }
        if( !empty( $_POST['action'] ) ) {
            if( strcasecmp( $_POST['action'], "deltemp" ) == 0 ) {
                $rawflst = glob( $fixpath . "*" );
                $fulllist = cprocess( $rawflst );
                foreach( $fulllist as $value ) {
                    unlink( $value );
                }
            }
        }
    }
    else {
      Note( "User and/or password was blank.  No action was taken" );
    }

    if( file_exists( "../temp/siteinfo.dat" ) ) {
        $efo = "populated";
        $fh = @fopen( $editmarkfile, "r+" );
        if( $fh != FALSE ) {
            $now = "";
            $now = @fread( $fh, 40 );
            $asof = date( "Y-m-d H:i:s", $now );
            $efo .= " " . $asof;
            fclose( $fh );
        }

    }
    else {
        $efo = "empty";
    }

    print "<h2>Load and save site customizations</h2>
    *Note: editing folder is " . $efo . "*<br>" .
    $res . "</br>
    <table border=2 bordercolor=\"" . $blob['app']['ManageSitesBorders'] . "\" cellpadding=4 style=\"border-collapse: collapse;\">
    <tr><td>
    <table><tr><td style=\"vertical-align: top;\">
    <form method=\"post\">
    <br>User: <input type=\"text\" name=\"usr\" value=\"" . $usr . "\">
    <br>Pass: <input type=\"password\" name=\"pwd\" value=\"" . $pwd . "\">
    <br><b>Data: </b><ul><li>Load FROM live: <input type=\"radio\" name=\"data\" value=\"1\"></li>
    <li>Keep as-is: <input type=\"radio\" name=\"data\" value=\"2\" checked></li>
    <li>Save TO live: <input type=\"radio\" name=\"data\" value=\"3\"></li></ul>
    <br><input type=\"submit\" value=\"Do this\">
    </form></td></tr></table>
    </td><td width=\"200px\">&nbsp;</td><td style=\"vertical-align: top; background: rgb(255,0,0);\">
    <table border=0 bordercolor=\"#FF0000\" style=\"border-collapse: collapse;\" cellpadding=0 cellspacing=0><tr><td style=\"vertical-align: top; background: rgb(255,0,0);\">
    <form method=\"post\">
    <br>User: <input type=\"text\" name=\"usr\" value=\"" . $usr . "\">
    <br>Pass: <input type=\"password\" name=\"pwd\" value=\"" . $pwd . "\">
    <br>Delete temp data: <input type=\"checkbox\" name=\"action\" value=\"deltemp\">
    <br><input type=\"submit\" value=\"DELETE TEMP FOLDER?\" style=\"font-weight: bold; color: #CC3333;\">
    </form></td></tr></table>
    </td></tr></table>";
}

PostSkeleton( $blob );
?>
