<?php

class CookieControl
{

    public function __construct()
    {
        // set has_set_cookies_a to true
        $this->setCookie([
            'name' => 'has_set_cookies_a',
            'value' => 'true',
            'expiry' => time() + 265*24*60*60
        ]);
    }

    public function isAjax()
    {
        if(!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest') {
            return true;
        }

        return false;

    }

    public function setCookie($cookie)
    {
        setcookie($cookie['name'], $cookie['value'], $cookie['expiry'], "/");
    }

    public function setCookies(array $cookies)
    {
        foreach($cookies as $cookie) {
            $this->setCookie($cookie);
        }
    }

    public function declineCookies(array $cookies)
    {
        foreach($cookies as $cookie) {
            setcookie($cookie['name'], "", time() - 60*60, "/");
        }
    }

    public function getFunctionalCookies()
    {
        return [
            [
                'name' => 'gdpr_analytics_a',
                'value' => 'true',
                'expiry' => time() + 365*24*60*60
            ],
            [
                'name' => 'gdpr_video_a',
                'value' => 'true',
                'expiry' => time() + 365*24*60*60
            ],
        ];
    }
}

$cookieControl = new CookieControl;
$cookies_functional = isset($_POST['cookies-functional']) ? $_POST['cookies-functional'] : '';


if( $cookies_functional == 'on' ) {
    $cookieControl->setCookies($cookieControl->getFunctionalCookies());
    $response = 'functional cookies have been set';

} else {
    $cookieControl->declineCookies($cookieControl->getFunctionalCookies());
    $response = 'functional cookies have been declined.';
}

// output response depending on request type
if( $cookieControl->isAjax() ) {
    echo json_encode($response);
} else {
    echo $response;
    // provide link back to site
    header("Location: https://www.ncheurope.com");
}