<?php
/*session_start();
require_once 'class.user.php';
$user_home = new USER();*/


function sernumz()
{
    $template   = 'xx999';
    $k = strlen($template);
    $sernum = '';
    for ($i=0; $i<$k; $i++)
    {
        switch($template[$i])
        {
            case 'x': $sernum .= chr(rand(65,90)); break;
            case '9': $sernum .= rand(0,9); break;
        }
    }
    return $sernum;
}

    /**
    * try it
    */

for ($i=0; $i < 1; $i++)
	$orderid = sernumz();

$alert=0;
if($user_home->is_logged_in() =="")
{
	$user_home->redirect('../');
}
$stmt = $user_home->runQuery("SELECT * FROM tblusers WHERE userid=:uid");
$stmt->execute(array(":uid"=>$_SESSION['userSession']));
$row = $stmt->fetch(PDO::FETCH_ASSOC);
$adminname = $row['adminname'];
$username = $row['username'];
$usertype = $row['usertype'];
$uploadsno = $row['serviceno'];
$midsession = $row['membersid'];
$accountstatus = $row['status'];
$idtypestatus = $row['idstatus'];

if($usertype == 'user6'){
$stmt = $user_home->runQuery("SELECT * FROM tblthriff WHERE memberid=:sid");
$stmt->execute(array(":sid"=>$_SESSION['membersid']));
$row = $stmt->fetch(PDO::FETCH_ASSOC);
    if($stmt->rowCount()>0){
$bankname = $row['bank'];
$accnumber = $row['accnum'];
    }
    
$stmt = $user_home->runQuery("SELECT tblusers.*,tblthriff.* FROM tblthriff,tblusers WHERE tblthriff.memberid=tblusers.membersid");
$stmt->execute(array());
$rowcheck = $stmt->fetchAll();
    if(count($rowcheck) > 0){
        foreach($rowcheck as $rowchecks){
            $amtsave = $rowchecks['amtsave'];
            $memid = $rowchecks['memberid'];
            if($amtsave >= 1000){
$stmt = $user_home->runQuery("UPDATE tblusers SET status='Active' WHERE membersid=:sid");
$stmt->bindparam(":sid",$memid);
$stmt->execute();  
            }
        }
    }
    
$stmtpass = $user_home->runQuery("SELECT personnel.*, paymentdata.* FROM personnel,paymentdata WHERE personnel.memberid=paymentdata.memberid AND paymentdata.description='2.5% Processing Fee' AND paymentdata.memberid=:mid");
$stmtpass->execute(array(":mid"=>$midsession));
$rowp = $stmtpass->fetch(PDO::FETCH_ASSOC);
    if($stmtpass->rowCount() > 0){
$passport = $rowp['passport'];
    }
}
$stmt = $user_home->runQuery("SELECT * FROM tblusers");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$personnel = $stmt->rowCount();

$stmt = $user_home->runQuery("SELECT * FROM tblthriff WHERE memberid =:sid");
$stmt->execute(array(":sid"=>$_SESSION['membersid']));
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() > 0){
$mysavings = $row0['amtsave'];
}else{
    $mysavings = 0;
}

$stmt = $user_home->runQuery("SELECT * FROM tblthriff WHERE memberid =:sid");
$stmt->execute(array(":sid"=>$_SESSION['membersid']));
$rowwithdrawn = $stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() > 0){
$mywithdrawals = $rowwithdrawn['totalwithdrawn'];
}else{
    $mywithdrawals = 0;
}
$stmt = $user_home->runQuery("SELECT * FROM tbladfare WHERE memberid =:sid");
$stmt->execute(array(":sid"=>$_SESSION['membersid']));
$rowadfare = $stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() > 0){
$myadfare = $rowadfare['amount'];
}else{
    $myadfare = 0;
}
$stmt = $user_home->runQuery("SELECT * FROM applications WHERE sessionid=:sid AND repaid = 'No'");
$stmt->execute(array(":sid"=>$_SESSION['userSession']));
$row0outloan = $stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() > 0){
$myoutstandingloan = ($row0outloan['amountapproved'] + (0.055 * $row0outloan['amountapproved'])) - $row0outloan['amountpaid'];
}else{
    $myoutstandingloan = 0;
}

$stmt = $user_home->runQuery("SELECT * FROM applications WHERE sessionid=:sid AND repaid = 'Yes'");
$stmt->execute(array(":sid"=>$_SESSION['userSession']));
$row0outloan = $stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() > 0){
$mypastloans = ($row0outloan['amountapproved'] + (0.055 * $row0outloan['amountapproved'])) - $row0outloan['amountpaid'];
}else{
    $mypastloans = 0;
}

$stmt = $user_home->runQuery("SELECT * FROM tblallocation WHERE memberid =:sid");
$stmt->execute(array(":sid"=>$_SESSION['membersid']));
$rowallocation = $stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() > 0){
$myallocation = $rowadfare['qty'];
}else{
    $myallocation = 0;
}

$stmt = $user_home->runQuery("SELECT * FROM notification");
$stmt->execute(array());
$rowallocation = $stmt->fetch(PDO::FETCH_ASSOC);
$noticeboard = $stmt->rowCount();

$stmt = $user_home->runQuery("SELECT * FROM applications WHERE approve = 'Verified'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$approveapp = $stmt->rowCount();

$stmt = $user_home->runQuery("SELECT * FROM applications WHERE approve = 'Approved' OR approve = 'Denied'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$treatedapp = $stmt->rowCount();

$stmt = $user_home->runQuery("SELECT * FROM applications");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$children = $stmt->rowCount();



$stmt = $user_home->runQuery("SELECT * FROM children");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$allchildren = $stmt->rowCount();

$stmt = $user_home->runQuery("SELECT * FROM tblusers WHERE username != 'greatriversnet@yahoo.co.uk'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$allusers = $stmt->rowCount();

$stmt = $user_home->runQuery("SELECT * FROM children WHERE status = 'Approve'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$approvechildren = $stmt->rowCount();

$regtime = date("D, F j");
$stmt = $user_home->runQuery("SELECT SUM(amount) AS totalamt FROM paymentdata WHERE transactiondate LIKE '%$regtime%'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$payouts = number_format($row0['totalamt']);

$regtime = date("M");
$stmt = $user_home->runQuery("SELECT SUM(amount) AS totalamt FROM paymentdata WHERE sortdate LIKE '%$regtime%'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$payouts1 = number_format($row0['totalamt']);

$regtime = date("Y");
$stmt = $user_home->runQuery("SELECT SUM(amount) AS totalamt FROM paymentdata WHERE sortdate LIKE '%$regtime%'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$payouts2 = number_format($row0['totalamt']);

$regtime = date("D, F j");
$stmt = $user_home->runQuery("SELECT SUM(amount) AS totalamt FROM payment WHERE sortday LIKE '%$regtime%' AND description = 'Loan Disbursement'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$payouts3 = number_format($row0['totalamt']);

$regtime = date("M");
$stmt = $user_home->runQuery("SELECT SUM(amount) AS totalamt FROM payment WHERE sorttime LIKE '%$regtime%' AND description = 'Loan Disbursement'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$payouts4 = number_format($row0['totalamt']);

$regtime = date("Y");
$stmt = $user_home->runQuery("SELECT SUM(amount) AS totalamt FROM payment WHERE sorttime LIKE '%$regtime%' AND description = 'Loan Disbursement'");
$stmt->execute(array());
$row0 = $stmt->fetch(PDO::FETCH_ASSOC);
$payouts5 = number_format($row0['totalamt']);

if(isset($_POST['submit'])){
	$name = $_POST['fullname'];
	$memberid = $_POST['memberid'];
	$gender = $_POST['gender'];
    $maidenname = $_POST['maidenname'];
    $religion = $_POST['religion'];
	$address = $_POST['address'];
	$oaddress = $_POST['oaddress'];
	$nationality = $_POST['nationality'];
	$lga = $_POST['lga'];
	$state = $_POST['state'];
	$dob = $_POST['dob'];
    
	$nokname = $_POST['nokname'];
    $rel = $_POST['rel'];
    $kphone = $_POST['kphone'];
    $kaddress = $_POST['kaddress'];
    $kemail = $_POST['kemail'];
    
    $vision = $_POST['vision'];
    $occupation = $_POST['occupation'];
    $howcome = $_POST['howcome'];
    $furn = $_POST['furn'];
    
	$regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");
	
	$stmt = $user_home->runQuery("SELECT * FROM personnel WHERE memberid=:no");
	$stmt->execute(array(":no"=>$memberid));
	$row=$stmt->fetch(PDO::FETCH_ASSOC);
	if($stmt->rowCount() > 0)
	{
		$alert = 6;
	}else{
	
	$imgFile = $_FILES['passport']['name'];
	$tmp_dir = $_FILES['passport']['tmp_name'];
	$imgSize = $_FILES['passport']['size'];
	
	$imgFile2 = $_FILES['signature']['name'];
	$tmp_dir2 = $_FILES['signature']['tmp_name'];
	$imgSize2 = $_FILES['signature']['size'];
        
    $imgExt = strtolower(pathinfo($imgFile,PATHINFO_EXTENSION)); // get image extension
	$imgExt2 = strtolower(pathinfo($imgFile2,PATHINFO_EXTENSION)); // get image extension
    
   // valid image extensions
    $valid_extensions = array('jpeg', 'jpg', 'png', 'gif', 'pdf'); // valid extensions
  
   // rename uploading image
    $userpic = rand(1000,1000000).".".$imgExt;
	$userpic2 = rand(1000,1000000).".".$imgExt2;
    
    $upload_dir = 'photos/'.$userpic; // upload directory
	$upload_dir2 = 'photos/'.$userpic2; // upload directory
    // allow valid image file formats
if(in_array($imgExt, $valid_extensions) && in_array($imgExt2, $valid_extensions)){   
     move_uploaded_file($tmp_dir,$upload_dir);
	 move_uploaded_file($tmp_dir2,$upload_dir2);
     
	$stmt = $user_home->runQuery("INSERT INTO personnel(name,memberid,gender,religion,maidenname,address,oaddress,nationality,lga,state,dob,passport,signature,nokname,regtime,sorttime,rel,kphone,kemail,kaddress,vision,occupation,howcome,furn,sessionid) VALUES(:name, :memberid, :gender, :religion, :maidenname, :address, :oaddress, :nationality, :lga, :state, :dob, :passport, :signature, :nokname, :regtime, :sorttime, :rel, :kphone, :kemail, :kaddress, :vision, :occupation, :howcome, :furn, :sid)");
	$stmt->bindparam(":name",$name);
	$stmt->bindparam(":memberid",$memberid);
    $stmt->bindparam(":gender",$gender);
	$stmt->bindparam(":religion",$religion);
    $stmt->bindparam(":maidenname",$maidenname);
	$stmt->bindparam(":address",$address);
	$stmt->bindparam(":oaddress",$oaddress);
	$stmt->bindparam(":nationality",$nationality);
	$stmt->bindparam(":lga",$lga);
	$stmt->bindparam(":state",$state);
	$stmt->bindparam(":dob",$dob);
    $stmt->bindparam(":passport",$upload_dir);
	$stmt->bindparam(":signature",$upload_dir2);

	$stmt->bindparam(":nokname",$nokname);
	$stmt->bindparam(":regtime",$regtime);
	$stmt->bindparam(":sorttime",$sorttime);
	$stmt->bindparam(":rel",$rel);
	$stmt->bindparam(":kphone",$kphone);
    $stmt->bindparam(":kemail",$kemail);
    $stmt->bindparam(":kaddress",$kaddress);
    
    $stmt->bindparam(":vision",$vision);
    $stmt->bindparam(":occupation",$occupation);
    $stmt->bindparam(":howcome",$howcome);
    $stmt->bindparam(":furn",$furn);
    $stmt->bindparam(":sid",$_SESSION['userSession']);
	$stmt->execute();
	$lastid = $user_home->lastID();
    
    $stmt = $user_home->runQuery("INSERT INTO activities(memberid,action,actiontime) VALUES(:mid, 'Submitted Membership Form', :time)");
	$stmt->bindparam(":mid",$_SESSION['membersid']);
	$stmt->bindparam(":time",$regtime);
	$stmt->execute();
    
	$alert = 1;
}else{
	$alert = 5;
}
}
}

if(isset($_POST['application'])){
	$loanamt = $_POST['loanamt'];
	$myloan = $_POST['myloan'];
    $duration = $_POST['duration'];
	$regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");
    $gphone = $_POST['gphone'];
    $gaddress = $_POST['gaddress'];
    $gbaddress = $_POST['gbaddress'];
    $gname = $_POST['gname'];
    
    if($loanamt > $myloan){
        $alert = 7;
    }else{	
	$stmt = $user_home->runQuery("SELECT * FROM applications WHERE sessionid=:sid AND repaid='No'");
	$stmt->execute(array(":sid"=>$_SESSION['userSession']));
	$row=$stmt->fetch(PDO::FETCH_ASSOC);
	if($stmt->rowCount() > 0)
	{
		$alert = 6;
	}else{
	
	$stmt = $user_home->runQuery("INSERT INTO applications(sessionid,gname,gaddress,gbaddress,gphone,amountreq,duration,apptime,appsorttime) VALUES(:sid, :gname, :gaddress, :gbaddress, :gphone, :amountreq, :duration, :apptime, :appsorttime)");
	$stmt->bindparam(":sid",$_SESSION['userSession']);
    $stmt->bindparam(":gname",$gname);
    $stmt->bindparam(":gaddress",$gaddress);
	$stmt->bindparam(":gbaddress",$gbaddress);
	$stmt->bindparam(":gphone",$gphone);
	$stmt->bindparam(":amountreq",$loanamt);
	$stmt->bindparam(":duration",$duration);
    $stmt->bindparam(":apptime",$regtime);
	$stmt->bindparam(":appsorttime",$sorttime);
	$stmt->execute();
	$lastid = $user_home->lastID();
        
    $stmt = $user_home->runQuery("INSERT INTO activities(memberid,action,actiontime) VALUES(:mid, 'Applied for loan of $loanamt', :time)");
	$stmt->bindparam(":mid",$_SESSION['membersid']);
	$stmt->bindparam(":time",$regtime);
	$stmt->execute();
    
	$alert = 1;
}
}
}

if(isset($_POST['savings'])){
	$email = $_POST['email'];
    $phone = $_POST['phone'];
    $_SESSION['phone'] = $phone;
    $amount = $_POST['amt'];
    $memberid = $_POST['memberid'];
    $_SESSION['amount'] = $amount;
    $_SESSION['memberid'] = $memberid;
    $_SESSION['orderid'] = $_POST['orderid'];
    $reference = $_POST['orderid'];
    $regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");
    if($amount < 2500){
    $sums = round($amount / (1 - 0.015));
    }else{
        $sums = round(($amount + 100) / (1 - 0.015));
    }
    $amtcharged = $sums-$amount;
    if($amtcharged < 2000){
        $sum = $sums;
    }else{
        $sum = $amount + 2000;
    }
    $realamt = $amount-100;
    
/*$stmt = $user_home->runQuery("SELECT * FROM tblthriff WHERE sessionid=:sid");
$stmt->execute(array(":sid"=>$_SESSION['userSession']));
$rowss=$stmt->fetch(PDO::FETCH_ASSOC);
    if($stmt->rowCount() > 0){
$amtts = $rowss['amountpaid'];
   
$stmt = $user_home->runQuery("INSERT INTO tblthriff(sessionid,ref,amtsave,timesave,savesorttime) VALUES(:mid, :ref, :amt, :time, :savetime)");
	$stmt->bindparam(":mid",$_SESSION['userSession']);
	$stmt->bindparam(":ref",$reference);
    $stmt->bindparam(":amt",$realamt);
	$stmt->bindparam(":time",$regtime);
	$stmt->bindparam(":savetime",$sorttime);
	$stmt->execute();
    $lastid = $user_home->lastID();*/
    
	$url = "https://api.paystack.co/transaction/initialize";
  $fields = [
    'email' => $email,
    'amount' => $sum * 100,
    'reference' => $reference,
    //'split_code' => "SPL_vTFFyh0aid",
    //'subaccount' => "ACCT_wvm4tsbqxteiu8q, ACCT_bhr58p585y8yp4z, ACCT_nmm3q7xuf1fcdn4, ACCT_c4w8fz41sl9bmat, ACCT_hk0vycb315e8dbt, ACCT_n14xyztb06ux7zj",
    'callback_url' => "http://localhost/oursalte/securedend/?file=thriff"
    //'callback_url' => "https://oursalte.org/securedend/?file=thriff"
      
  ];
  $fields_string = http_build_query($fields);
  //open connection
  $ch = curl_init();
  
  //set the url, number of POST vars, POST data
  curl_setopt($ch,CURLOPT_URL, $url);
  curl_setopt($ch,CURLOPT_POST, true);
  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(
    //"Authorization: Bearer sk_live_62afed1e0a6a80249e6d4c1be97e2c806f488b5c",
    "Authorization: Bearer sk_test_95c6bac71bf30d6ecff79ca8d2e0273ff8ef1523",
    "Cache-Control: no-cache",
  ));
  
  //So that curl_exec returns the contents of the cURL; rather than echoing it
  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); 
  
  //execute post
  $result = curl_exec($ch);
  //echo $result;
  $tranx = json_decode($result, true);

$checkout = $tranx['data']['authorization_url'];
echo
				"<script type=\"text/javascript\" >
					window.location = '$checkout'
	 			</script>";
}

if(isset($_POST['repay'])){
	$email = $_POST['email'];
    $phone = $_POST['phone'];
    $loanid = $_POST['loanid'];
    $_SESSION['phone'] = $phone;
    $amount = $_POST['amt'] + 100;
    $memberid = $_POST['memberid'];
    $_SESSION['amount'] = $amount;
    $_SESSION['memberid'] = $memberid;
    $_SESSION['orderid'] = $_POST['orderid'];
    $reference = $_SESSION['orderid'];
    $regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");
    if($amount < 2500){
    $sums = round($amount / (1 - 0.015));
    }else{
        $sums = round(($amount + 100) / (1 - 0.015));
    }
    $amtcharged = $sums-$amount;
    if($amtcharged < 2000){
        $sum = $sums;
    }else{
        $sum = $amount + 2000;
    }
    $realamt = $amount-100;

$stmt = $user_home->runQuery("SELECT * FROM applications WHERE repaid='No' AND sessionid=:sid");
$stmt->execute(array(":sid"=>$_SESSION['userSession']));
$rowss=$stmt->fetch(PDO::FETCH_ASSOC);
$amtts = $rowss['amountpaid'];
            
if($amtts == ($rowss['amountapproved'] + (0.055 * $rowss['amountapproved']))){
    $alert = 11;
}else{   
$stmt = $user_home->runQuery("INSERT INTO repayment(loanid,sessionid,amount,ref,regtime,sorttime) VALUES(:lid, :sid, :amt, :ref, :regtime, :sorttime)");
	$stmt->bindparam(":lid",$loanid);
    $stmt->bindparam(":sid",$_SESSION['userSession']);
	$stmt->bindparam(":amt",$realamt);
	$stmt->bindparam(":ref",$reference);
	$stmt->bindparam(":regtime",$regtime);
	$stmt->bindparam(":sorttime",$sorttime);
	$stmt->execute();
    $lastid = $user_home->lastID();
    
	$url = "https://api.paystack.co/transaction/initialize";
  $fields = [
    'email' => $email,
    'amount' => $sum * 100,
    'reference' => $reference,
    //'split_code' => "SPL_vTFFyh0aid",
    //'subaccount' => "ACCT_wvm4tsbqxteiu8q, ACCT_bhr58p585y8yp4z, ACCT_nmm3q7xuf1fcdn4, ACCT_c4w8fz41sl9bmat, ACCT_hk0vycb315e8dbt, ACCT_n14xyztb06ux7zj",
    'callback_url' => "http://localhost/oursalte/securedend/?file=repay"
    //'callback_url' => "https://oursalte.org/securedend/?file=repay"
      
  ];
  $fields_string = http_build_query($fields);
  //open connection
  $ch = curl_init();
  
  //set the url, number of POST vars, POST data
  curl_setopt($ch,CURLOPT_URL, $url);
  curl_setopt($ch,CURLOPT_POST, true);
  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(
    //"Authorization: Bearer sk_live_62afed1e0a6a80249e6d4c1be97e2c806f488b5c",
    "Authorization: Bearer sk_test_95c6bac71bf30d6ecff79ca8d2e0273ff8ef1523",
    "Cache-Control: no-cache",
  ));
  
  //So that curl_exec returns the contents of the cURL; rather than echoing it
  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); 
  
  //execute post
  $result = curl_exec($ch);
  //echo $result;
  $tranx = json_decode($result, true);

$checkout = $tranx['data']['authorization_url'];
echo
				"<script type=\"text/javascript\" >
					window.location = '$checkout'
	 			</script>";
}
}

if(isset($_POST['profee'])){
	$email = $_POST['email'];
    $phone = $_POST['phone'];
    $_SESSION['phone'] = $phone;
    $amount = $_POST['amt'] + 100;
    $memberid = $_POST['memberid'];
    $_SESSION['amount'] = $amount;
    $_SESSION['memberid'] = $memberid;
    $_SESSION['orderid'] = $_POST['orderid'];
    $reference = $_SESSION['orderid'];
    $regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");
    if($amount < 2500){
    $sums = round($amount / (1 - 0.015));
    }else{
        $sums = round(($amount + 100) / (1 - 0.015));
    }
    $amtcharged = $sums-$amount;
    if($amtcharged < 2000){
        $sum = $sums;
    }else{
        $sum = $amount + 2000;
    }
    $realamt = $amount-100;
    $_SESSION['realamt'] = $realamt;

$stmt = $user_home->runQuery("SELECT * FROM applications WHERE processingfee='Paid' AND sessionid=:sid");
$stmt->execute(array(":sid"=>$_SESSION['userSession']));
$rowss=$stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() > 0){
    $alert = 11;
}else{      
	$url = "https://api.paystack.co/transaction/initialize";
  $fields = [
    'email' => $email,
    'amount' => $sum * 100,
    'reference' => $reference,
    //'split_code' => "SPL_vTFFyh0aid",
    //'subaccount' => "ACCT_wvm4tsbqxteiu8q, ACCT_bhr58p585y8yp4z, ACCT_nmm3q7xuf1fcdn4, ACCT_c4w8fz41sl9bmat, ACCT_hk0vycb315e8dbt, ACCT_n14xyztb06ux7zj",
    //'callback_url' => "http://localhost/duetime/?file=processingFee"
    'callback_url' => "https://duetimeuyo.org/?file=processingFee"
      
  ];
  $fields_string = http_build_query($fields);
  //open connection
  $ch = curl_init();
  
  //set the url, number of POST vars, POST data
  curl_setopt($ch,CURLOPT_URL, $url);
  curl_setopt($ch,CURLOPT_POST, true);
  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(
    //"Authorization: Bearer sk_live_62afed1e0a6a80249e6d4c1be97e2c806f488b5c",
    "Authorization: Bearer sk_test_65d59dd6e666a083291b0baf86f846770aeb4687",
    "Cache-Control: no-cache",
  ));
  
  //So that curl_exec returns the contents of the cURL; rather than echoing it
  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); 
  
  //execute post
  $result = curl_exec($ch);
  //echo $result;
  $tranx = json_decode($result, true);

$checkout = $tranx['data']['authorization_url'];
echo
				"<script type=\"text/javascript\" >
					window.location = '$checkout'
	 			</script>";
}
}

if(isset($_POST['profeesave'])){
	$email = $_POST['email'];
    $phone = $_POST['phone'];
    $_SESSION['phone'] = $phone;
    $amount = $_POST['amt'];
    $memberid = $_POST['memberid'];
    $_SESSION['amount'] = $amount;
    $_SESSION['memberid'] = $memberid;
    $_SESSION['orderid'] = $_POST['orderid'];
    $reference = $_SESSION['orderid'];
    $regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");

$stmt = $user_home->runQuery("SELECT * FROM tblthriff WHERE sessionid=:sid AND amtsave >= :amt");
$stmt->execute(array(":sid"=>$_SESSION['userSession'],":amt"=>$amount));
$rowss=$stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() == 0){
    $alert = 11;
}else{      
	$bal = $rowss['amtsave'] - $amount;
$stmt = $user_home->runQuery("UPDATE tblthriff SET amtsave=:amt WHERE sessionid=:sid");
$stmt->bindparam(":amt",$bal);
$stmt->bindparam(":sid",$_SESSION['userSession']);
$stmt->execute();

$description = "2.5% Processing Fee";
$sortday = date("D, F j, Y");
$stmt = $user_home->runQuery("INSERT INTO paymentdata(email,memberid,ref,description,amount,status,transactiondate,jsondata,sortdate,sortday) VALUES(:email, :mid, 'Paid with Thrift Savings', :desc, :amount, 'Paid with Savings', :tdate, 'Paid with Thrift Savings', :sortdate, :sortday)");
     	 $stmt->bindparam(":email",$username);
         $stmt->bindparam(":mid",$_SESSION['memberid']);
		 $stmt->bindparam(":desc",$description);
		 $stmt->bindparam(":amount",$amount);
		 $stmt->bindparam(":tdate",$regtime);
		 $stmt->bindparam(":sortdate",$sorttime);
         $stmt->bindparam(":sortday",$sortday);
		 $stmt->execute();
            
$stmt = $user_home->runQuery("UPDATE applications SET processingfee='Paid' WHERE sessionid=:sid");
$stmt->bindparam(":sid",$_SESSION['userSession']);
$stmt->execute();
    
    echo
			"<script type=\"text/javascript\" >
				alert(\"Payment of Processing Fee is successful. Pay 10% Security Deposit now.\");
				window.location = '?file=securityFee'
				</script>";
}
}

if(isset($_POST['repaysave'])){
	$email = $_POST['email'];
    $phone = $_POST['phone'];
    $loanid = $_POST['loanid'];
    $_SESSION['phone'] = $phone;
    $amount = $_POST['amt'];
    $memberid = $_POST['memberid'];
    $_SESSION['amount'] = $amount;
    $_SESSION['memberid'] = $memberid;
    $_SESSION['orderid'] = $_POST['orderid'];
    $reference = $_SESSION['orderid'];
    $regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");
    
$stmt = $user_home->runQuery("SELECT * FROM applications WHERE repaid='No' AND sessionid=:sid");
$stmt->execute(array(":sid"=>$_SESSION['userSession']));
$rowssx=$stmt->fetch(PDO::FETCH_ASSOC);
$amtts = $rowssx['amountpaid'];

$stmt = $user_home->runQuery("SELECT * FROM tblthriff WHERE memberid=:sid AND amtsave >= :amt");
$stmt->execute(array(":sid"=>$_SESSION['membersid'],":amt"=>$amount));
$rowss=$stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() == 0){
    $alert = 12;
}elseif($amtts == ($rowssx['amountapproved'] + (0.055 * $rowssx['amountapproved']))){
    $alert = 11;
}else{      
	$bal = $rowss['amtsave'] - $amount;
$stmt = $user_home->runQuery("UPDATE tblthriff SET amtsave=:amt WHERE memberid=:sid");
$stmt->bindparam(":amt",$bal);
$stmt->bindparam(":sid",$_SESSION['membersid']);
$stmt->execute();

$description = "Loan Repayment";
$sortday = date("D, F j, Y");
$stmt = $user_home->runQuery("INSERT INTO paymentdata(email,memberid,ref,description,amount,status,transactiondate,jsondata,sortdate,sortday) VALUES(:email, :mid, 'Paid with My Savings', :desc, :amount, 'Paid with Savings', :tdate, 'Paid with Thrift Savings', :sortdate, :sortday)");
     	 $stmt->bindparam(":email",$username);
         $stmt->bindparam(":mid",$_SESSION['memberid']);
		 $stmt->bindparam(":desc",$description);
		 $stmt->bindparam(":amount",$amount);
		 $stmt->bindparam(":tdate",$regtime);
		 $stmt->bindparam(":sortdate",$sorttime);
         $stmt->bindparam(":sortday",$sortday);
		 $stmt->execute();
    
    $stmt = $user_home->runQuery("INSERT INTO repayment(loanid,sessionid,amount,ref,status,regtime,sorttime) VALUES(:lid, :sid, :amt, :ref, 'Paid with My Savings', :regtime, :sorttime)");
	$stmt->bindparam(":lid",$loanid);
    $stmt->bindparam(":sid",$_SESSION['userSession']);
	$stmt->bindparam(":amt",$amount);
	$stmt->bindparam(":ref",$reference);
	$stmt->bindparam(":regtime",$regtime);
	$stmt->bindparam(":sorttime",$sorttime);
	$stmt->execute();
    
$stmt = $user_home->runQuery("INSERT INTO activities(memberid,action,actiontime) VALUES(:mid, 'Loan Repayment of $amount', :time)");
$stmt->bindparam(":mid",$_SESSION['membersid']);
$stmt->bindparam(":time",$regtime);
$stmt->execute();
    
$stmt = $user_home->runQuery("SELECT * FROM applications WHERE repaid='No' AND sessionid=:sid");
$stmt->execute(array(":sid"=>$_SESSION['userSession']));
$rows=$stmt->fetch(PDO::FETCH_ASSOC);
$amtt = $rows['amountpaid'];
$amountapproved = $rows['amountapproved'];
            
$bal = $amtt + $amount;
            
$stmt = $user_home->runQuery("UPDATE applications SET amountpaid=:amtt WHERE sessionid=:sid");
$stmt->bindparam(":amtt",$bal);
$stmt->bindparam(":sid",$_SESSION['userSession']);
$stmt->execute();
            
$stmt = $user_home->runQuery("SELECT * FROM applications WHERE repaid='No' AND sessionid=:sid");
$stmt->execute(array(":sid"=>$_SESSION['userSession']));
$rowss=$stmt->fetch(PDO::FETCH_ASSOC);
$amtts = $rowss['amountpaid'];
            
if($amtts == $amountapproved + (0.055 * $rowss['amountapproved'])){
$stmt = $user_home->runQuery("UPDATE applications SET repaid='Yes' WHERE sessionid=:sid AND repaid='No'");
$stmt->bindparam(":sid",$_SESSION['userSession']);
$stmt->execute();
}
    
    
    echo
			"<script type=\"text/javascript\" >
				alert(\"Transaction was successful.\");
				window.location = '?file=repay'
				</script>";
}
}

if(isset($_POST['secdepsave'])){
	$email = $_POST['email'];
    $phone = $_POST['phone'];
    $_SESSION['phone'] = $phone;
    $amount = $_POST['amt'];
    $memberid = $_POST['memberid'];
    $_SESSION['amount'] = $amount;
    $_SESSION['memberid'] = $memberid;
    $_SESSION['orderid'] = $_POST['orderid'];
    $reference = $_SESSION['orderid'];
    $regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");

$stmt = $user_home->runQuery("SELECT * FROM tblthriff WHERE sessionid=:sid AND amtsave >= :amt");
$stmt->execute(array(":sid"=>$_SESSION['userSession'],":amt"=>$amount));
$rowss=$stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() == 0){
    $alert = 11;
}else{      
	$bal = $rowss['amtsave'] - $amount;
$stmt = $user_home->runQuery("UPDATE tblthriff SET amtsave=:amt WHERE sessionid=:sid");
$stmt->bindparam(":amt",$bal);
$stmt->bindparam(":sid",$_SESSION['userSession']);
$stmt->execute();

$description = "10% Security Deposit";
$sortday = date("D, F j, Y");
$stmt = $user_home->runQuery("INSERT INTO paymentdata(email,memberid,ref,description,amount,status,transactiondate,jsondata,sortdate,sortday) VALUES(:email, :mid, 'Paid with Thrift Savings', :desc, :amount, 'Paid with Savings', :tdate, 'Paid with Thrift Savings', :sortdate, :sortday)");
     	 $stmt->bindparam(":email",$username);
         $stmt->bindparam(":mid",$_SESSION['memberid']);
		 $stmt->bindparam(":desc",$description);
		 $stmt->bindparam(":amount",$amount);
		 $stmt->bindparam(":tdate",$regtime);
		 $stmt->bindparam(":sortdate",$sorttime);
         $stmt->bindparam(":sortday",$sortday);
		 $stmt->execute();
            
$stmt = $user_home->runQuery("UPDATE applications SET securitydeposit='Paid' WHERE sessionid=:sid");
$stmt->bindparam(":sid",$_SESSION['userSession']);
$stmt->execute();
    
    echo
			"<script type=\"text/javascript\" >
				alert(\"Payment of Security Deposit is successful. Print Receipts now.\");
				window.location = '?file=receipts'
				</script>";
}
}

if(isset($_POST['secdep'])){
	$email = $_POST['email'];
    $phone = $_POST['phone'];
    $_SESSION['phone'] = $phone;
    $amount = $_POST['amt'] + 100;
    $memberid = $_POST['memberid'];
    $_SESSION['amount'] = $amount;
    $_SESSION['memberid'] = $memberid;
    $_SESSION['orderid'] = $_POST['orderid'];
    $reference = $_SESSION['orderid'];
    $regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");
    if($amount < 2500){
    $sums = round($amount / (1 - 0.015));
    }else{
        $sums = round(($amount + 100) / (1 - 0.015));
    }
    $amtcharged = $sums-$amount;
    if($amtcharged < 2000){
        $sum = $sums;
    }else{
        $sum = $amount + 2000;
    }
    $realamt = $amount-100;
    $_SESSION['realamt'] = $realamt;

$stmt = $user_home->runQuery("SELECT * FROM applications WHERE securitydeposit='Paid' AND sessionid=:sid");
$stmt->execute(array(":sid"=>$_SESSION['userSession']));
$rowss=$stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() > 0){
    $alert = 11;
}else{      
	$url = "https://api.paystack.co/transaction/initialize";
  $fields = [
    'email' => $email,
    'amount' => $sum * 100,
    'reference' => $reference,
    //'split_code' => "SPL_vTFFyh0aid",
    //'subaccount' => "ACCT_wvm4tsbqxteiu8q, ACCT_bhr58p585y8yp4z, ACCT_nmm3q7xuf1fcdn4, ACCT_c4w8fz41sl9bmat, ACCT_hk0vycb315e8dbt, ACCT_n14xyztb06ux7zj",
    //'callback_url' => "http://localhost/duetime/?file=securityFee"
    'callback_url' => "https://duetimeuyo.org/?file=securityFee"
      
  ];
  $fields_string = http_build_query($fields);
  //open connection
  $ch = curl_init();
  
  //set the url, number of POST vars, POST data
  curl_setopt($ch,CURLOPT_URL, $url);
  curl_setopt($ch,CURLOPT_POST, true);
  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);
  curl_setopt($ch, CURLOPT_HTTPHEADER, array(
    //"Authorization: Bearer sk_live_62afed1e0a6a80249e6d4c1be97e2c806f488b5c",
    "Authorization: Bearer sk_test_65d59dd6e666a083291b0baf86f846770aeb4687",
    "Cache-Control: no-cache",
  ));
  
  //So that curl_exec returns the contents of the cURL; rather than echoing it
  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); 
  
  //execute post
  $result = curl_exec($ch);
  //echo $result;
  $tranx = json_decode($result, true);

$checkout = $tranx['data']['authorization_url'];
echo
				"<script type=\"text/javascript\" >
					window.location = '$checkout'
	 			</script>";
}
}

if(isset($_POST['withdraw'])){
	$email = $_POST['email'];
    $phone = $_POST['phone'];
    $_SESSION['phone'] = $phone;
    $amount = $_POST['amt'];
    $bank = $_POST['bank'];
    $accnums = $_POST['accnum'];
    $memberid = $_POST['memberid'];
    $_SESSION['amount'] = $amount;
    $_SESSION['memberid'] = $memberid;
    $_SESSION['orderid'] = $_POST['orderid'];
    $reference = $_SESSION['orderid'];
    $regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");

$stmt = $user_home->runQuery("SELECT * FROM tblthriff WHERE membersid=:sid AND amtsave >= :amt");
$stmt->execute(array(":sid"=>$_SESSION['membersid'],":amt"=>$amount));
$rowss=$stmt->fetch(PDO::FETCH_ASSOC);
if($stmt->rowCount() == 0){
    $alert = 11;
}else{      
	$bal = $rowss['amtsave'] - $amount;
    $pendingwithdraw = $rowss['withdrawrequest'] + $amount;
$stmt = $user_home->runQuery("UPDATE tblthriff SET amtsave=:amt, requeststatus='Pending', withdrawrequest=:wamt, requesttime=:rtime, requestsorttime=:rstime, bank=:bank, accnum=:acc WHERE memberid=:sid");
$stmt->bindparam(":amt",$bal);
$stmt->bindparam(":wamt",$pendingwithdraw);
$stmt->bindparam(":rtime",$regtime);
$stmt->bindparam(":rstime",$sorttime);
$stmt->bindparam(":bank",$bank);
$stmt->bindparam(":acc",$accnums);
$stmt->bindparam(":sid",$_SESSION['membersid']);
$stmt->execute();

$description = "Debit";
$sortday = date("D, F j, Y");
$stmt = $user_home->runQuery("INSERT INTO paymentdata(email,memberid,ref,description,amount,status,transactiondate,jsondata,sortdate,sortday) VALUES(:email, :mid, 'Debit', :desc, :amount, 'Debit', :tdate, 'Debit', :sortdate, :sortday)");
     	 $stmt->bindparam(":email",$username);
         $stmt->bindparam(":mid",$_SESSION['memberid']);
		 $stmt->bindparam(":desc",$description);
		 $stmt->bindparam(":amount",$amount);
		 $stmt->bindparam(":tdate",$regtime);
		 $stmt->bindparam(":sortdate",$sorttime);
         $stmt->bindparam(":sortday",$sortday);
		 $stmt->execute();
$stmt = $user_home->runQuery("INSERT INTO activities(memberid,action,actiontime) VALUES(:mid, 'Withdrawal of $amount', :time)");
	$stmt->bindparam(":mid",$_SESSION['membersid']);
	$stmt->bindparam(":time",$regtime);
	$stmt->execute();
    
    echo
			"<script type=\"text/javascript\" >
				alert(\"Your withdrawal request has been placed. Please, wait for at least 24hrs while we process the funds.\");
				window.location = '?file=withdraw'
				</script>";
}
}
if(isset($_POST['payout2'])){
	$ref = $_POST['ref'];
	$name = $_POST['name'];
	$mid = $_POST['mid'];
	$cheque = $_POST['cheque'];
	$amount = $_POST['amount'];
	$regtime = date("Y-m-d");
    $sortday = date("D, F j, Y");
	$sorttime = date("F, Y");
    
    $stmt = $user_home->runQuery("SELECT * FROM tblthriff WHERE ref=:ref");
    $stmt->execute(array(":ref"=>$ref));
    $row = $stmt->fetch(PDO::FETCH_ASSOC);
    $totalamt = $row['totalwithdrawn'] + $amount;
	
	$stmt = $user_home->runQuery("INSERT INTO payment(memberid,membername,ref,cheque,amount,description,paytime,paidby,sorttime,sortday) VALUES(:mid, :name, :ref, :cheque, :amount, 'Withdrawal', :regtime, :paidby, :sorttime, :sortday)");
	$stmt->bindparam(":mid",$mid);
	$stmt->bindparam(":name",$name);
	$stmt->bindparam(":ref",$ref);
    $stmt->bindparam(":cheque",$cheque);
	$stmt->bindparam(":amount",$amount);
    $stmt->bindparam(":regtime",$regtime);
	$stmt->bindparam(":paidby",$username);
	$stmt->bindparam(":sorttime",$sorttime);
    $stmt->bindparam(":sortday",$sortday);
	$stmt->execute();
	
	$stmt = $user_home->runQuery("UPDATE tblthriff SET totalwithdrawn=:amt, requeststatus='Paid', withdrawrequest='0' WHERE ref=:ref");
	$stmt->bindparam(":amt",$totalamt);
	$stmt->bindparam(":ref",$ref);
	$stmt->execute();
    
	$alert = 10;
}

if(isset($_POST['payout'])){
	$ref = $_POST['ref'];
	$name = $_POST['name'];
	$idcard = $_POST['idcard'];
	$mid = $_POST['mid'];
	$cheque = $_POST['cheque'];
	$amount = $_POST['amount'];
	$appsid = $_POST['appsid'];
	$duration = $_POST['duration'];
    $phone = $_POST['phone'];
	$regtime = date("Y-m-d");
    $sortday = date("D, F j, Y");
	$sorttime = date("F, Y");
    
$stmt = $user_home->runQuery("SELECT * FROM loan_plan WHERE months=:m");
$stmt->execute(array(":m"=>$duration));
$row = $stmt->fetch(PDO::FETCH_ASSOC);
$intrate = $row['interest_percentage'];
$penaltyrate = $row['penalty_rate'];
    
    $comm = (($intrate / 100) * $amount) * $duration;
    $penalty = ($penaltyrate / 100) * $amount;
    $duetime = date("Y-m-d", time() + $duration * 30.42*24*60*60);
	
	$stmt = $user_home->runQuery("INSERT INTO payment(memberid,membername,ref,idcard,appid,cheque,amount,duration,commission,duetime,penalty,description,paytime,paidby,sorttime,sortday) VALUES(:mid, :name, :ref, :idcard, :appid, :cheque, :amount, :dur, :comm, :duetime, :penalty, 'Loan Disbursement', :regtime, :paidby, :sorttime, :sortday)");
	$stmt->bindparam(":mid",$mid);
	$stmt->bindparam(":name",$name);
	$stmt->bindparam(":ref",$ref);
	$stmt->bindparam(":idcard",$idcard);
	$stmt->bindparam(":appid",$appsid);
	$stmt->bindparam(":cheque",$cheque);
	$stmt->bindparam(":amount",$amount);
    $stmt->bindparam(":dur",$duration);
    $stmt->bindparam(":comm",$comm);
    $stmt->bindparam(":duetime",$duetime);
    $stmt->bindparam(":penalty",$penalty);
	$stmt->bindparam(":regtime",$regtime);
	$stmt->bindparam(":paidby",$username);
	$stmt->bindparam(":sorttime",$sorttime);
    $stmt->bindparam(":sortday",$sortday);
	$stmt->execute();
	
	$stmt = $user_home->runQuery("UPDATE applications SET approve='Approved', amountapproved=:amt, approvedby=:aby, duration=:dur, duetime=:due, starttime=:start, charge=:charge, penalty=:penalty WHERE appsid=:mid");
	$stmt->bindparam(":amt",$amount);
    $stmt->bindparam(":aby",$username);
    $stmt->bindparam(":dur",$duration);
    $stmt->bindparam(":due",$duetime);
    $stmt->bindparam(":start",$regtime);
    $stmt->bindparam(":charge",$comm);
    $stmt->bindparam(":penalty",$penalty);
	$stmt->bindparam(":mid",$appsid);
	$stmt->execute();
    
/******************************************************************************** Sample code for sending SMS through HTTP API.  Author: Ayodeji Ajala, iDevWorks Technologies Limited <deji@idevorks.com>  Application granted only for SMSLive247 customers. ********************************************************************************/   
/* Variables with the values to be sent. */  
$username2="greatriverss"; 
$password2="christ";  
$recipient= $phone;   /* destination number */  
$sender="Duetime";   /* sender id */  
$message="We are glad to inform you that your loan is Approved!";  /* message to be sent */   
/* create the required URL */   
$url = "http://api.smartsmssolutions.com/smsapi.php?"  
. "&username=" . UrlEncode($username2)  
. "&password=" . UrlEncode($password2)
. "&recipient=" . UrlEncode($recipient)
. "&sender=" . UrlEncode($sender)  
. "&message=" . UrlEncode($message);   
/* call the URL */   
if ($f = @fopen($url, "r"))  { 
$answer = fgets($f, 255); 
if (substr($answer, 0, 1) == "+") {  
//echo "SMS to $dnr was successful.";  
}  else  {  
//echo "an error has occurred: [$answer].";  
}  
}  else  {  
//echo "Error: URL could not be opened.";  
}
	$alert = 10;
}


if(isset($_POST['change'])){
	$newpass = sha1($_POST['password']);
	$regtime = date("D, F j, Y g:i:sA");
    
	$stmt = $user_home->runQuery("UPDATE tblusers SET password=:pass WHERE userid=:uid");
	$stmt->bindparam(":pass",$newpass);
	$stmt->bindparam(":uid",$_SESSION['userSession']);
	$stmt->execute();
    
    $stmt = $user_home->runQuery("INSERT INTO activities(memberid,action,actiontime) VALUES(:mid, 'Changed Password', :time)");
	$stmt->bindparam(":mid",$_SESSION['membersid']);
	$stmt->bindparam(":time",$regtime);
	$stmt->execute();
	$user_home->logout();	
	$user_home->redirect('./');
}
if(isset($_POST['setpin'])){
	$newpin = $_POST['pin'];
	$regtime = date("D, F j, Y g:i:sA");
    
	$stmt = $user_home->runQuery("UPDATE tblusers SET pin=:pin WHERE userid=:uid");
	$stmt->bindparam(":pin",$newpin);
	$stmt->bindparam(":uid",$_SESSION['userSession']);
	$stmt->execute();
    
    $stmt = $user_home->runQuery("INSERT INTO activities(memberid,action,actiontime) VALUES(:mid, 'Changed PIN', :time)");
	$stmt->bindparam(":mid",$_SESSION['membersid']);
	$stmt->bindparam(":time",$regtime);
	$stmt->execute();
    
    $alert = 14;
}

if(isset($_POST['setemail'])){
	$newemail = $_POST['email'];
	$regtime = date("D, F j, Y g:i:sA");
    
	$stmt = $user_home->runQuery("UPDATE tblusers SET username=:email WHERE userid=:uid");
	$stmt->bindparam(":email",$newemail);
	$stmt->bindparam(":uid",$_SESSION['userSession']);
	$stmt->execute();
    
    $stmt = $user_home->runQuery("INSERT INTO activities(memberid,action,actiontime) VALUES(:mid, 'Updated Email', :time)");
	$stmt->bindparam(":mid",$_SESSION['membersid']);
	$stmt->bindparam(":time",$regtime);
	$stmt->execute();
    
    $alert = 14;
}
if(isset($_POST['submitaccount'])){
	$accnum = $_POST['accnum'];
    $bank = $_POST['bank'];
    $regtime = date("D, F j, Y g:i:sA");
	
	$stmt = $user_home->runQuery("UPDATE tblusers SET accnum=:accnum,bank=:bank WHERE userid=:uid");
	$stmt->bindparam(":accnum",$accnum);
    $stmt->bindparam(":bank",$bank);
	$stmt->bindparam(":uid",$_SESSION['userSession']);
	$stmt->execute();
    $stmt = $user_home->runQuery("INSERT INTO activities(memberid,action,actiontime) VALUES(:mid, 'Submited Account Details: $accnum, $bank', :time)");
	$stmt->bindparam(":mid",$_SESSION['membersid']);
	$stmt->bindparam(":time",$regtime);
	$stmt->execute();
    
    $alert = 14;
}
if(isset($_POST['uploadid'])){
	$idtype = $_POST['idtype'];
    $regtime = date("D, F j, Y g:i:sA");
    
    $imgFile = $_FILES['idcard']['name'];
	$tmp_dir = $_FILES['idcard']['tmp_name'];
	$imgSize = $_FILES['idcard']['size'];
    
    $imgExt = strtolower(pathinfo($imgFile,PATHINFO_EXTENSION)); // get image extension
	
   // valid image extensions
    $valid_extensions = array('jpeg', 'jpg', 'png', 'gif', 'pdf'); // valid extensions
  
   // rename uploading image
    $userpic = rand(1000,1000000).".".$imgExt;
	
    $upload_dir = 'photos/'.$userpic; // upload directory
   // allow valid image file formats
if(in_array($imgExt, $valid_extensions) && $imgSize <= 50000){
    move_uploaded_file($tmp_dir,$upload_dir);
	
	$stmt = $user_home->runQuery("UPDATE tblusers SET idtype=:idtype,idupload=:idupload,idstatus='Submitted' WHERE userid=:uid");
	$stmt->bindparam(":idtype",$idtype);
    $stmt->bindparam(":idupload",$upload_dir);
	$stmt->bindparam(":uid",$_SESSION['userSession']);
	$stmt->execute();
    
    $stmt = $user_home->runQuery("INSERT INTO activities(memberid,action,actiontime) VALUES(:mid, 'Uploaded Idcard type: $idtype', :time)");
	$stmt->bindparam(":mid",$_SESSION['membersid']);
	$stmt->bindparam(":time",$regtime);
	$stmt->execute();
    $alert = 14;
}else{
    $alert = 15;
}
}

if(isset($_POST['createuser'])){
	$name = $_POST['firstname'].' '.$_POST['lastname'];
	$email = $_POST['email'];
	$newusertype = $_POST['usertype'];
	$regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");
	
	$pass = sha1($orderid);
	
	$stmt = $user_home->runQuery("INSERT INTO tblusers(username,password,adminname,membersid,usertype,regtime,sorttime) VALUES(:uname, :pass, :name, 'ADMIN', :utype, :regtime, :sorttime)");
	$stmt->bindparam(":uname",$email);
	$stmt->bindparam(":pass",$pass);
	$stmt->bindparam(":name",$name);
	$stmt->bindparam(":utype",$newusertype);
	$stmt->bindparam(":regtime",$regtime);
	$stmt->bindparam(":sorttime",$sorttime);
	$stmt->execute();
	
error_reporting(E_ALL ^ E_NOTICE ^ E_DEPRECATED ^ E_STRICT);
ini_set("include_path", '/home/duetimeu/php:' . ini_get("include_path") );	
require_once "Mail.php"; // PEAR Mail package
require_once ('Mail/mime.php'); // PEAR Mail_Mime packge

	
	$message = "An account has been created for you on Duetime Uyo, MPCS Portal.  The Admin will brief you further.  Meanwhile, your login details are: \n
	Username: $email
	Password: $orderid \n
	
	Best Regards
	ICT Team
	support@duetimeuyo.org";

 $from = "noreply@duetimeuyo.org"; //enter your email address
 $to = "$email"; //enter the email address of the contact your sending to
 $subject = "Confidential Email"; // subject of your email

$headers = array ('From' => $from,'To' => $to, 'Subject' => $subject);

$text = "$message"; // text versions of email.
$html = ""; // html versions of email.

$crlf = "\n";

$mime = new Mail_mime($crlf);
$mime->setTXTBody($text);
$mime->setHTMLBody($html);

//do not ever try to call these lines in reverse order
$body = $mime->get();
$headers = $mime->headers($headers);

 $host = "localhost"; // all scripts must use localhost
 $username = "mails@duetimeuyo.org"; //  your email address (same as webmail username)
 $password = "Christ@2209_"; // your password (same as webmail password)

$smtp = Mail::factory('smtp', array ('host' => $host, 'auth' => true,
'username' => $username,'password' => $password));

$mail = $smtp->send($to, $headers, $body);

if (PEAR::isError($mail)) {
echo("<p>" . $mail->getMessage() . "</p>");
}
else {

	//$alert=1;
//echo("<p>Message successfully sent!</p>");
// header("Location: http://www.example.com/");

}
	$alert = 11;
}

if(isset($_POST['submitcharges'])){
	$dur = $_POST['dur'];
	$charge = $_POST['charge'];
	$penalty = $_POST['penalty'];
	$regtime = date("D, F j, Y g:i:sA");
	$sorttime = date("F, Y");
	
	$stmt1 = $user_home->runQuery("SELECT * FROM loan_plan WHERE months=:m");
	$stmt1->execute(array(":m"=>$dur));
	$row=$stmt1->fetch(PDO::FETCH_ASSOC);
    if($stmt1->rowCount() > 0){
        $alert=12;
    }else{	
	$stmt = $user_home->runQuery("INSERT INTO loan_plan(months,interest_percentage,penalty_rate) VALUES(:months, :int, :rate)");
	$stmt->bindparam(":months",$dur);
	$stmt->bindparam(":int",$charge);
	$stmt->bindparam(":rate",$penalty);
	$stmt->execute();
	$alert = 13;
	
}
}
?>

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">
        <meta name="description" content="">
        <meta name="author" content="">
        <title>::. SALTE Management System ::.</title>
        <link href="css/style.default.css" rel="stylesheet">
        <link href="css/morris.css" rel="stylesheet">
        <link href="css/select2.css" rel="stylesheet" />
        <link href="css/style.datatables.css" rel="stylesheet">
        <link href="css/dataTables.responsive.css" rel="stylesheet">
        <link href="css/bootstrap-timepicker.min.css" rel="stylesheet" />
        <link href="css/jquery.tagsinput.css" rel="stylesheet" />
        <link href="css/toggles.css" rel="stylesheet" />
        <link href="css/dropzone.css" rel="stylesheet" />
        <link href="https://cdn.datatables.net/buttons/1.2.2/css/buttons.dataTables.min.css" rel="stylesheet" />

        <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!--[if lt IE 9]>
        <script src="js/html5shiv.js"></script>
        <script src="js/respond.min.js"></script>
        <![endif]-->
        
    <script type="text/javascript">
    function PrintContent()
    {
    var DocumentContainer = document.getElementById('prints');
    var WindowObject = window.open('', "PrintWindow", "width=960,height=650,top=50,left=50,toolbars=no,scrollbars=yes,status=no,resizable=yes");
    WindowObject.document.writeln(DocumentContainer.innerHTML);
    WindowObject.document.close();
    WindowObject.focus();
    WindowObject.print();
    WindowObject.close();
    }
    </script>
    </head>

    <body>
        
        <header>
            <div class="headerwrapper">
                <div class="header-left">
                    <a href="javascript:void(0);" class="logo">
                       <?php if($usertype=='user6'){?>
                        <img src="images/logo2.png" alt="" /> 
                        <?php }else{?>
                        <img src="images/logo.png" alt="" />
                        <?php } ?>
                    </a>
                    <div class="pull-right">
                        <a href="" class="menu-collapse">
                            <i class="fa fa-bars"></i>
                        </a>
                    </div>
                </div><!-- header-left -->
                
                <div class="header-right">
                    
                    <div class="pull-right">
                        
                        <div class="btn-group btn-group-option">
                            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"><?php if($usertype=='user6'){?>User Settings <?php }else{?> Admin Settings <?php } ?>
                              <i class="fa fa-caret-down"></i>
                            </button>
                            <ul class="dropdown-menu pull-right" role="menu">
                            <?php if($accountstatus == 'Active'){?>
                              <li><a href="?file=account"><i class="fa fa-cog"></i> Account Setting</a></li>
                            <?php } ?>
                              <?php if($usertype=='user1'){?>
                              <li><a href="?file=reports"><i class="fa fa-book"></i> All Reports</a></li>
                              <?php } ?>
                              <li class="divider"></li>
                              <li><a href="?file=logout"><i class="fa fa-power-off"></i>Sign Out</a></li>
                            </ul>
                        </div><!-- btn-group -->
                        
                    </div><!-- pull-right -->
                    
                </div><!-- header-right -->
                
            </div><!-- headerwrapper -->
        </header>
        
        <section>
            <div class="mainwrapper">
                