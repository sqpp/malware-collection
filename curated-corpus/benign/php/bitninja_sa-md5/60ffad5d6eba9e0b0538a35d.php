<?php
$role = $_SESSION["role"];
if (!isset($_SESSION["userid"])){
    header("location:../../logout.php");
}
//for uploading excel sheet
use PhpOffice\PhpSpreadsheet\IOFactory;


if (isset($_POST["Submit"])){
	if (toStr(decrypt($_GET['content'])) == "manage_fees"){
		if (toStr(decrypt($_GET['e'])) == "delete"){
			$mainClass->delete("payment", "Rrr", $_POST['rrr']);
		}
		elseif (toStr(decrypt($_GET['e'])) == "generaterrr"){
			generateRRR($mainClass, $_POST['schoolid'], $_POST['modeofentry']);
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "users") { 
		if(toStr(decrypt($_GET['up'])) == "activate"  ) { 
			$mainClass->activate($_POST['userid'], $_POST['active']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "addusers"  ) { 
			$mainClass->registerUser($_POST['login'], $_POST['password'], $_POST['confirm'], $_POST['surname'], $_POST['firstname'], $_POST['othername'], $_POST['email'], $_POST['phone'], $_POST['department'], $_POST['role'], "accepted");
		}
		elseif(toStr(decrypt($_GET['up'])) == "reset"  ) { 
			$mainClass->changepassword("adminusers", "userid", $_POST['userid'], $_POST['password'], $_POST['confirm']);
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "student"){
		if(toStr(decrypt($_GET['up'])) == "regno"  ) { 
			$mainClass->changeregno($_POST['regno_old'], trim($_POST['regno_new']), trim($_POST['jambno']));
		}
		elseif(toStr(decrypt($_GET['up'])) == "reset"  ) { 
			$mainClass->changepassword("user", "username", $_POST['userid'], $_POST['password'], $_POST['confirm']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "dept"  ) { 
			//for doube major
			if ($_POST['combinationid'] == "") {
				$combid = $mainClass->getField("combination", "DepartmentID", $_POST['departmentid']);
				$_POST['combinationid'] = $combid['CombinationID'];
			}
			$mainClass->changedept("student", "", $_POST['regno'], $_POST['departmentid'], $_POST['combinationid']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "changename"  ) { 
			$mainClass->changename($_POST['regno'], trim($_POST['surname']), trim($_POST['firstname']), trim($_POST['othername']));
		}
		elseif(toStr(decrypt($_GET['up'])) == "register"  ) { 
			$mainClass->registerStudent(validate_input($_POST['username']), validate_input($_POST['password']), validate_input($_POST['regno']), $_POST['surname'], $_POST['firstname'], $_POST['othername'], $_POST['admission_year'], $_POST['photo'], $_POST['departmentid'], $_POST['combinationid'], $_POST['program'], $_POST['modeofentry']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "level"  ) { 
			$mainClass->changelevel($_POST['regno_old'], trim($_POST['newadmyear']));
		}
		elseif(toStr(decrypt($_GET['up'])) == "printsemesterform"  ) { 
			$res = $mainClass->getFieldRecord("payment", "RegNo", $_POST['regno'], "Sessionz", $_POST['sessionz'], "Purpose", "SCHOOL FEE");
			if($res['Status'] === "Paid"){
				echo '<script type="text/javascript">
				window.open("printform.php?r='.encrypt(toNum($_POST['regno'])).'&s='.encrypt(toNum($_POST['sessionz'])).'", "_blank");
				</script>';
			}else{
				$mainClass->the_msg = $_POST['regno']." School fees not paid";
			}
		}
		elseif(toStr(decrypt($_GET['up'])) == "statelga"  ) { 
			$mainClass->statelga($_POST['regno'], $_POST['state'], $_POST['lga']);
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "post_UTME_report"){
		if((isset($_POST['userid']) and $mainClass->getTotal("admission", "RegNo", $_POST['userid']) > 0) or (isset($_POST['regno']) and $mainClass->getTotal("admission", "RegNo", $_POST['regno']) > 0)){
			$admissionuser = "admissionuser";
			$admission = "admission";
			$admissiondata = "admissiondata";
		}else{
			$sessz = $mainClass->getField("sessionz", "Status", "current");
			$archive_year = substr($sessz['Sessionz'], 0, 4) - 1;
			$admissionuser = "admissionuser_".$archive_year;
			$admission = "admission_".$archive_year;
			$admissiondata = "admissiondata_".$archive_year;
		}
		if(toStr(decrypt($_GET['up'])) == "reset"  ) { 
			$mainClass->changepassword($admissionuser, "username", $_POST['userid'], $_POST['password'], $_POST['confirm']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "dept"  ) { 
			//for doube major
			if ($_POST['combinationid'] == "") {
				$combid = $mainClass->getField("combination", "DepartmentID", $_POST['departmentid']);
				$_POST['combinationid'] = $combid['CombinationID'];
			}
			$mainClass->changedept($admission, $admissiondata, $_POST['regno'], $_POST['departmentid'], $_POST['combinationid']);
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "pre_NCE_report"){
		if(toStr(decrypt($_GET['up'])) == "reset"  ) { 
			$mainClass->changepassword("prence_admissionuser", "username", $_POST['userid'], $_POST['password'], $_POST['confirm']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "dept"  ) { 
			//for doube major
			if ($_POST['combinationid'] == "") {
				$combid = $mainClass->getField("combination", "DepartmentID", $_POST['departmentid']);
				$_POST['combinationid'] = $combid['CombinationID'];
			}
			$mainClass->changedept("prence_admission", "prence_admissiondata", $_POST['regno'], $_POST['departmentid'], $_POST['combinationid']);
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "course"){
		if(toStr(decrypt($_GET['up'])) == "add"  ) { 
			$mainClass->course($_POST['semester'], $_POST['level'], $_POST['departmentid'], $_POST['coursetitle'], $_POST['coursecode'], $_POST['courseunit'], $_POST['coursestatus'], $_POST['major']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "edit"  ) { 
			$mainClass->editcourse($_POST['courseid'], $_POST['coursetitle'], $_POST['coursecode'], $_POST['courseunit'], $_POST['coursestatus'], $_POST['major']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "delete"  ) { 
			$mainClass->delete($_POST['tablename'], "CourseID", $_POST['courseid']);
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "course_specialization"){
		if(toStr(decrypt($_GET['up'])) == "add"  ) { 
			$mainClass->coursespecialization($_POST['semester'], $_POST['level'], $_POST['departmentid'], $_POST['coursetitle'], $_POST['coursecode'], $_POST['courseunit'], $_POST['coursestatus'], $_POST['major'], $_POST['specialid']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "edit"  ) { 
			$mainClass->editcoursespecialization($_POST['courseid'], $_POST['coursetitle'], $_POST['coursecode'], $_POST['courseunit'], $_POST['coursestatus'], $_POST['major']);
		}
		elseif(toStr(decrypt($_GET['up'])) == "delete"  ) { 
			$mainClass->delete($_POST['tablename'], "CourseID", $_POST['courseid']);
		}
	}
	elseif(toStr(decrypt($_GET['e'])) == "confirm_fees_payment"){
		$mainClass->updateFees($_POST['invoiceno'], $_POST['datepaid'], $_POST['table_name']);
	}
	elseif(toStr(decrypt($_GET['content'])) == "assign_course"){
		$mainClass->assignCourse($_POST['userid'], $_POST['selectedcourses']);
	}
	elseif(toStr(decrypt($_GET['content'])) == "sheet") { 
		//$mainClass->agreed_capture($_POST['reg_no'], $_POST['sessionz'], $_POST['course_code'], $_POST['q1'], $_POST['q2'], $_POST['q3'], $_POST['q4'], $_POST['q5'], $_POST['score1'], $_POST['score2'], $_POST['final_mark']);
		$mainClass->agreed_capture($_POST['reg_no'], $_POST['sessionz'], $_POST['course_code'], $_POST['course_level'], $_POST['score1'], $_POST['score2'], $_POST['final_mark']);
	}
	elseif(toStr(decrypt($_GET['content'])) == "upload") { 
		require 'template/upload/PhpSpreadsheet/vendor/autoload.php';
		$inputFileType = 'Xls';
		 
		// Count total files
		$countfiles = count($_FILES['file']['name']);
		
		$combination = $mainClass->getCombination("combination");
		//get students to match matric numbers
		$students = $mainClass->getRegno("student");
		//get current session
		$sess = $mainClass->getField("sessionz", "Status", "current");
		$sessionz = $sess["Sessionz"];

		if ($role == "Super Admin" or $role == "Admin" or $role == "Academic Level 1"){
			//assign all courses
			$all_spe_course = $mainClass->getData("course_specialization");
			$all_course = $mainClass->getData("course");	
			$all_course = array_merge($all_spe_course, $all_course);
			$lec_course = array();
			foreach ($all_course as $row) {
				array_push($lec_course, $row["CourseCode"]);
			}
			//print_r($lec_course);
		}else{
			//get all assigned courses for this lecturer
			$assigncourse = $mainClass->getField("assigncourse", "UserID", $_SESSION["userid"]);
			$courseArray = json_decode($assigncourse["CourseID"], true);	
			$lec_course = array(); $q=0;
			foreach ($courseArray as $key => $value) {
				$cours = $mainClass->getField("course", "CourseID", $value["id"]);
				array_push($lec_course, $cours["CourseCode"]);
			}
			//print_r($lec_course);
		}
		// Looping all files
		for($i = 0; $i < $countfiles; $i++){
			
			$reg_no = array();
			$department_school;
			$department_name;
			$admitted_year;
			$level;
			$semester;
			$sessionz;
			$course_code;
			$course_name;
			$course_unit;
			$combination;
			$score1 = array();
			$score2 = array();
			$final_mark = array();
			
			$inputFileName = $_FILES['file']['name'][$i];
		 

			$reader = IOFactory::createReader($inputFileType);
			try{
				
				$spreadsheet = $reader->load($_FILES['file']['tmp_name'][$i]);
				$p=0;
				foreach ($spreadsheet->getWorksheetIterator() as $worksheet){
					$highestRow = $worksheet->getHighestRow();
					//lecturers are only to upload result for the current session only
					if ($role == "Super Admin" or $role == "Admin" or $role == "Academic Level 1"){
						$sessionz = trim($worksheet->getCellByColumnAndRow(3, 8)->getValue());
					}
					$course_code = trim($worksheet->getCellByColumnAndRow(3, 10)->getValue());
					$course_level = trim($worksheet->getCellByColumnAndRow(9, 7)->getValue());
					//restrict the upload of courses to the selected course and upload restricted to Lecturers ONLY
					//if(toStr(decrypt($_GET['e'])) == $course_code){ 
					if( array_search($course_code, $lec_course, true) !== false ){
						//print_r($course_code);
						for($x=14; $x <= $highestRow; $x++){
							$reg_no[$p] = trim($worksheet->getCellByColumnAndRow(2, $x)->getValue());
							$score1[$p] = trim($worksheet->getCellByColumnAndRow(4, $x)->getCalculatedValue());
							$score2[$p] = trim($worksheet->getCellByColumnAndRow(5, $x)->getValue());
							$final_mark[$p] = trim($worksheet->getCellByColumnAndRow(6, $x)->getCalculatedValue());
							$p++;
						}
						$mainClass->agreed_capture($reg_no, $sessionz, $course_code, $course_level, $score1, $score2, $final_mark, $students, $combination);
						$msg = $mainClass->the_msg;//"Successfully uploaded result sheet(s)";
						// Upload file
						move_uploaded_file($_FILES['file']['tmp_name'][$i], 'template/upload/uploads/'.$inputFileName);
					}
					else{
			//print_r($lec_course);
						$msg = "Error uploading. You are not allowed to upload ".$course_code;
						break;
					}
				}
				
			}catch(Exception $e){
					$msg = "Error uploading. please upload an excel file ".$e->getMessage();
			}
		 
		}		
	}
	elseif(toStr(decrypt($_GET['content'])) == "upload_post_UTME" and toStr(decrypt($_GET['e'])) == "excel") { 
		require 'template/upload/PhpSpreadsheet/vendor/autoload.php';
		$inputFileType = 'Xls';
		
		$inputFileName = $_FILES['file']['name'][0];

		$reader = IOFactory::createReader($inputFileType);
		$jambno = array(); $surname = array(); $firstname = array(); $othername = array(); $state = array(); $lga = array(); $sex = array(); $email = array(); $phone = array(); $dateofbirth = array(); $photo = array(); $department = array(); $combination = array(); $program = array(); $modeofentry = array(); $jambscore = array(); $subject1 = array(); $score1 = array(); $subject2 = array(); $score2 = array(); $subject3 = array(); $score3 = array(); $subject4 = array(); $score4 = array();	
			
		try{
				
			$spreadsheet = $reader->load($_FILES['file']['tmp_name'][0]);
			$p=0;
			foreach ($spreadsheet->getWorksheetIterator() as $worksheet){
				$highestRow = $worksheet->getHighestRow();
				//$highestColumn = $worksheet->getHighestColumn(); // e.g 'F'
				//$highestColumnIndex = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::columnIndexFromString($highestColumn);
				//check columns to confirm correctness of template
				for($x=2; $x <= $highestRow; $x++){
					$jambno[$p] = trim($worksheet->getCellByColumnAndRow(1, $x)->getValue());
					$surname[$p] = trim($worksheet->getCellByColumnAndRow(2, $x)->getValue());
					$firstname[$p] = trim($worksheet->getCellByColumnAndRow(3, $x)->getValue());
					$othername[$p] = trim($worksheet->getCellByColumnAndRow(4, $x)->getValue());
					$state[$p] = trim($worksheet->getCellByColumnAndRow(5, $x)->getValue());
					$lga[$p] = trim($worksheet->getCellByColumnAndRow(6, $x)->getValue());
					$sex[$p] = trim($worksheet->getCellByColumnAndRow(7, $x)->getValue());
					$email[$p] = trim($worksheet->getCellByColumnAndRow(8, $x)->getValue());
					$phone[$p] = trim($worksheet->getCellByColumnAndRow(9, $x)->getValue());
					$dateofbirth[$p] = trim($worksheet->getCellByColumnAndRow(10, $x)->getValue());
					$photo[$p] = trim($worksheet->getCellByColumnAndRow(11, $x)->getValue());
					$department[$p] = trim($worksheet->getCellByColumnAndRow(12, $x)->getValue());
					$combination[$p] = trim($worksheet->getCellByColumnAndRow(13, $x)->getValue());
					$program[$p] = trim($worksheet->getCellByColumnAndRow(14, $x)->getValue());
					$modeofentry[$p] = trim($worksheet->getCellByColumnAndRow(15, $x)->getValue());
					$jambscore[$p] = trim($worksheet->getCellByColumnAndRow(16, $x)->getValue());
					$subject1[$p] = trim($worksheet->getCellByColumnAndRow(17, $x)->getValue());
					$score1[$p] = trim($worksheet->getCellByColumnAndRow(18, $x)->getValue());
					$subject2[$p] = trim($worksheet->getCellByColumnAndRow(19, $x)->getValue());
					$score2[$p] = trim($worksheet->getCellByColumnAndRow(20, $x)->getValue());
					$subject3[$p] = trim($worksheet->getCellByColumnAndRow(21, $x)->getValue());
					$score3[$p] = trim($worksheet->getCellByColumnAndRow(22, $x)->getValue());
					$subject4[$p] = trim($worksheet->getCellByColumnAndRow(23, $x)->getValue());
					$score4[$p] = trim($worksheet->getCellByColumnAndRow(24, $x)->getValue());	
					$p++;				
				}
				$mainClass->upload_post_UTME($jambno, $surname, $firstname, $othername, $state, $lga, $sex, $email, $phone, $dateofbirth, $photo, $department, $combination, $program, $modeofentry, $jambscore, $subject1, $score1, $subject2, $score2, $subject3, $score3, $subject4, $score4);
				$msg = "Successfully uploaded";
			}
				
		}catch(Exception $e){
			$msg = "Error uploading. please upload an excel file with .xls extension";
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "upload_post_UTME" and toStr(decrypt($_GET['e'])) == "photo") { 
	
    	// File upload configuration
    	$targetDir = "/home/fcepanks/admission.fcepankshin.ng/controller/plugin/upload/uploads/";
    	//$targetDir = "download/";
    	$allowTypes = array('jpg','png','jpeg','gif');
	    
		if(!empty(array_filter($_FILES['file']['name']))){
			foreach($_FILES['file']['name'] as $key=>$val){
				// File upload path
				$fileName = basename($_FILES['file']['name'][$key]);
				$targetFilePath = $targetDir . $fileName;
				
				// Check whether file type is valid
				$fileType = pathinfo($targetFilePath,PATHINFO_EXTENSION);
				if(in_array($fileType, $allowTypes)){
					// Upload file to server
					if(move_uploaded_file($_FILES["file"]["tmp_name"][$key], $targetFilePath)){
						$msg = "Successfully uploaded";
					}else{
						$msg = "Error uploading ".$_FILES['file']['name'][$key].", ";
					}
				}else{
					$msg = "File type error ".$_FILES['file']['name'][$key].", ";
				}
			}
		}else{
			$msg = 'Please select a file to upload.';
		}
		
		//remove spaces from files
		//foreach (array_filter(glob("download/*.jpg") ,"is_file") as $f){
		foreach (array_filter(glob("/home/fcepanks/admission.fcepankshin.ng/controller/plugin/upload/uploads/*.jpg") ,"is_file") as $f){
  			rename ($f, str_replace(" ", "", $f));
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "import_student") { 
		require 'template/upload/PhpSpreadsheet/vendor/autoload.php';
		$inputFileType = 'Xls';
		 
		// Count total files
		$countfiles = count($_FILES['file']['name']);
		
		// Looping all files
		for($i = 0; $i < $countfiles; $i++){
			
			$inputFileName = $_FILES['file']['name'][$i];
	
			$reader = IOFactory::createReader($inputFileType);
			$regno = array(); $jambno = array(); $surname = array(); $firstname = array(); $othername = array(); $admyr = array(); $state = array(); $lga = array(); $sex = array(); $email = array(); $phone = array(); $photo = array(); $department = array(); $combination = array(); $program = array(); $modeofentry = array();
				
			try{
				$reader->setReadDataOnly(true);
				$spreadsheet = $reader->load($_FILES['file']['tmp_name'][$i]);
				$p=0;
				foreach ($spreadsheet->getWorksheetIterator() as $worksheet){
					$highestRow = $worksheet->getHighestRow();
					//$highestColumn = $worksheet->getHighestColumn(); // e.g 'F'
					//$highestColumnIndex = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::columnIndexFromString($highestColumn);
					//check columns to confirm correctness of template
					for($x=2; $x <= $highestRow; $x++){
						$regno[$p] = trim($worksheet->getCellByColumnAndRow(1, $x)->getValue());
						$jambno[$p] = trim($worksheet->getCellByColumnAndRow(2, $x)->getValue());
						$surname[$p] = trim($worksheet->getCellByColumnAndRow(3, $x)->getValue());
						$firstname[$p] = trim($worksheet->getCellByColumnAndRow(4, $x)->getValue());
						$othername[$p] = trim($worksheet->getCellByColumnAndRow(5, $x)->getValue());
						$admyr[$p] = trim($worksheet->getCellByColumnAndRow(6, $x)->getValue());
						$state[$p] = trim($worksheet->getCellByColumnAndRow(7, $x)->getValue());
						$lga[$p] = trim($worksheet->getCellByColumnAndRow(8, $x)->getValue());
						$sex[$p] = trim($worksheet->getCellByColumnAndRow(9, $x)->getValue());
						$email[$p] = trim($worksheet->getCellByColumnAndRow(10, $x)->getValue());
						$phone[$p] = trim($worksheet->getCellByColumnAndRow(11, $x)->getValue());
						$photo[$p] = trim($worksheet->getCellByColumnAndRow(12, $x)->getValue());
						$department[$p] = trim($worksheet->getCellByColumnAndRow(13, $x)->getValue());
						$combination[$p] = trim($worksheet->getCellByColumnAndRow(14, $x)->getValue());
						$program[$p] = trim($worksheet->getCellByColumnAndRow(15, $x)->getValue());
						$modeofentry[$p] = trim($worksheet->getCellByColumnAndRow(16, $x)->getValue());
						$p++;				
					}
					$mainClass->import_student($regno, $jambno, $surname, $firstname, $othername, $admyr, $state, $lga, $sex, $email, $phone, $photo, $department, $combination, $program, $modeofentry);
					//$mainClass->import_student_update_state($regno, $jambno, $surname, $firstname, $othername, $admyr, $state, $lga, $sex, $email, $phone, $photo, $department, $combination, $program, $modeofentry);
					$msg = "Successfully uploaded";
				}
					
			}catch(Exception $e){
				$msg = "Error uploading. please upload an excel file with .xls extension";
			}
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "import_student_specialization") { 
		require 'template/upload/PhpSpreadsheet/vendor/autoload.php';
		$inputFileType = 'Xls';
		 
		// Count total files
		$countfiles = count($_FILES['file']['name']);
		
		// Looping all files
		for($i = 0; $i < $countfiles; $i++){
			
			$inputFileName = $_FILES['file']['name'][$i];
	
			$reader = IOFactory::createReader($inputFileType);
			$regno = array(); $admyr = array(); $department = array(); $combination = array(); $program = array(); $specialization = array();
				
			try{
				$reader->setReadDataOnly(true);
				$spreadsheet = $reader->load($_FILES['file']['tmp_name'][$i]);
				$p=0;
				foreach ($spreadsheet->getWorksheetIterator() as $worksheet){
					$highestRow = $worksheet->getHighestRow();
					//$highestColumn = $worksheet->getHighestColumn(); // e.g 'F'
					//$highestColumnIndex = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::columnIndexFromString($highestColumn);
					//check columns to confirm correctness of template
					for($x=2; $x <= $highestRow; $x++){
						$regno[$p] = trim($worksheet->getCellByColumnAndRow(1, $x)->getValue());
						$specialization[$p] = trim($worksheet->getCellByColumnAndRow(2, $x)->getValue());
						$p++;				
					}
					$mainClass->import_student_specialization($regno, $specialization);
					$msg = "Successfully uploaded";
				}
					
			}catch(Exception $e){
				$msg = "Error uploading. please upload an excel file with .xls extension";
			}
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "student_specialization") {
		$checkbox = $_POST['regno']."".$_POST['speid'];
		if(isset($_POST[$checkbox])){
			$mainClass->student_specialization($_POST['regno'], $_POST['speid']);
		}elseif(!isset($_POST[$checkbox])){
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "reset_all_password") { 
		require 'template/upload/PhpSpreadsheet/vendor/autoload.php';
		$inputFileType = 'Xls';
		
		$inputFileName = $_FILES['file']['name'][0];

		$reader = IOFactory::createReader($inputFileType);
		$regno = array(); $new_pass = array(); $confirm_pass = array();
			
		try{
				
			$spreadsheet = $reader->load($_FILES['file']['tmp_name'][0]);
			$p=0;
			foreach ($spreadsheet->getWorksheetIterator() as $worksheet){
				$highestRow = $worksheet->getHighestRow();
				//$highestColumn = $worksheet->getHighestColumn(); // e.g 'F'
				//$highestColumnIndex = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::columnIndexFromString($highestColumn);
				//check columns to confirm correctness of template
				for($x=2; $x <= $highestRow; $x++){
					$regno[$p] = trim($worksheet->getCellByColumnAndRow(1, $x)->getValue());
					$new_pass[$p] = trim($worksheet->getCellByColumnAndRow(2, $x)->getValue());
					$confirm_pass[$p] = trim($worksheet->getCellByColumnAndRow(3, $x)->getValue());
					$p++;				
				}
				$mainClass->reset_all_password($regno, $new_pass, $confirm_pass);
				$msg = "Successfully uploaded";
			}
				
		}catch(Exception $e){
			$msg = "Error uploading. please upload an excel file with .xls extension";
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "admission_list") { 
		require 'template/upload/PhpSpreadsheet/vendor/autoload.php';
		$inputFileType = 'Xls';
		
		$inputFileName = $_FILES['file']['name'][0];

		$reader = IOFactory::createReader($inputFileType);
		$jambno = array(); $department = array(); $combination = array();	
			
		try{
				
			$spreadsheet = $reader->load($_FILES['file']['tmp_name'][0]);
			$p=0;
			foreach ($spreadsheet->getWorksheetIterator() as $worksheet){
				$highestRow = $worksheet->getHighestRow();
				//$highestColumn = $worksheet->getHighestColumn(); // e.g 'F'
				//$highestColumnIndex = \PhpOffice\PhpSpreadsheet\Cell\Coordinate::columnIndexFromString($highestColumn);
				//check columns to confirm correctness of template
				for($x=2; $x <= $highestRow; $x++){
					$jambno[$p] = trim($worksheet->getCellByColumnAndRow(1, $x)->getValue());
					$department[$p] = trim($worksheet->getCellByColumnAndRow(7, $x)->getValue());
					$combination[$p] = trim($worksheet->getCellByColumnAndRow(8, $x)->getValue());
					$p++;				
				}
				$mainClass->admission_list($jambno, $department, $combination);
				//$mainClass->admission_list_update_payment_temporal($jambno, $department, $combination);
				$msg = "Successfully uploaded";
			}
				
		}catch(Exception $e){
			$msg = "Error uploading. please upload an excel file with .xls extension";
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "upload_report") { 
		//$filename = $_FILES['file']['name'][0];
		$filename = date('dmYHis_').str_replace(" ", "", basename($_FILES["file"]["name"][0]));
		// destination of the file on the server
    	$destination = 'download/' . $filename;
		// get the file extension
    	$extension = strtolower(pathinfo($filename, PATHINFO_EXTENSION));
		
		// the physical file on a temporary uploads directory on the server
		$file = $_FILES['file']['tmp_name'][0];
		$size = $_FILES['file']['size'][0];	
		
		$allowed_ext = array("pdf");	
		
		if(!in_array($extension, $allowed_ext)) {
			$msg = "Only .pdf files are allowed";
		}elseif ($size > 5242880) { // file shouldn't be larger than 5Megabyte
        	$msg = "File too large. Please upload file of at least 5MB";
    	}else {
			// move the uploaded (temporary) file to the specified destination
			if (move_uploaded_file($file, $destination)) {
				$mainClass->upload_report($filename, validate_input($_POST['description']));
			} else {
				$msg = "Failed to upload file.";
			}
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "manage_signature") { 
		$mainClass->signature($_POST['deptid'], $_POST['name'], $_POST['rank']);
	}
	elseif (toStr(decrypt($_GET['content'])) == "generate_RRR"){
		$stu = $mainClass->getField("student", "RegNo", $_POST['regno']);
		$schid = $mainClass->getField("department", "DepartmentID", $stu["DepartmentID"]);
		generateRRR($mainClass, $schid["SchoolID"], $stu["ModeOfEntry"]);
	}
	elseif (toStr(decrypt($_GET['content'])) == "semester_course_form"){
		//echo count($_POST['regno']);
		$mainClass->semester_course($_POST['regno'], $_POST['totalcourse'], $_POST['totalunit'], $_POST['sessionz'], $_POST['level'], $_POST['semester'], $_POST['selectedcourses']);
	}
	elseif (toStr(decrypt($_GET['content'])) == "register_carry_over"){
		$mainClass->semester_course($_POST['regno'], $_POST['totalcourse'], $_POST['totalunit'], $_POST['new_sessionz'], $_POST['level'], $_POST['semester'], $_POST['selectedcourses']);
	}
	elseif (toStr(decrypt($_GET['content'])) == "pre_NCE_payment"){
		$mainClass->confirmpayment("prence_admissionpayment", $_POST['invoicenumber'], $_POST['status'], $_POST['tellerno']);
		$mainClass->confirmpayment("payment", $_POST['invoicenumber'], $_POST['status'], $_POST['tellerno']);
	}
	elseif(toStr(decrypt($_GET['content'])) == "student_name_correction") { 
		require 'template/upload/PhpSpreadsheet/vendor/autoload.php';
		$inputFileType = 'Xls';
		
		// Count total files
		$countfiles = count($_FILES['file']['name']);
		// Looping all files
		for($i = 0; $i < $countfiles; $i++){
			$inputFileName = $_FILES['file']['name'][$i];

			$reader = IOFactory::createReader($inputFileType);
			$serialno = array(); $name = array(); $dept = array(); $comb = array(); $admyr = array();
				
			try{
				$spreadsheet = $reader->load($_FILES['file']['tmp_name'][$i]);
				$p=0;
				foreach ($spreadsheet->getWorksheetIterator() as $worksheet){
					$highestRow = $worksheet->getHighestRow();
					for($x=1; $x <= $highestRow; $x++){
						$serialno[$p] = trim($worksheet->getCellByColumnAndRow(2, $x)->getValue());
						$name[$p] = trim($worksheet->getCellByColumnAndRow(3, $x)->getValue());
						$dept[$p] = trim($worksheet->getCellByColumnAndRow(4, $x)->getValue());
						$comb[$p] = trim($worksheet->getCellByColumnAndRow(5, $x)->getValue());
						$admyr[$p] = trim($worksheet->getCellByColumnAndRow(6, $x)->getValue());
						$p++;				
					}
					$mainClass->student_name_correction($serialno, $name, $dept, $comb, $admyr);
					$msg = "Successfully uploaded";
				}
					
			}catch(Exception $e){
				$msg = "Error uploading. please upload an excel file with .xls extension";
			}
		}
	}
	elseif(toStr(decrypt($_GET['content'])) == "reconciler") { 
		$mainClass->reconcile("agreed_pro", "student_course", "RegNo", $_POST['regno'], $_POST['agreedreg'], $_POST['semesterreg']);
	}
	elseif(toStr(decrypt($_GET['content'])) == "conflicting_matric_numbers"){
		if(toStr(decrypt($_GET['e'])) == "delete"  ) { 
			$mainClass->delete($_POST['student'], "RegNo", $_POST['regno']);
			$mainClass->delete($_POST['student_profile'], "RegNo", $_POST['regno']);
			$mainClass->delete($_POST['student_course'], "RegNo", $_POST['regno']);
			$mainClass->delete($_POST['student_specialization'], "RegNo", $_POST['regno']);
			$mainClass->delete($_POST['agreed_pro'], "RegNo", $_POST['regno']);
			$mainClass->delete($_POST['user'], "username", $_POST['regno']);
		}
	}
}






function generateRRR($mainClass, $schoolid, $modeofentry){
	
			//get service type
			$service = $mainClass->getField("servicetype", "ServiceName", $_POST['purpose']);
			$serviceid = $service["ServiceID"];
			//for school fees only
			if(isset($_POST['level']) and $_POST['level'] != ""){
				//get amount to pay
				$fees = $mainClass->getRowField("fees_structure", "Level", $_POST['level'], "SchoolId", $schoolid, "Sessionz", $_POST['rrrsessionz']);
				$amount = $fees["FullPayment"];
				
				//get admission year and determine if DE student have to pay
				if(substr($modeofentry, 0, 2) == "DE"){
					//$admyr1 = substr($modeofentry, -4);
					//$admyr2 = $admyr1 + 1;
					//$admyr = $admyr1."/".$admyr2;
					//if($admyr == $_POST['sessionz']){
						$amount = $fees["FullPayment"] + $fees["DEEntry"];
					//}
				}
				elseif($modeofentry == "Continuing"){//check if student is continuing
					//get amount to pay
					$fees = $mainClass->getColumn("fees_structure", "Level", $_POST['level'], "SchoolId", $schoolid, "Sessionz", $_POST['sessionz'], "Status", "Continuing", "");
					$amount = $fees["FullPayment"];
				}
				//echo "amt=".$amount;
				
				$mainClass->invoice($_POST['invoiceno'], $_POST['orderId'], $_POST['regno'], $_POST['name'], validate_input($_POST['email']), validate_input($_POST['phone']), $_POST['level'], $_POST['rrrsessionz'], "Unpaid", $amount, $_POST['purpose'], $serviceid);
			}
			//for acceptance fees only
			elseif(isset($_POST['program']) and $_POST['program'] != ""){
				//get amount to pay
				$fees = $mainClass->getFieldArgs("fees_structure", "Level", $_POST['program'], "Sessionz", $_POST['rrrsessionz']);
				$amount = $fees["FullPayment"];
				$mainClass->invoice($_POST['invoiceno'], $_POST['orderId'], $_POST['regno'], $_POST['name'], validate_input($_POST['email']), validate_input($_POST['phone']), $_POST['program'], $_POST['rrrsessionz'], "Unpaid", $amount, $_POST['purpose'], $serviceid);
			}
}
?>