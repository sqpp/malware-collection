<?php
/*
* 2012-2013 
*
*  @author Jorge Donet Alberola <soporte@alabazweb.com>
*  V2.0
*/
include_once('../../config/config.inc.php');
include_once('../../init.php');
include_once('megashipping.php');

global $smarty;
global $cookie;

$cart = Context::getContext()->cart;
$html= '';
$ms = new MegaShipping();

$id_lang = $cookie->id_lang; 

if(Tools::getValue('action')=='productdays')
{
	echo $ms->showProductDays(Tools::getValue('id_product'),Tools::getValue('id_product_attribute'));
	return;
}
if(Tools::getValue('action')=='changeExtraCarrier')
{
	echo $ms->hookDisplayCarrierExtraContent(array('cart' => Context::getContext()->cart));
	exit;
}
if(Tools::getValue('action')=='changeDelivery')
{
	if(Tools::getValue('id_delivery') && Tools::getValue('delivery'))
	{
		$msd = new MegaShippingDelivery(Tools::getValue('id_delivery'));
		$msd->delivery = Tools::getValue('delivery');
		$msd->save();
	}
	exit;

}
if(Tools::getValue('action')=='setDelivery')
{
	$ms->saveDelivery(Context::getContext()->cart->id, Tools::getValue('delivery'), (int)Tools::getValue('id_timeslot'), Tools::getValue('id_mspcarrier'));
	exit;
	
}
if(Tools::getValue('action')=='setFields')
{
	$arrayFields = array();
	$id_mspcarrier = (int)Tools::getValue('id_mspcarrier');
	$fields = MegashippingField::getShowFields($id_mspcarrier, $id_lang);
	if($fields)
	{
		foreach($fields as $f)
		{
			$id_field = $f['id_field'];
			$fieldname = 'fields'.$id_field;
			if(Tools::getValue($fieldname))
			{
				$arrayField= array('id_field' =>$id_field, 'data' => Tools::getValue($fieldname), 'title' => $f['title']);
				array_push($arrayFields,$arrayField);
			}
		}
		
		$ms->saveFields(Context::getContext()->cart->id, $id_mspcarrier,$arrayFields);
		echo json_encode(array('success' => 1, 'msg' => $ms->l('Save fields correctly')));
	}
	exit;	
}
if(Tools::getValue('action')=='shippingtimes')
{
	//echo Context::getContext()->cart->id;
	//echo json_encode(MegaShippingTimeslot::getTimeslotsByDate(Tools::getValue('date_carrier'),Tools::getValue('id_mspcarrier')));
	$msd = MegaShippingDelivery::getDeliveryByCart(Context::getContext()->cart->id);
	$msd->delivery = Tools::getValue('date_carrier');
	$arrayTime = $ms->showShippingTimes(Tools::getValue('id_mspcarrier'), $msd);
	echo json_encode($arrayTime);
	return;
}
//Default
$id_mspcarrier = (int)Configuration::get('MEGA_SHIPPING_CARRIER_ID');
if(Tools::getValue('id_filter_carrier'))
{
	$mspc =	MegaShippingCarrier::getCarrierById(Tools::getValue('id_filter_carrier'));
	$id_carrier = Tools::getValue('id_filter_carrier');
}
else
{
	$mspc = new MegaShippingCarrier($id_mspcarrier);
	$id_carrier = $mspc->id_carrier;
}
$id_product = 0;
$product = null;
if(Tools::getValue('id_product') && Tools::getValue('cp'))
{
	$id_product = (int)Tools::getValue('id_product');
	$product = new Product($id_product);
	$pcs = $product->getCarriers();
	// Check if product carrier has active
	if($pcs)
	{
		$applyCarrier = false;
		$idapplycarrier = 0;
		foreach($pcs as $pc)
		{
			$idapplycarrier = $pc['id_carrier'];
			if($pc['id_carrier']==$id_carrier)
			{		 
				$applyCarrier = true;
				break;
			}
		}
		if(!$applyCarrier)
		{
			$id_carrier = $idapplycarrier;
			//echo $smarty->display(_PS_MODULE_DIR_.'megashipping/tpl/error.tpl');
			//return;
		}
	}

}


Context::getContext()->cookie->id_select_carrier = $ms->id_carrier = $id_carrier;
//$hide_weight = (int)$mspc->config['MEGA_SHIPPING_HIDE_WEIGHT'];
$hide_weight = 0;
		
$carrier = new Carrier($id_carrier);
$zone=1;
$msc=null;
if(Tools::getValue('showinfo')){
	$address = false;
	$cp = false;
	$id_country = false;
	if(isset($cart->id_address_delivery) AND $cart->id_address_delivery){
        $address = new Address((int)$cart->id_address_delivery);
        $cp = $address->postcode;
        $id_country = $address->id_country;
  } elseif (Context::getContext()->customer->isLogged()) {
		$id_address= Address::getFirstCustomerAddressId((int)Context::getContext()->customer->id);
		$address = new Address($id_address);
		if($address){
			$cp = $address->postcode;
			$id_country = $address->id_country;
		} 		
	}
	if(!$address || !$cp || !isset($cp) || $cp=='' || !id_country || !isset($id_country) || $id_country=='')
	{
		// Cogemos datos de la ip
		$infoip = MegaShippingClass::getInfoIp();
		if($infoip && is_array($infoip) && isset($infoip['countryCode']) && $infoip['countryCode']!='-')
		{
			$cp =  Context::getContext()->cookie->postcode = $infoip['zipCode'];
			$iso_code = $infoip['countryCode'];
			if($iso_code!='-')
				$id_country = Context::getContext()->cookie->id_country = CountryCore::getByIso($iso_code);
			/*$stateName = $infoip['regionName'];
			if($stateName!='-')
				$id_state = Context::getContext()->cookie->id_state = State::getIdByName($stateName);
		
			if ($id_state != 0)
				$id_zone = State::getIdZone($id_state);
			if (!$id_zone)
				$id_zone = Country::getIdZone($id_country);*/
		}
		else 
		{
			//Cogemos en este caso la zona de la tienda
			$address = Context::getContext()->shop->getAddress();
			if($address){
				$cp = $address->postcode;
				$id_country = $address->id_country;
			}
		}
	}
	if(isset($cp) && $cp){
		$_GET['cp'] = $cp;
	}
	if(isset($id_country) && $id_country){
		$_GET['id_country'] = $id_country;
	}
}

if(Tools::getValue('cp'))
{
	$cp = Tools::getValue('cp');
	$id_country = (int)Tools::getValue('id_country');
	Context::getContext()->cookie->postcode = $cp;
	Context::getContext()->cookie->id_country = $id_country;
	if(isset($mspc) && $mspc){
		$msc = MegaShippingCP::getMegaShippingCP($mspc->id_mspcarrier,$cp,$id_country);
	}
	$zone = Country::getIdZone($id_country);
	if(isset($msc) && $msc->id_state!=0)
	{
		$zone = State::getIdZone((int)$msc->id_state);
	}
	elseif(isset($msc) && $msc->id_country!=0)
	{
		$zone = Country::getIdZone((int)$msc->id_country);
	}
}
if(!isset($msc))
{
	if(Tools::getValue('showinfo')){
		echo 'Error: ';
		echo $smarty->display(_PS_MODULE_DIR_.'megashipping/tpl/error.tpl');
		return;
	}else{
		echo $smarty->display(_PS_MODULE_DIR_.'megashipping/tpl/error.tpl');;
		return;
	}
}

if(Tools::getValue('id_product') && Tools::getValue('cp'))
{
	$shipping=0;
	$id_product = (int)Tools::getValue('id_product');
	$id_product_attribute = ((int)Tools::getValue('id_product_attribute')!=0?(int)Tools::getValue('id_product_attribute'):null);
	$quantity = (int)Tools::getValue('quantity');
	$product = new Product($id_product);
	$cover = Product::getCover($id_product);
	//$price = $product->getPrice(true,$id_product_attribute)*$quantity;
	$price = $product->getPrice(true,$id_product_attribute,_PS_PRICE_DISPLAY_PRECISION_,null,false,true,$quantity)*$quantity;
	$weight = $product->weight;
	$atributte_text = '';
	if($id_product_attribute!=0)
	{
		$weight = MegaShippingClass::getProductWeight($id_product, $id_product_attribute);
		$atributte_text .= MegaShippingClass::getProductAttributeText($id_product_attribute,$id_lang);	
	
	}

	/* AWP - Carlos - t:12003 Calcular precio con el peso Megaproduct. */
	$tempCart = null;
	$megaArray = null;
	if(Module::isInstalled('megaproduct') && $cart->isMegaproduct($id_product))
	{
		if (file_exists(_PS_MODULE_DIR_ . 'megaproduct')) {
			require_once _PS_MODULE_DIR_ . 'megaproduct' . DIRECTORY_SEPARATOR . 'megaproduct.php';
		}
		$mproduct = new MPClass($id_product);		
		$price = (float) Tools::getValue('priceCalc');
		$product->price = $price;
		if($mproduct->type=='M2' || $mproduct->type=='M3')
			$product->width = (Tools::getValue('width')==1)?1:Tools::getValue('width');
		if($mproduct->type=='M2' || $mproduct->type=='M3')
			$product->height = (Tools::getValue('height')==1)?1:Tools::getValue('height');
		if($mproduct->type=='D' || $mproduct->type=='M3')
			$product->depth = (Tools::getValue('long')==1)? 1:Tools::getValue('long');
			
		/* AWP - Dperez - faltaban los atributos */
		$personalization = array();
		if(Tools::getValue('personalization'))
		{
			$customvalues =json_decode(Tools::getValue('personalization'));
			if(is_array($customvalues) && sizeof($customvalues))
			{
				for($i=0;$i<sizeof($customvalues);$i=$i+2)
				{
					if(isset($customvalues[$i+1]))
						$personalization[$customvalues[$i]]=$customvalues[$i+1];
				}
			}
		}
		
		// Independent Attributes
		$attrIds = '';
		if(Tools::getValue('attrIds'))
		{
			$attrIds = explode('-',Tools::getValue('attrIds'));
		}
		$quantityIds = '';
		if(Tools::getValue('quantityIds'))
		{
			$quantityIds = explode('-',Tools::getValue('quantityIds'));
		}
		
		$tempCart = new megaproductcart();
		$tempCart->id_product = $id_product;
		$tempCart->id_cart =  $cart->id;
		$tempCart->id_product_attribute = $id_product_attribute;
		$tempCart->quantity = $quantity;
		$tempCart->width = $product->width;
		$tempCart->height = $product->height;
		$tempCart->long = $product->depth;
		$tempCart->attributes = $attrIds;
		$tempCart->quantityattributes = $quantityIds;
		$tempCart->personalization = $personalization;		
		//$tempCart->tax_rate = Tax::getProductTaxRate((int)$id_product, $cart->id_address_delivery);
		$tempCart->config = $mproduct->config;
		if($tempCart->width==1 && $tempCart->config['width_measure']=='mm')
			$tempCart->width = 1000;
		if($tempCart->width==1 && $tempCart->config['width_measure']=='cm')
			$tempCart->width = 100;
		if($tempCart->height==1 && $tempCart->config['height_measure']=='mm')
			$tempCart->height = 1000;
		if($tempCart->height==1 && $tempCart->config['height_measure']=='cm')
			$tempCart->height = 100;
		$megaArray = $tempCart->toArray();	
		$price = $tempCart->getPriceTaxes(true,true,true,true,true);
		
		/* END - AWP - Dperez - faltaban los atributos */	

		$weight = (float) $tempCart->getWeight();
		$product->weight = $weight;
	}else{
		/* END - AWP - Carlos - t:12003 Calcular precio con el peso Megaproduct. */			
		$weight = $quantity*$weight;
	}
	
	if (($carrier->getShippingMethod() == Carrier::SHIPPING_METHOD_WEIGHT && $carrier->checkDeliveryPriceByWeight($id_carrier, $weight, (int)$zone) === false)
            || ($carrier->getShippingMethod() == Carrier::SHIPPING_METHOD_PRICE && $carrier->checkDeliveryPriceByWeight($id_carrier, $weight, (int)$zone) === false))
	{
		$smarty->assign('error', 1);
		echo $smarty->display(_PS_MODULE_DIR_.'megashipping/tpl/error.tpl');;
		return;
	}
	if ($carrier->getShippingMethod() == Carrier::SHIPPING_METHOD_WEIGHT)
	{
		$shipping = $carrier->getDeliveryPriceByWeight($product->weight, $zone);
	}
	else
	{
		$shipping = $carrier->getDeliveryPriceByPrice($price, $zone, (int)($cart->id_currency));
	}
						  
	$productarray = array("id_product" => $id_product,
							"quantity" => $quantity,
							"cart_quantity" => $quantity,
							"weight" => $product->weight,
							"width" => $product->width,
							"height" => $product->height,
							"depth" => $product->depth,
							"id_shop" => $cart->id_shop,
							"id_product_attribute" => $id_product_attribute,
							"id_address_delivery" => $cart->id_address_delivery
							);
							
	$products = array();
	array_push($products, $productarray);
	$ms->total_weight = $weight;
	$shipping = $ms->calculeOrderShippingCost($cart, $shipping,$cp,$products);
	if (!Tax::excludeTaxeOption())
			 $carrierTax = Tax::getCarrierTaxRate((int)$carrier->id, (int)$cart->{Configuration::get('PS_TAX_ADDRESS_TYPE')});
	if (isset($carrierTax))
			$shipping *= 1 + ($carrierTax / 100);
	
	
	if(isset($msc))
	{
		$smarty->assign('cp', $msc->cp);
		$smarty->assign('city', $msc->name);
	}
	
	$smarty->assign('product', $product);
	$smarty->assign('cover', $cover);
	$smarty->assign('link_rewrite', $product->link_rewrite[$id_lang]);
	
	$smarty->assign('name', $product->name[$id_lang]);
	$smarty->assign('attribute_text', $atributte_text);
	$smarty->assign('weight', $weight);
	$smarty->assign('hide_weight', $hide_weight);
	$smarty->assign('price', Tools::displayPrice($price));
	$smarty->assign('total', Tools::displayPrice($price+$shipping));
	$smarty->assign('quantity', $quantity);
	$smarty->assign('shipping', Tools::displayPrice($shipping));
	$smarty->assign('megaProductArray', $megaArray);
	$smarty->assign('link', Context::getContext()->link);
	
	$html .= $smarty->display(_PS_MODULE_DIR_.'megashipping/tpl/ajax-product.tpl');
	
	
}
else if(Tools::getValue('cp'))
{
	
	if ($carrier->getShippingMethod() == Carrier::SHIPPING_METHOD_WEIGHT)
	{
		$shipping = $carrier->getDeliveryPriceByWeight($product->weight, $zone);
	}
	else
	{
		$shipping = $carrier->getDeliveryPriceByPrice($price, $zone, (int)($cart->id_currency));
	}
	
	$shipping = $ms->calculeOrderShippingCost($cart, $shipping, $cp);
	if (!Tax::excludeTaxeOption())
		$carrierTax = Tax::getCarrierTaxRate((int)$carrier->id, (int)$cart->{Configuration::get('PS_TAX_ADDRESS_TYPE')});
	if (isset($carrierTax))
		$shipping *= 1 + ($carrierTax / 100);

	$weight = $cart->getTotalWeight();
	
	$smarty->assign('name', $carrier->name);
	$smarty->assign('delay', $carrier->delay[$id_lang]);
	$smarty->assign('cp', $cp);
	if(isset($msc))
	{
		$smarty->assign('state', State::getNameById($msc->id_state));
		$smarty->assign('country', Country::getNameById($id_lang,$msc->id_country));
	}
	$smarty->assign('shipping', Tools::displayPrice($shipping));
	$smarty->assign('weight', Tools::ps_round($weight,2));
	$smarty->assign('hide_weight', $hide_weight);

	$html .= $smarty->display(_PS_MODULE_DIR_.'megashipping/tpl/ajax-block.tpl');
	
	
}
echo $html;
