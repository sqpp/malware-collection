<?php
defined( '_VALID_MOS' ) or die( 'Direct Access to this location is not allowed.' );

// Get the configuration
require_once($mosConfig_absolute_path."/administrator/components/com_staticxt/config.staticxt.php");

//------------------------------------------------------------------------------
// Initialize Data
//------------------------------------------------------------------------------
if ($pathwayPatch == "X") {
 if ( $mosConfig_sef ) {
 $xtItem = "Itemid,".$Itemid."/xt_item,1/"; }
 else {
 $xtItem = "&Itemid=".$Itemid."&xt_item=1"; }

 }
else
 {$xtItem = "";}

$ft_parse = "html?|php";

if ( $option_iframe == "X" )      {
$ft_iframe = "|jpe?g|gif|png|swf";  }
else                                {
$ft_iframe = "";
                     }

if ( $mosConfig_sef ) {
 $com_staticxt_url = "component/option,com_staticxt/".$xtItem."staticfile,";
 $subDel = "~";
 }
else {
 $com_staticxt_url = "index.php?option=com_staticxt".$xtItem."&staticfile=";
 $subDel = "/";
  }



if ($mosConfig_sef) {
$staticfile = trim( mosGetParam( $_REQUEST, 'staticfile',1 ) ) ;
  }
// How should a SEF-URL for staticfile=subdir/test.html look like?

$staticfile = str_replace("\\", "/", $staticfile);
$staticfile = str_replace($subDel, "/", $staticfile);

$tmp = $staticfile;
$static_url = parse_url($tmp);
$staticfile = $static_url['path'];
$params = $static_url['query'];


// Subdirectory?

$subdir = preg_replace('/(.*\/).*/', '\1', $staticfile);
$staticfile = preg_replace('/.*\/(.*)/', '\1', $staticfile);
if ($subdir == $staticfile) $subdir = "";
else {
// ../  replacen
$subdir = preg_replace('/.*\.\.\//', '', $subdir);
$subdir = preg_replace('/^[\/](.*)/', '\1', $subdir);

 }
// concatenate again
$staticfile = $subdir.$staticfile;
$subdir = preg_replace("/\//", $subDel, $subdir);

// concatenate subdir to com_staticxt_url
$com_staticxt_url = $com_staticxt_url.$subdir;

print $staticxt_code."<br>";
//------------------------------------------------------------------------------
// no static file in Parameters
//------------------------------------------------------------------------------


if (empty($staticfile))
 {
  echo "<B>Missing parameter!</B><br />";
  echo "Put the file(s) in the staticfiles directory or a subdirectory of it.<br />";
  echo "Usage:<br />index.php?option=com_staticxt&staticfile=filename.html<br />";
  echo "or<br />index.php?option=com_staticxt&staticfile=directoryname/filename.html";
 }

//------------------------------------------------------------------------------
// Parsing of static File
//------------------------------------------------------------------------------
elseif (file_exists($saveUrl.$staticfile))
{
 $pageID = $saveUrl.$staticfile;
print $xtEval;
// If PHP-Files should not be eval'd simply include them
  if ((preg_match('/\.php/i', $staticfile))
      and ((!$saveEval and $xtEval<>"on")
        or ($saveEval and $xtEval=="off" ))) {
    parse_str($params);
    include ($saveUrl.$staticfile);
   }
// If Iframe enabled
  elseif ((!preg_match('/\.('.$ft_parse.')/i', $staticfile))
      and (($option_iframe and $xtIframe<>"off")
        or  (!$option_iframe and $xtIframe=="on")))
   {
    create_iframe($saveUrl.$staticfile.$params);
           }

//------------------------------------------------------------------------------
// get and parse Page Content
//------------------------------------------------------------------------------
  else {
   $pageContent = getPageContent( $pageID, $xtEval );


  // replace src= (images etc)
  $pageContent = preg_replace( '/(?i)(\ssrc([\s\"=\']*))/', '\1'.$saveUrl.$subdir, $pageContent );

  // replace "movie-tag" for flash
  $pageContent = preg_replace( '/(?i)(movie.*)(\svalue([\s\"=\']*))/', '\1'.'\2'.$saveUrl.$subdir, $pageContent );


  // replace hrefs in <a> to com_static
  $pattern = "/(?i)(href[\s\"\']*?=[\s\"]*?)([^=\"\s]*?\.(".$ft_parse.$ft_iframe.")((\?)[^\s\"\']*)?)/";
  $pageContent = preg_replace_callback( $pattern, "xtReplace", $pageContent );

  // replace hrefs in <link> to staticfiles
  $pattern = "/(?i)([^=\"\s]*?(\.css))(?=((?!(href=)))*?)(?=((?!(<(link).)))>?)/";
  $pageContent = preg_replace( $pattern, $saveUrl.'\1', $pageContent );

  $pageContent = preg_replace( '/(?i)('.preg_quote($saveUrl.$subdir, "/").'(http|https|ftp|telnet|mailto))/', '\2', $pageContent );

/*  // return http-links to original
  $pageContent = preg_replace_callback( '/(?i)('.preg_quote($com_staticxt_url, "/").'(http|https|ftp|telnet|mailto))/', "xtUnReplace", $pageContent );
print preg_quote($com_staticxt_url, "/");
*/  // replace parameters when SEF enabled
  if ($mosConfig_sef) {

  // = durch ","
   $pattern = "/".preg_quote($com_staticxt_url, "/")."([^\"\s]*=)/i";
   preg_match_all($pattern, $pageContent ,$matches, PREG_OFFSET_CAPTURE);
   $i=0;
   $offset = intval($matches[1][$i][1]);
   while ($offset > 0) {
     $tmp = $matches[1][$i][0];
     $tmp = str_replace('=', ',', $tmp);
     $tmp = preg_replace('/(\?|&)/', '/', $tmp);
     $pageContent = str_replace($matches[1][$i][0], $tmp, $pageContent);
     $i++;
     $offset = intval($matches[1][$i][1]);   }
  }

// output
 print ($pageContent);

 }
}

//------------------------------------------------------------------------------
// Static File doesn't exist
//------------------------------------------------------------------------------
else
{
echo "<B>Error:</B> Static file <B>".$saveUrl.$staticfile."</B> not found.";
}

if ($debug=="true")
{
print "<font color=\"red\">com_staticxt Version: ".$com_staticxt_ver."</font><br />";
print "<font color=\"red\">serverpath: ".getcwd()."/".$saveUrl."</font>";
}

//------------------------------------------------------------------------------
// Reload the database, in case it has been overwritten
//------------------------------------------------------------------------------
unset ($database);
$database = new database( $mosConfig_host, $mosConfig_user, $mosConfig_password, $mosConfig_db, $mosConfig_dbprefix );


//------------------------------------------------------------------------------
// Functions
//------------------------------------------------------------------------------
function create_iframe ($url)
 {

   // stolen from wrapper-component

   ?>

<script language="JavaScript">
function iFrame() {
        setTimeout('iFrameHeight()', 2000);
        }
function iFrameHeight() {
  var h = 0;
  if(navigator.appName=='Netscape')
  {
    h = document.getElementById('static').contentDocument.height;
  }
  else {
    h = document.frames('static').document.body.scrollHeight;
  }
    document.getElementById('static').style.height = h + 60 + 'px';


}
</script>
<iframe id="static"
onLoad="iFrame()"
height = 2000
width = 100%
border=0
scrolling=auto
frameborder =no
src="<?php echo $url; ?>"></iframe>
<?php

         }

// Function to get Contents of Page
function getPageContent( $url, $xtEval ){

// special handling for php-Files
 if (preg_match('/\.php$/i', $url) )
  {

//make globals available
  global $params;
  parse_str($params);
  extract($GLOBALS);

   ob_start();
   include ($url);
   $ret = ob_get_contents();
   ob_end_clean();
   return $ret;
 }
  // html-files
  else
  {
    return( implode( file( $url ), "" ) );
  }
}
// callback functions for replace
function xtReplace($matches) {
global $com_staticxt_url, $subDel;

if (preg_match("/(http|https|ftp|telnet|mailto)/i", $matches[2]))
   return $matches[1].$matches[2];
else
   return $matches[1].$com_staticxt_url.preg_replace("/\//", $subDel, $matches[2]);
}

?>