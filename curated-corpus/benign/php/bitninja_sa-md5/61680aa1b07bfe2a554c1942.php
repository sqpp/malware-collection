<?php

// ----------------------------------------------------------------
// download.php
//
// Changes
// 28/07/2015 - based on download.php off web
//-----------------------------------------------------------------
//
// Called with  1 parameter (file name) to be downloaded
// Generally called from osl_listbyschool.php
// ----------------------------------------------------------------
//

require_once ("lib_constants.php");
	

if ( !isset($_GET['f']) || $_GET['f'] == '') die();

$file = normal_chars($_GET['f']);
$fmt  = substr($file, strrpos($file,'.')+1) or 'txt';
$validformats = array('CSV','TXT','PDF');
if (!in_array(strtoupper($fmt), $validformats)) $fmt = "txt";
$fout = substr($file, 0, strpos($file,'.')) . "." . $fmt;
$finp = $file;

if (!file_exists($finp)) die('Nothing to download');

// output headers so that the file is downloaded rather than displayed
header('Content-Type: text/csv; charset=utf-8');
header('Content-Disposition: attachment; filename='.$fout);

// create a file pointer connected to the output stream
$output = fopen('php://output', 'w');

// fetch the data
$rows = file($finp, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);

// loop over the rows, outputting them
switch ($fmt){
	case 'csv':
		foreach ($rows as $row) fputcsv($output, explode(',',$row));
		break;
	default:
		foreach ($rows as $row) fputs($output, $row."\r\n");
		break;
}

fclose($output);

// -----------------------------------------------------
// Sanitise filename 
// -----------------------------------------------------
function normal_chars($string)
{
    $string = htmlentities($string, ENT_QUOTES, 'UTF-8');
    $string = preg_replace('~&([a-z]{1,2})(acute|cedil|circ|grave|lig|orn|ring|slash|th|tilde|uml);~i', '$1', $string);
    $string = html_entity_decode($string, ENT_QUOTES, 'UTF-8');
    $string = preg_replace(array('~[^0-9a-z]-\_~i', '~[ -]+~'), ' ', $string);

    return trim($string, ' -');
}

?>
