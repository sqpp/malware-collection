<?php
   include("connection.php");
   require("../classes/security.php");
   require("functions.php");
   session_start();
   if (isset($_POST['login'])) {
      
         $email = new clean($_POST['email']);
         $email=$email->valid_email();
         
         $password = new clean($_POST['password']);
         $password=$password->clean_alphnum();
      
      if ($email=="") {
         echo "Enter a valid email.";
      }elseif ($password =="") {
         echo "Please enter a valid password.";
      }else{
         if (!empty($_POST['remember'])) {
            login($email,$password,"remember");
         }else{
            login($email,$password);
         }
      }
      $stmt=null;
      $con=null;
   }elseif (isset($_POST['register'])) {
      $name = new clean($_POST['name']);
      $name = $name->clean_string();
      
      $email = new clean($_POST['email']);
      $email=$email->valid_email();
      
      $phone = new clean($_POST['phone']);
      $phone = $phone->valid_phone_no();
      
      if(isset($_POST['ref'])){
         $uplineID = new clean($_POST['ref']);
         $uplineID = $uplineID->clean_alphnum();
      }elseif($_POST['uplineID']==""){
         $uplineID = "";
      }else{
         $uplineID = new clean($_POST['uplineID']);
         $uplineID = $uplineID->clean_alphnum();
      }
      $password = new clean($_POST['password']);
      $password=$password->clean_alphnum();
      
      
      #main 
      if($password!=""){
         
         $status = "inactive";
         
         $id = "ST".mt_rand(11111,99999);
         $password=password_hash($password, PASSWORD_DEFAULT);
         $sql = "SELECT COUNT(*) FROM users WHERE id=?";
   
         $stmt = $con->prepare($sql);
         $stmt->bindParam(1, $id, PDO::PARAM_STR, 7);
         //execute
         $stmt->execute();
   
         //fetch result
   
         $row=$stmt->fetchColumn();
         while($row>0){
            $id = "ST".mt_rand(11111,99999);
            $stmt->bindParam(1, $id, PDO::PARAM_STR, 7);
            $stmt->execute();
   
            $row=$stmt->fetchColumn();
         }
         
         $level = 1;
         
         try{
            $con->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            $con->beginTransaction();
   
            $sql = "INSERT INTO users(id, username, email, phone, password, uplineID, status, level)VALUES( ?, ?, ?, ?, ?, ?, ?, ?)";
            
            $sql1 = "INSERT INTO account(id)VALUES(?)";
            
            $stmt = $con->prepare($sql);
            $stmt1 = $con->prepare($sql1);
            
            $stmt->bindParam(1, $id, PDO::PARAM_STR, 8);
            $stmt->bindParam(2, $name, PDO::PARAM_STR, 35);
            $stmt->bindParam(3, $email, PDO::PARAM_STR, 45);
            $stmt->bindParam(4, $phone, PDO::PARAM_INT, 11);
            $stmt->bindParam(5, $password, PDO::PARAM_STR, 2000);
            $stmt->bindParam(6, $uplineID, PDO::PARAM_STR, 8);
            $stmt->bindParam(7, $status, PDO::PARAM_STR, 9);
            $stmt->bindParam(8, $level, PDO::PARAM_INT, 2);
            $stmt1->bindParam(1, $id, PDO::PARAM_STR, 15);
            
            $stmt->execute();
            $stmt1->execute();
         
            $con->commit();
   
            $stmt=null;
            $stmt1=null;
            $con=null;
            
            $_SESSION['msg'] = "Your registration was successful!";
            header("location:/register");
            
         }catch(Exception $e){
            $con->rollBack();
            
            if (isset($_SESSION['second'])) {
               echo "An unidentified error occured!";
            }else {
               $_SESSION['msg'] = "Application could not be submitted at the moment.";#"An unidentified error occured! Error!: " . $e->getMessage() . "<br/>";
               header("location:/register");
         
            }
         }
      }else{
         session_start();
         $_SESSION['msg'] = "Please use only alphabet and numbers for your password.";
      }
   }elseif (isset($_POST['update'])) {
      
      if ($_POST['accname']=="") {
         $accname = $_SESSION['accname'];
      }else{
         $accname = new clean($_POST['accname']);
         $accname = $accname->clean_string();
      }
      
      if ($_POST['name']=="") {
         $name = $_SESSION['name'];
      }else{
         $name = new clean($_POST['name']);
         $name = $name->clean_string();
      }
      
      if ($_POST['phone']=="") {
         $phone = $_SESSION['phone'];
      }else{
         $phone = new clean($_POST['phone']);
         $phone = $phone->valid_phone_no();
      }
      
      if ($_POST['bank']=="") {
         $bank = $_SESSION['bank'];
      }else{
         $bank = new clean($_POST['bank']);
         $bank = $bank->clean_string();
      }
      
      if ($_POST['account']=="") {
         $account = $_SESSION['account'];
      }else{
         $account = new clean($_POST['account']);
         $account = $account->clean_alphnum();
      }
      
      $password = new clean($_POST['password']);
      $password=$password->clean_alphnum();
      $id = $_SESSION['id'];
      $email = $_SESSION['email'];
      
      $stmt = $con->prepare('SELECT * FROM users WHERE email = ? ');
	
	 //bind parameters
	 $stmt->bindParam(1, $email, PDO::PARAM_STR, 255);
	
	 //execute
	 $stmt->execute();
	
	 $row=$stmt->fetch(PDO::FETCH_ASSOC);
	 //session variables
	 $password1=$row['password'];
	 
	 //encrypt password
	if(!password_verify($password, $password1)){
      
         $_SESSION['msg'] = "Wrong Password.";
         header("location:/profile.php");
      }else {
         
         try{
            
            if ($_POST['email']=="") {
               $email = $_SESSION['email'];
            }else{
               $email = new clean($_POST['email']);
               $email = $email->valid_email();
            }
      
            $con->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            $con->beginTransaction();
   
            $sql = "UPDATE users SET username = ?, email= ?, phone = ? WHERE id=?";
      
            $stmt = $con->prepare($sql);
            $stmt->bindParam(1, $name, PDO::PARAM_STR, 255);
            $stmt->bindParam(2, $email, PDO::PARAM_STR, 255);
            $stmt->bindParam(3, $phone, PDO::PARAM_STR, 255);
            $stmt->bindParam(4, $id, PDO::PARAM_STR, 15);

            $sql1 = "UPDATE account SET name =?, bank = ?, account = ? WHERE id=?";
      
            $stmt1 = $con->prepare($sql1);
            $stmt1->bindParam(1, $accname, PDO::PARAM_STR, 50);
            $stmt1->bindParam(2, $bank, PDO::PARAM_STR, 255);
            $stmt1->bindParam(3, $account, PDO::PARAM_STR, 255);
            $stmt1->bindParam(4, $id, PDO::PARAM_STR, 15);
            
            //execute
            $stmt->execute();
            $stmt1->execute();
            $con->commit();
            $_SESSION['update']="Update was successful.";
            if (isset($_COOKIE["email"])) {
               login($_COOKIE["email"], $_COOKIE["password"], "remember");
            }else {
               login($email,$password);
            }
         }catch(Exception $e){
            $con->rollBack();
            $_SESSION['msg'] = "Your information could not be processed. Try again later.";
            header("location:/");
         }
      }
      $stmt=null;
      $con=null;
   }elseif(isset($_POST['npassword'])){
      $password = new clean($_POST['opassword']);
      $password=$password->clean_alphnum();
      
      $id = $_SESSION['id'];
      $email = $_SESSION['email'];
      $password=password($email,$password);
      if($password!=1){
         echo "<span style='color:red;'>Wrong old password entered!</span>";
      }else{
         $npassword = new clean($_POST['npassword']);
         $npassword=$npassword->clean_alphnum();
         if ($npassword!="") {
            
            $npassword=password_hash($npassword, PASSWORD_DEFAULT);
            #require("connection.php");
            $sql = "UPDATE users SET password = ? WHERE id=?";
      
            $stmt = $con->prepare($sql);
            $stmt->bindParam(1, $npassword, PDO::PARAM_STR, 255);
            $stmt->bindParam(2, $id, PDO::PARAM_STR, 15);
            
            //execute
            if($stmt->execute()){
               echo "<span style='color:#7f7;'> Password change successful.</span>";
               $stmt=null;
               $con=null;
            }
         }else {
            echo "<span style='color:#f77;'>User only letters and numbers.</span>";
         }
      }
      $stmt=null;
      $con=null;
   }elseif (isset($_POST['fpemail'])){
      $email = new clean($_POST['fpemail']);
      $email=$email->valid_email();
      
      $sql = "SELECT COUNT(*) FROM users WHERE email=?";
      
      $stmt = $con->prepare($sql);
      $stmt->bindParam(1, $email, PDO::PARAM_STR, 255);
  
      //execute
      $stmt->execute();

      //fetch result
      $row=$stmt->fetchColumn();
      if($row>0){
         $new = "passwordreset".mt_rand(1,999);
         $password=password_hash($new, PASSWORD_DEFAULT);
         
         $sql = "UPDATE users SET password = ? WHERE email=?";
   
         $stmt = $con->prepare($sql);
         $stmt->bindParam(1, $password, PDO::PARAM_STR, 255);
         $stmt->bindParam(2, $email, PDO::PARAM_STR, 255);
         
         //execute
         if($stmt->execute()){
         
$subject = 'Password Reset';
$message = "Your reset password is\r\n".$new;
$headers = 'From: help@scriptex.tech' . "\r\n" .
    'Reply-To: help@scriptex.tech' . "\r\n" .
    'X-Mailer: PHP/' . phpversion();

;
         
            // Send
            if(mail($email, $subject, $message)){
               echo "<span style='color:#7f7;'>A reset password has been sent to your email.</span>";
            }else {
               echo "<span style='color:#f77;'>Sorry email could not be sent at the moment.";
            }
         }
      }else{
         echo "<span style='color:#f77;'>The email you entered is not registered.</span>";
      }
      $stmt=null;
      $con=null;
   }elseif(isset($_POST['uplineID'])){
      $uplineID = new clean($_POST['uplineID']);
      $uplineID = $uplineID->clean_alphnum();
      session_start();
      $id = $_SESSION['id'];
      $status ="active";
      
      $stmt = $con->prepare("SELECT COUNT(*) FROM users WHERE id = ? AND status=?");
      $stmt->bindParam(1, $id, PDO::PARAM_STR, 7);
      $stmt->bindParam(2, $status, PDO::PARAM_STR, 7);
      $stmt->execute();
      $row= $stmt->fetchColumn();
      if ($row>0) {
         header("location:/");
      }else{
         
         $stmt = $con->prepare("SELECT COUNT(*) FROM users WHERE id = ? AND status=?");
         $stmt->bindParam(1, $uplineID, PDO::PARAM_STR, 7);
         $stmt->bindParam(2, $status, PDO::PARAM_STR, 7);
         $stmt->execute();
         $row= $stmt->fetchColumn();
         if ($row>0) {
            $sql = "UPDATE users SET uplineID = ? WHERE id = ?";
            $stmt = $con->prepare($sql);
            $stmt->bindParam(1, $uplineID, PDO::PARAM_STR, 7);
            $stmt->bindParam(2, $id, PDO::PARAM_STR, 7);
            if($stmt->execute()){
               echo "Done!";
            }else{
               echo "Try again later";
            }
         }else{
            echo "Inactivated user";
         }   
         $stmt=null;
         $con=null;
      }
   }elseif (isset($_POST['author'])) {
      $name = new clean($_POST['name']);
      $name = $name->clean_string();
      
      $email = new clean($_POST['email']);
      $email=$email->valid_email();
      
      $phone = new clean($_POST['phone']);
      $phone = $phone->valid_phone_no();
      
      $password = new clean($_POST['password']);
      $password=$password->clean_alphnum();
      
      $category = new clean($_POST['category']);
      $category = $category->clean_string();
      
      #main 
      if($password!=""){
         
         $status = "inactive";
         
         $id = "HA-".mt_rand(11111,99999);
         $password=password_hash($password, PASSWORD_DEFAULT);
         $sql = "SELECT COUNT(*) FROM authors WHERE id=?";
   
         $stmt = $con1->prepare($sql);
         $stmt->bindParam(1, $id, PDO::PARAM_STR, 7);
         //execute
         $stmt->execute();
   
         //fetch result
   
         $row=$stmt->fetchColumn();
         while($row>0){
            $id = "HA-".mt_rand(11111,99999);
            $stmt->bindParam(1, $id, PDO::PARAM_STR, 8);
            $stmt->execute();
   
            $row=$stmt->fetchColumn();
         }
         
         $level = 1;
         
         try{
            $con1->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            $con1->beginTransaction();
   
            $sql = "INSERT INTO authors(id, username, email, phone, password, category)VALUES( ?, ?, ?, ?, ?, ?)";
            
            $stmt = $con1->prepare($sql);
            
            $stmt->bindParam(1, $id, PDO::PARAM_STR, 8);
            $stmt->bindParam(2, $name, PDO::PARAM_STR, 35);
            $stmt->bindParam(3, $email, PDO::PARAM_STR, 45);
            $stmt->bindParam(4, $phone, PDO::PARAM_INT, 11);
            $stmt->bindParam(5, $password, PDO::PARAM_STR, 2000);
            $stmt->bindParam(6, $category, PDO::PARAM_STR, 30);
            
            $stmt->execute();
         
            $con1->commit();
   
            $stmt=null;
            $con1=null;
            
            $_SESSION['msg'] = "Your registration was successful!";
            header("location:https://careers.scriptex.tech");
            
         }catch(Exception $e){
            $con1->rollBack();
            
            if (isset($_SESSION['second'])) {
               echo "An unidentified error occured!";
            }else {
               $_SESSION['msg'] = "Application could not be submitted at the moment.";#"An unidentified error occured! Error!: " . $e->getMessage() . "<br/>";
               header("location:https://careers.scriptex.tech");
         
            }
         }
      }else{
         session_start();
         $_SESSION['msg'] = "Please use only alphabet and numbers for your password.";
         header("location:https://careers.scriptex.tech");
      }
   }else{
      $stmt=null;
      $con=null;
      $con1=null;
      header("location:/");
   }
   
?>