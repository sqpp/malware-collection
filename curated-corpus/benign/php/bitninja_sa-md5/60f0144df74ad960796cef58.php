<?php
$base = "/var/www/html/demo/";
$baseOnline = "/var/www/html/visiongroup/";

date_default_timezone_set("Europe/Rome");
$time_start = microtime(true);
require_once $base.'library/Base.php';
require_once $base.'library/Mysql.php';
require_once $base.'library/MysqlImport.php';
require_once $base.'library/utility/ctlCipherSaber.php';
require_once $base.'script/new_import/utility.php';
$utility = utility::getUtility();
$utility->resetN();
$n_correct = 0;
/*conto la riga vuota*/
$n_tot = -1;
$prodottiSchema = array( 
    "idFornitore",
    "fornitore",
    "codCategoriaMerceologica",
    "idIndirizzo",
    "idNazione",
    "toponimo",
    "indirizzo",
    "indirizzo2",
    "numeroCivico",
    "localita",
    "provincia",
    "cap",
    "telefono",
    "fax",
    "email",
    "codStatoAnagrafico",
    "statoAnagrafico"
);


$mysql = new MysqlImport(); 
$file_handle = fopen($baseOnline."csv/YAD0702F.CSV", "r");
/* serve per smembrare il csv ed adattarlo alle nostre tabelle, sono gli indici dei campi che abbiamo diviso */
/* gli indici partono da 0 e non da 1 !!! */
$toAvoid = array(1, 3, 4, 13, 16);

/* leggo il csv */
while (!feof($file_handle)) {
    $line = fgets($file_handle);

    /* se passa tutti i noistri controlli */
    if (checkLine($line)) {
        $data = explode("|", $line);
        $j = 0;
        $fornitori = array();
        $codSettoreMerceologico = 0;
        for ($i = 0; $i < 19; $i++) {
            /* aggiungo il campo al mio array */
            if (!in_array($i, $toAvoid)) {
                $fornitori[$prodottiSchema[$j]] = $data[$i];
                $j++;
            } else {

                switch ($i) {
                    case 3:/* codSettoreMerceologico - mi salvo l'id */
                        $fornitori[$prodottiSchema[$j]] = $data[$i];
                        $codSettoreMerceologico = $data[$i];
                        $j++;
                        break;
                    case 4:/* SettoreMerceologico - creo l'array per l'azienda e la sua fk */
                        $categoriaMerceologica = array("codCategoriaMerceologica" => $codSettoreMerceologico, "categoriaMerceologica" => $data[$i]);
                        break;
                    case 13:/* cap */
                        $cap = $data[$i];
                        if (strlen($cap) < 5)
                            $cap = correctCap($cap);

                        $fornitori[$prodottiSchema[$j]] = $cap;
                        $j++;
                        break;
                    case 16: /* email */
                        //$email = correctEmail($data[$i]);
						$email = $data[$i];
                        $fornitori[$prodottiSchema[$j]] = $email;
                        $j++;
                        break;
                };
            }
        }


        /* per ogni linea aggiungo i campi in db */
        /* controllo se esiste la categoriaMerceologica */
        if (!$mysql->idExists("categoriaMerceologica", $codSettoreMerceologico,"codCategoriaMerceologica"))
            $mysql->insert($categoriaMerceologica, "categoriaMerceologica");

        /*inserisco il fornitore*/
        if($mysql->insert($fornitori, "fornitori") > 0)
                $n_correct++;
        else
            myLog(json_encode($fornitori));

    }
    $utility->increaseN();
    $n_tot++;
}

$time_end = microtime(true);

//dividing with 60 will give the execution time in minutes other wise seconds
$execution_time = ($time_end - $time_start) / 60;

//execution time of the script
echo '<b>Total Execution Time:</b> ' . $execution_time . ' Mins';
fclose($file_handle);


/*log per mail*/

$folderName = utility::getUtility()->getLogFolder();
$myFile = $folderName . "/mail.log";
$fh = fopen($myFile, 'a+') or die("can't open file");
$string = "Import Fornitori (Tempo $execution_time minuti)</br>Inserite $n_correct su $n_tot</br></br>";
fwrite($fh, $string);
fclose($fh);

function checkLine($s) {
    $data = explode("|", $s);

    /*elimino l'ultima riga*/
    if(empty($data[0]))
        return false;
    //controllo idCpco,idAzienda
    $checkId = checkId($data[0], $data[3], "IDFORNITORE O CODSETTOREMERC");

    //controllo tel
    //$checkTel = checkTel($data[14], $data[0], "TELEFONO");
    //controllo fax
    //$checkFax = checkTel($data[15], $data[0], "FAX");
    /* controllo email */
    //$checkEmail = checkEmail($data[16], $data[0], "EMAIL");

	//&& $checkEmail
    return $checkId ;
}

// function correctEmail($email) {
    // /* alcune email sono del tipo aa@aa.it;bb@bb,it - prendo solo la prima */
    // $email = explode(";", $email);
    // return $email[0];
// }

// function checkEmail($email, $id, $type) {

    // $email = trim(correctEmail($email));

    // if (empty($email) || $email == " ") {
        // myLog("$type | email vuota | cfor: $id");
        // return true;
    // }
    // if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        // myLog("$type | email non conforme allo standard, email: $email| cfor: $id");
        // return true;
    // }


    // return true;
// }

function checkId($idCpco, $idAzienda, $type) {

    if (empty($idCpco))
        if (empty($idAzienda)) {
            myLog(" $type | cpco vuoto | cfor: $idCpco");
            return false;
        }
    if (empty($idAzienda)) {
        myLog(" $type | codAzienda vuoto | cfor: $idCpco");
        return false;
    }
    return true;
}

function checkTel($num, $id, $type) {

    if (preg_match('/[a-zA-Z]+/', $num)) {
        myLog("$type | telefono non conforme allo standard tel:$num | cfor: $id");
        return false;
    }
    return true;
}

function correctCap($cap) {
    $n = strlen($cap);
    return fillWithZero($cap, $n, 5);
}

function fillWithZero($toFill, $n, $max) {
    $res = "";
    for ($i = $n; $i < $max; $i++)
        $res .="0";

    return $res . $toFill;
}

function myLog($string) {

    $base = "/var/www/html/demo/";

    $folderName = $base."logs/import";
    if (!file_exists($folderName))
        mkdir($folderName);

    $folderName .= "/" . date("Y-m-d");

    if (!file_exists($folderName))
        mkdir($folderName);

    $myFile = $folderName . "/fornitori_YAD0702.log";

    $fh = fopen($myFile, 'a+') or die("can't open file");

    $utility = utility::getUtility();
    fwrite($fh, $string . " | riga:" . $utility->getN() . "\n");

    fclose($fh);
}

?>
