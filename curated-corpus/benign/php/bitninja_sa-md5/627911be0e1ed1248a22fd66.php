<?php
require_once "commoncode.php";
$response = array();
//If all required Prameters are not passed
$chkParams = chkParamsPassed(array("uid", "mobile_number", "password", "device_token", "api_key"));

if(startsWith($chkParams, "false.missing.")){
    $response["success"] = false;
    $missing_param = str_replace("false.missing.", "", $chkParams);
    $response["message"] = "error. Required parameters are not available! (Parameter '" . $missing_param . "' missing)";
    echo json_encode($response, JSON_PRETTY_PRINT);
    die();
}
if ($_POST['api_key'] != $api_key ) {
    $response["success"] = false;
    $missing_param = str_replace("false.missing.", "", $chkParams);
    $response["message"] = "error. Unauthorized access to Server Detected!";
    echo json_encode($response, JSON_PRETTY_PRINT);
    die();
}

$uid = $_POST['uid'];
$mobile_number = $_POST['mobile_number'];
$device_token = $_POST['device_token'];
$password = $_POST['password'];

$database = getDbInstance($uid);
if ($database === 0) {
    $response["success"] = false;
    $response["message"] = "error. Invalid UID!";
    echo json_encode($response, JSON_PRETTY_PRINT);
    die();
}

#region Validate Mobile Number
// $strQuery = "SELECT count(atoId) AS cnt FROM users_passwords WHERE numMobileNumber=" . $mobile_number . "";
// $strQuery = "SELECT * FROM (SELECT count(atoId) AS cnt, 'student' AS type FROM syn_students_master WHERE syn_students_master.strMobileNumber='" . $mobile_number . "' UNION ALL SELECT count(atoId) AS cnt, 'user' AS type FROM users WHERE users.numMobileNumber=" . $mobile_number . ") AS m ORDER BY m.type;";
// die($strQuery);
// $recs =  $database->query($strQuery)->fetchAll(PDO::FETCH_ASSOC);
// var_dump($recs);
// $count = $recs[0]['cnt'];
// if ($count < 1) {
//     $response["success"] = false;
//     $response["message"] = "error. Invalid Mobile Number entered!.";
//     echo json_encode($response, JSON_PRETTY_PRINT);
//     die();
// }
#endregion
// die();

$password_set_once = true;
#region Validate Passwords
// $strQuery = "SELECT m.password FROM (SELECT settings.strContent AS password, 1 AS idx FROM settings WHERE settings.strType='strDefaultAppLoginPassword' UNION ALL SELECT strPassword AS password, 2 AS idx FROM users_passwords WHERE numMobileNumber=" . $mobile_number . ") AS m ORDER BY m.idx";
$strQuery = "SELECT k.res, k.type, k.idx FROM (SELECT settings.strContent AS res, 'default_password' AS type, 1 AS idx FROM settings WHERE settings.strType = 'strDefaultAppLoginPassword' UNION ALL SELECT SUM(m.cnt) AS res, 'users_cnt' AS type, 2 AS idx FROM (SELECT COUNT(atoId) AS cnt, 'student' AS type FROM syn_students_master WHERE syn_students_master.strMobileNumber = '" . $mobile_number . "' UNION ALL SELECT COUNT(atoId) AS cnt, 'user' AS type FROM users WHERE users.numMobileNumber = " . $mobile_number . ") AS m UNION ALL SELECT strPassword AS res, 'user_password' AS type, 3 AS idx FROM users_passwords WHERE numMobileNumber=" . $mobile_number . ") AS k ORDER BY k.idx";
// die($strQuery);
$recs =  $database->query($strQuery)->fetchAll(PDO::FETCH_ASSOC);
// var_dump($recs);
$cnt = count($recs);
if ($recs[1]['res'] == "0") {
    $response["success"] = false;
    $response["message"] = "error. Invalid Mobile Number entered!.";
    echo json_encode($response, JSON_PRETTY_PRINT);
    die();
}

if ($cnt < 3) {
    $password_set_once = false;
}

$password_matched = false;
if ($password_set_once) {
    if ($recs[2]['res'] == $password) {
        // $response["success"] = true;
        // $response["message"] = "success. data loaded.";
        $password_matched = true;
    } else {
        // $response["success"] = true;
        // $response["message"] = "success. data loaded.";
    }
} else {
    if ($recs[0]['res'] == $password) {
        // $response["success"] = true;
        // $response["message"] = "success. data loaded.";
        $password_matched = true;
    } else {
        // $response["success"] = true;
        // $response["message"] = "success. data loaded.";
    }
}
$response["success"] = true;
$response["message"] = "success. data loaded.";
$response["data"] = array(
    "password_matched" => $password_matched,
    "password_set_once" => $password_set_once
);
#endregion
// echo json_encode($response, JSON_PRETTY_PRINT);
// die();

#region Update Device Tokens
if($password_matched) {
    $strQuery = "UPDATE users_passwords SET strDeviceToken='" . $device_token . "' WHERE numMobileNumber=" . $mobile_number . ";";
    // die($strQuery);
    $database->query($strQuery);
    // echo $database->last();
    $error_msg = $database->error()[2];
    if ($error_msg != "") {
        $response["success"] = false;
        $response["message"] = "error. Error updating Device Token: " . $error_msg;
        echo json_encode($response, JSON_PRETTY_PRINT);
        die();
    }
    else{
        
    }
}
#endregion

if ($password_matched) {
    #region Load School & User details etc if password is matched
    $school_name = "";
    $school_url = "";
    $school_attendance_method = "";
    $school_dist = "";
    $last_data_synced_academic = "";
    $last_data_synced_fee = "";
    $last_data_synced_staff_att = "";
    $last_data_synced_library = "";
    $leave_alternate = "Absent";
    $gps = null;
    $assignments_reply_allowed = "0";
    $show_fee_ledger = "0";

    #region Get school Info 1st
    $strQuery = "SELECT mk.type, mk.content FROM (     SELECT 'school_name' AS type, syn_school_info.strSchoolName AS content, 1 AS idx FROM syn_school_info     UNION ALL     SELECT 'school_url' AS type, syn_school_info.strWebsite AS content, 2 AS idx FROM syn_school_info     UNION ALL     SELECT 'school_attendance_method' AS type, settings.strContent AS content, 3 AS idx FROM settings WHERE settings.strType='strAttendanceMethod'     UNION ALL     SELECT 'school_district' AS type, syn_school_info.strDistrict AS content, 4 AS idx FROM syn_school_info     UNION ALL     SELECT 'last_data_synced_academic' AS type, settings.strContent AS content, 5 AS idx FROM settings WHERE settings.strType='strLastDataSyncedAcademic'     UNION ALL     SELECT 'last_data_synced_fee' AS type, settings.strContent AS content, 6 AS idx FROM settings WHERE settings.strType='strLastDataSyncedFee'     UNION ALL     SELECT 'last_data_synced_staff_att' AS type, settings.strContent AS content, 7 AS idx FROM settings WHERE settings.strType='strLastDataSyncedStaffAttendance'     UNION ALL     SELECT 'last_data_synced_library' AS type, settings.strContent AS content, 8 AS idx FROM settings WHERE settings.strType='strLastDataSyncedLibrary'    UNION ALL     SELECT 'gps_api' AS type, settings.strContent AS content, 9 AS idx FROM settings WHERE settings.strType='strGpsApi' UNION ALL SELECT 'leave_alternate' AS type, settings.strContent AS content, 10 AS idx FROM settings WHERE settings.strType = 'strLeaveAlternate' UNION ALL SELECT 'assignments_reply_allowed' AS type, settings.strContent AS content, 11 AS idx FROM settings WHERE settings.strType = 'strAssignmentsReplyAllowed' UNION ALL SELECT 'show_fee_ledger' AS type, settings.strContent AS content, 12 AS idx FROM settings WHERE settings.strType = 'chkShowFeeLedger') AS mk ORDER BY mk.idx";
    $recs = $database->query($strQuery)->fetchAll(PDO::FETCH_ASSOC);
    if (count($recs) > 0) {
        $school_name = $recs[0]['content'];
        $school_url = $recs[1]['content'];
        $school_attendance_method = $recs[2]['content'];
        $school_dist = $recs[3]['content'];
        $last_data_synced_academic = $recs[4]['content'];
        $last_data_synced_fee = $recs[5]['content'];
        $last_data_synced_staff_att = $recs[6]['content'];
        $last_data_synced_library = $recs[7]['content'];
        $gps = json_decode($recs[8]['content'], true);
        $leave_alternate = $recs[9]['content'];
        $assignments_reply_allowed = $recs[10]['content'];
        $show_fee_ledger = $recs[11]['content'];
    }
    // var_dump($recs);
    // die();
    // echo $school_name;
    // echo $school_url;
    // echo $school_attendance_method;
    #endregion

    #region Get records from Student 1st
    $strQuery = "SELECT syn_students_master.numStudentId AS student_id, syn_students_master.numStudentId AS admission_no, syn_students_master.strAcNo AS ac_no, syn_students_master.strStudentName AS student_name, syn_students_master.strFatherName AS father_name, syn_students_master.strMotherName AS mother_name, syn_students_master.numClassId AS class_id, syn_classes_master.strClassName AS class_name, syn_students_master.numSectionId AS section_id, syn_sections_master.strSectionName AS section_name, syn_students_master.numBranchId AS branch_id, syn_branches_master.strBranchName AS branch_name, syn_students_master.strSex AS sex, syn_students_master.strRollNo AS roll_no, syn_students_master.strDobStudent AS dob_student, syn_students_master.strDobFather AS dob_father, syn_students_master.strDobMother AS dob_mother, syn_students_master.strAnniversaryParents AS anniversary_parents, syn_students_master.numVehicleId AS vehicle_id, syn_vehicles_master.strVehicleNumber AS vehicle_number FROM (syn_branches_master RIGHT JOIN (syn_sections_master INNER JOIN (syn_classes_master INNER JOIN syn_students_master ON syn_classes_master.numClassId = syn_students_master.numClassId) ON syn_sections_master.numSectionId = syn_students_master.numSectionId) ON syn_branches_master.numBranchId = syn_students_master.numBranchId) LEFT JOIN syn_vehicles_master ON syn_students_master.numVehicleId = syn_vehicles_master.numVehicleId WHERE syn_students_master.strMobileNumber='" . $mobile_number . "'";
    // die($strQuery);
    $students = $database->query($strQuery)->fetchAll(PDO::FETCH_ASSOC);
    #endregion

    #region Get User info, if any
    $strQuery = "SELECT users.atoId AS user_id, users.strUserName AS user_name, users.chkIsAdmin AS is_admin, users.strName AS name, users.strRoles AS roles, users.strDob AS dob, users.strAnniversary AS anniversary, users.chkIsTeacher AS is_teacher, users.chkIsIncharge AS is_incharge, users.numInchargeClassId AS incharge_class_id, syn_classes_master.strClassName AS incharge_class_name, users.numInchargeSectionId AS incharge_section_id, syn_sections_master.strSectionName AS incharge_section_name, users.strAdminOtp as admin_otp FROM (users LEFT JOIN syn_classes_master ON users.numInchargeClassId = syn_classes_master.numClassId) LEFT JOIN syn_sections_master ON users.numInchargeSectionId = syn_sections_master.numSectionId WHERE users.numMobileNumber=" . $mobile_number . " AND users.chkInactive=0 AND users.chkLeftTheSchool=0";
    // die($strQuery);
    $users = $database->query($strQuery)->fetchAll(PDO::FETCH_ASSOC);
    // var_dump($users);
    #endregion

    $subjects = [];
    //now load subjects alloted if some users/TEACHERS are found
    if (count($users) > 0 && ($users[0]['is_teacher'] == '1')) {
        $strQuery = "SELECT userssubjectsmapping.numClassId AS class_id, syn_classes_master.strClassName AS class_name, userssubjectsmapping.numSectionId AS section_id, syn_sections_master.strSectionName AS section_name, userssubjectsmapping.numSubjectId AS subject_id, syn_subjects_master.strSubjectName AS subject_name FROM users INNER JOIN (((userssubjectsmapping LEFT JOIN syn_classes_master ON userssubjectsmapping.numClassId = syn_classes_master.numClassId) LEFT JOIN syn_sections_master ON userssubjectsmapping.numSectionId = syn_sections_master.numSectionId) LEFT JOIN syn_subjects_master ON userssubjectsmapping.numSubjectId = syn_subjects_master.numSubjectId) ON users.strUserName = userssubjectsmapping.strUserName WHERE users.numMobileNumber=" . $mobile_number;
        // echo $strQuery;
        $subjects = $database->query($strQuery)->fetchAll(PDO::FETCH_ASSOC);
        // var_dump($subjects);
        // echo $users[0]['is_admin'];
    }

    //now load Classes if alloted to as Incharge
    $incharge_classes = [];
    if (count($users) > 0 && ($users[0]['is_teacher'] == '1') && ($users[0]['is_incharge'] == '1')) {
        $strQuery = "SELECT usersinchargeclassesmapping.numClassId AS class_id, syn_classes_master.strClassName AS class_name, usersinchargeclassesmapping.numSectionId AS section_id, syn_sections_master.strSectionName AS section_name FROM syn_sections_master INNER JOIN (syn_classes_master INNER JOIN (users INNER JOIN usersinchargeclassesmapping ON users.strUserName = usersinchargeclassesmapping.strUserName) ON syn_classes_master.numClassId = usersinchargeclassesmapping.numClassId) ON syn_sections_master.numSectionId = usersinchargeclassesmapping.numSectionId WHERE users.numMobileNumber=" . $mobile_number;
        // echo $strQuery;
        $incharge_classes = $database->query($strQuery)->fetchAll(PDO::FETCH_ASSOC);
        // var_dump($incharge_classes);
    }

    $data = array(
        'school_name' => $school_name,
        'school_url' => $school_url,
        'school_dist' => $school_dist,
        'school_attendance_method' => $school_attendance_method,    
        'last_data_synced_academic' => $last_data_synced_academic,
        'last_data_synced_fee' => $last_data_synced_fee,
        'last_data_synced_staff_att' => $last_data_synced_staff_att,
        'last_data_synced_library' => $last_data_synced_library,
        'gps_username' => $gps['username'],
        'gps_password' => $gps['password'],
        'leave_alternate' => $leave_alternate,
        'assignments_reply_allowed' => $assignments_reply_allowed,
        'show_fee_ledger' => $show_fee_ledger,
        'students' => $students,
        'users' => $users,
        'subjects' => $subjects,
        'incharge_classes' => $incharge_classes
    );
    $response["data"] = array_merge($response["data"], $data);
}

echo json_encode($response, JSON_PRETTY_PRINT);
?>