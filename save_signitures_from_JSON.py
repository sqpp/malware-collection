import json
import base64
import os
import sys

if len(sys.argv)!=2:
    print("Please enter the root of the JSON file you would like to use in the command line after the name of the python file")

else:

    #first I open the file 
    #the file path here (this is an alternate version: os.path.join(os.path.dirname(__file__), fileName) )

    f=open(sys.argv[1])

    #I read the json file 

    data=json.load(f)

    #I create the path for the save folders

    dir=os.path.dirname(os.path.realpath(__file__))
    malwareDir=os.path.join(dir,'curated-corpus','malicious','php')
    benignDir=os.path.join(dir,'curated-corpus','benign','php')



    #a for cycle to iterate through the json file

    for i in range(len(data)):

        #we need the items on the black list only so I made a filter for that

        if data[i]['list']=='black':

            #I read in the fileBase64Content of the current item

            codedString = data[i]['fileBase64Content'] 

            #decode the base64 code so we get the script 

            decodedString=base64.b64decode(codedString)

            #creating the save file names

            saveFileName=str(data[i]['_id']['$oid'])+'.php' 

            if data[i]['state']=='discarded': #filter for the benign files

                if data[i]['type']=='md5': #filter for the benign md5 files

                    print("Creating file name")

                    outFileName=os.path.join(benignDir, 'bitninja_md5', saveFileName)
                    #the root of the benignDir+ the folder where I save it + the item id
                    #this gives us the name of the outFile so we can create a unique one with the current file content
                    
                elif data[i]['type']=='sa-md5': #filter for benign sa-md5 files

                    print("Creating file name")
                    
                    outFileName=os.path.join(benignDir, 'bitninja_sa-md5', saveFileName)

                elif data[i]['type']=='sa-snippet': #filter for benign sa-snippet files

                    print("Creating file name")
                
                    outFileName=os.path.join(benignDir, 'bitninja_sa-snippets', saveFileName)

            elif data[i]['state']=='published': #filter for malware files

                if data[i]['type']=='md5': #filter for malware md5 files

                    print("Creating file name")
                    
                    outFileName=os.path.join(malwareDir, 'bitninja_md5', saveFileName)

                elif data[i]['type']=='sa-md5': #filter for malware sa-md5 files

                    print("Creating file name")

                    outFileName=os.path.join(malwareDir, 'bitninja_sa-md5', saveFileName)

                elif data[i]['type']=='sa-snippet': #filter for malware sa-snippet files

                    print("Creating file name")
                    
                    outFileName=os.path.join(dir, 'snippets', 'php' , saveFileName)

            print("Saving file")

            #I create the file that I previously named

            outFile=open(outFileName, "wb") 

            #I write the decoded file content into the file

            outFile.write(decodedString)

            #closing the file

            outFile.close() 

        else:

            print("Found a whitelist item the code continues")

            continue #if the item is not on the blacklist the code continues

    print("Closing the JSON file")

    f.close() #closing the json file


