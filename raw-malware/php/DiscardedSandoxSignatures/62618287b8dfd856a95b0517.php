<?php /******** START OF CONFIG SECTION *******/
  //$sendto  = "test@myth.co.nz";
  $sendto  = "accounts@aecsecurity.co.nz";
  $subject = "AEC Security Application for credit";
// Select if you want to check form for standard spam text
  $SpamCheck = "Y"; // Y or N
  $SpamReplaceText = "*content removed*";
// Error message prited if spam form attack found
$SpamErrorMessage = "<p>No website URLs permitted</p><br>
<a href=\"javascript:history.back();\">Back</a>";
/******** END OF CONFIG SECTION *******/


  $email = $_POST['email']; 
  $organisation = $_POST['organisation']; 
  $otherorg = $_POST['otherorg']; 
  $tradename = $_POST['tradename']; 
  $legalname = $_POST['legalname']; 
  $postaladdress = $_POST['postaladdress'];
  $deliveryaddress = $_POST['deliveryaddress'];
  $telephone = $_POST['telephone']; 
  $fax = $_POST['fax']; 
  $mobile = $_POST['mobile']; 
  $companynumber = $_POST['companynumber']; 
  $registeredoffice = $_POST['registeredoffice']; 
  $dateofbirth = $_POST['dateofbirth']; 
  $previousaddress = $_POST['previousaddress'];
  $identtype = $_POST['identtype'];
  $identnumber = $_POST['identnumber'];
  $partner1_fullname = $_POST['partner1_fullname'];
  $partner1_homeaddress = $_POST['partner1_homeaddress'];
  $partner1_homephone = $_POST['partner1_homephone'];
  $partner2_fullname = $_POST['partner2_fullname'];
  $partner2_homeaddress = $_POST['partner2_homeaddress'];
  $partner2_homephone = $_POST['partner2_homephone'];
  $directors1_fullname = $_POST['directors1_fullname'];
  $directors1_homeaddress = $_POST['directors1_homeaddress'];
  $directors1_homephone = $_POST['directors1_homephone']; 
  $directors2_fullname = $_POST['directors2_fullname'];
  $directors2_homeaddress = $_POST['directors2_homeaddress'];
  $directors2_homephone = $_POST['directors2_homephone']; 
 
  $contactperson = $_POST['contactperson']; 
  $bankdetails = $_POST['bankdetails'];
  $bankacc = $_POST['bankacc']; 
  $solicitordetails = $_POST['solicitordetails'];
  $accountantdetails = $_POST['accountantdetails']; 
  $reference1_name = $_POST['reference1_name'];
  $reference1_phone = $_POST['reference1_phone']; 
  $reference2_name = $_POST['reference2_name'];
  $reference2_phone = $_POST['reference2_phone']; 
  $reference3_name = $_POST['reference3_name'];
  $reference3_phone = $_POST['reference3_phone'];  
  
  $headers = "From: $email\n";
  $headers . "MIME-Version: 1.0\n"
		   . "Content-Transfer-Encoding: 7bit\n"
		   . "Content-type: text/html;  charset = \"iso-8859-1\";\n\n";
if ($SpamCheck == "Y") {		   
// Check for Website URL's in the form input boxes as if we block website URLs from the form,
// then this will stop the spammers wastignt ime sending emails
if (preg_match("/http/i", "$email")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$organisation")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$otherorg")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$tradename")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$legalname")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$postaladdress")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$deliveryaddress")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$telephone")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$fax")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$mobile")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$companynumber")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$registeredoffice")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$dateofbirth")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$previousaddress")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$identtype")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$identnumber")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$partner1_fullname")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$partner1_homeaddress")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$partner1_homephone")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$partner2_fullname")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$partner2_homeaddress")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$partner2_homephone")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$directors1_fullname")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$directors1_homeaddress")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$directors1_homephone")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$directors2_fullname")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$directors2_homeaddress")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$directors2_homephone")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$contactperson")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$bacnkdetails")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$bankacc")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$solicitordetails")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$accountantdetails")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$reference1_name")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$reference1_phone")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$reference2_name")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$reference2_phone")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$reference3_name")) {echo "$SpamErrorMessage"; exit();} 
if (preg_match("/http/i", "$reference3_phone")) {echo "$SpamErrorMessage"; exit();} 


// Patterm match search to strip out the invalid charcaters, this prevents the mail injection spammer 
  $pattern = '/(;|\||`|>|<|&|^|"|'."\n|\r|'".'|{|}|[|]|\)|\()/i'; // build the pattern match string 
                             
  $email = preg_replace($pattern, "", $email); 
  $organisation = preg_replace($pattern, "", $organisation); 
  $otherorg = preg_replace($pattern, "", $otherorg); 
  $tradename = preg_replace($pattern, "", $tradename); 
  $legalname = preg_replace($pattern, "", $legalname); 
  $postaladdress = preg_replace($pattern, "", $postaladdress);
  $deliverysaddress = preg_replace($pattern, "", $deliverysaddress); 
  $telephone = preg_replace($pattern, "", $telephone);
  $fax = preg_replace($pattern, "", $fax);
  $mobile = preg_replace($pattern, "", $mobile);
  $companynumber = preg_replace($pattern, "", $companynumber);
  $registeredoffice = preg_replace($pattern, "", $registeredoffice);
  $dateofbirth = preg_replace($pattern, "", $dateofbirth);
  $previousaddress = preg_replace($pattern, "", $previousaddress);
  $identtype = preg_replace($pattern, "", $identtype);
  $identnumber = preg_replace($pattern, "", $identnumber);
  $partner1_fullname = preg_replace($pattern, "", $partner1_fullname);
  $partner1_homeaddress = preg_replace($pattern, "", $partner1_homeaddress);
  $partner1_homephone = preg_replace($pattern, "", $partner1_homephone);
  $partner2_fullname = preg_replace($pattern, "", $partner2_fullname);
  $partner2_homeaddress = preg_replace($pattern, "", $partner2_homeaddress);
  $partner2_homephone = preg_replace($pattern, "", $partner2_homephone);
  $directors1_fullname = preg_replace($pattern, "", $directors1_fullname);
  $directors1_homeaddress = preg_replace($pattern, "", $directors1_homeaddress);
  $directors1_homephone = preg_replace($pattern, "", $directors1_homephone);
  $directors2_fullname = preg_replace($pattern, "", $directors2_fullname);
  $directors2_homeaddress = preg_replace($pattern, "", $directors2_homeaddress);
  $directors2_homephone = preg_replace($pattern, "", $directors2_homephone);
  $contactperson = preg_replace($pattern, "", $contactperson);
  $bankdetails = preg_replace($pattern, "", $bankdetails);
  $backacc = preg_replace($pattern, "", $bankacc);
  $solicitordetails = preg_replace($pattern, "", $solicitordetails);
  $accountantdetails = preg_replace($pattern, "", $accountantdetails);
  $reference1_name = preg_replace($pattern, "", $reference1_name);
  $reference1_phone = preg_replace($pattern, "", $reference1_phone);
  $reference2_name = preg_replace($pattern, "", $reference2_name);
  $reference2_phone = preg_replace($pattern, "", $reference2_phone);
  $reference3_name = preg_replace($pattern, "", $reference3_name);
  $reference3_phone = preg_replace($pattern, "", $reference3_phone);


// Check for the injected headers from the spammer attempt 
// This will replace the injection attempt text with the string you have set in the above config section
  $find = array("/bcc\:/i","/Content\-Type\:/i","/cc\:/i","/to\:/i"); 
  $email = preg_replace($find, "$SpamReplaceText", $email); 
  $organisation = preg_replace($find, "$SpamReplaceText", $organisation); 
  $otherorg = preg_replace($find, "$SpamReplaceText", $otherorg);
  $tradename = preg_replace($find, "$SpamReplaceText", $tradename);
  $legalname = preg_replace($find, "$SpamReplaceText", $legalname); 
  $postaladdress = preg_replace($find, "$SpamReplaceText", $postaladdress);
  $deliveryaddress = preg_replace($find, "$SpamReplaceText", $deliveryaddress);
  $telephone = preg_replace($find, "$SpamReplaceText", $telephone); 
  $fax = preg_replace($find, "$SpamReplaceText", $fax);
  $mobile = preg_replace($find, "$SpamReplaceText", $mobile);
  $companynumber = preg_replace($find, "$SpamReplaceText", $companynumber);
  $registeredoffice = preg_replace($find, "$SpamReplaceText", $registeredoffice);
  $dateofbirth = preg_replace($find, "$SpamReplaceText", $dateofbirth);
  $previousaddress = preg_replace($find, "$SpamReplaceText", $previousaddress);
  $identtype = preg_replace($find, "$SpamReplaceText", $identtype);
  $identnumber = preg_replace($find, "$SpamReplaceText", $identnumber);
  $partner1_fullname = preg_replace($find, "$SpamReplaceText", $partner1_fullname);
  $partner1_homeaddress = preg_replace($find, "$SpamReplaceText", $partner1_homeaddress);
  $partner1_homephone = preg_replace($find, "$SpamReplaceText", $partner1_homephone);
  $partner2_fullname = preg_replace($find, "$SpamReplaceText", $partner2_fullname);
  $partner2_homeaddress = preg_replace($find, "$SpamReplaceText", $partner2_homeaddress);
  $partner2_homephone = preg_replace($find, "$SpamReplaceText", $partner2_homephone);
  $directors1_fullname = preg_replace($find, "$SpamReplaceText", $directors1_fullname);
  $directors1_homeaddress = preg_replace($find, "$SpamReplaceText", $directors1_homeaddress);
  $directors1_homephone = preg_replace($find, "$SpamReplaceText", $directors1_homephone);
  $contactperson = preg_replace($find, "$SpamReplaceText", $contactperson);
  $bankdetails = preg_replace($find, "$SpamReplaceText", $bankdetails);
  $bankaccount = preg_replace($find, "$SpamReplaceText", $bankaccount);
  $solicitordetails = preg_replace($find, "$SpamReplaceText", $solicitordetails);
  $accountantdetails = preg_replace($find, "$SpamReplaceText", $accountantdetails);
  $reference1_name = preg_replace($find, "$SpamReplaceText", $reference1_name);
  $reference1_phone = preg_replace($find, "$SpamReplaceText", $reference1_phone);
  $reference2_name = preg_replace($find, "$SpamReplaceText", $reference2_name);
  $reference2_phone = preg_replace($find, "$SpamReplaceText", $reference2_phone);
  $reference3_name = preg_replace($find, "$SpamReplaceText", $reference3_name);
  $reference3_phone = preg_replace($find, "$SpamReplaceText", $reference3_phone);

  
// Check to see if the fields contain any content we want to ban
 if(stristr($organisation, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();} 
 if(stristr($otherorg, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($tradename, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($legalname, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($postaladdress, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 else { $postaladdress = $_POST['postaladdress']; }
 if(stristr($deliveryaddress, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 else { $deliveryaddress = $_POST['deliveryaddress']; }
 if(stristr($fax, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($telephone, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($mobile, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($companynumber, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($registeredoffice, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($dateofbirth, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($previousaddress, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 else { $previousaddress = $_POST['previousaddress']; }
 if(stristr($identtype, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($identnumber, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($partner1_fullname, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($partner1_homeaddress, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 else { $partner1_homeaddress = $_POST['partner1_homeaddress']; }
 if(stristr($partner1_homephone, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($partner2_fullname, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($partner2_homeaddress, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 else { $partner2_homeaddress = $_POST['partner2_homeaddress']; }
 if(stristr($partner2_homephone, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($directors1_fullname, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($directors1_homeaddress, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 else { $directors1_homeaddress = $_POST['directors1_homeaddress']; }
 if(stristr($directors1_homephone, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($directors2_fullname, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($directors2_homeaddress, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 else { $directors2_homeaddress = $_POST['directors2_homeaddress']; }
 if(stristr($directors2_homephone, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();} 
 if(stristr($contactperson, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($bankdetails, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($bankacc, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($solicitordetails, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 else { $solicitordetails = $_POST['solicitordetails']; }
 if(stristr($accountantdetails, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 else { $accountantdetails = $_POST['accountantdetails']; }
 if(stristr($reference1_name, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($reference1_phone, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($reference2_name, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($reference2_phone, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($reference3_name, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 if(stristr($reference3_phone, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();}
 
 // Do a check on the send email and subject text
 if(stristr($sendto, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();} 
 if(stristr($subject, $SpamReplaceText) !== FALSE) {echo "$SpamErrorMessage"; exit();} 
}

if($organisation == 'Other'){
 $othertext = "Other Organisation: $organisation";
}

// Build the email body text
$emailcontent = "Application for Credit

Business Details

Organisation: $organisation 
$othertext
Trade name: $tradename
Legal name: $legalname
Delivery Address: $deliveryaddress
Postal Address: $postaladdress

Telephone: $telephone
Fax: $fax
Mobile: $mobile
Registered Office: $registeredoffice
Email: $email 
Company Number: $companynumber
Date of birth: $dateofbirth

Previous Address: $previousaddress
Identification Type: $identtype
Identification Number: $identnumber


Details of Partners
Person 1
Full Name: $partner1_fullname
Home Address: $partner1_homeaddress
Home Phone: $partner1_homephone

Person 2
Full Name: $partner2_fullname
Home Address: $partner2_homeaddress
Home Phone: $partner2_homephone


Details of Directors
Person 1
Full Name: $directors1_fullname
Home Address: $directors1_homeaddress
Home Phone: $directors1_homephone

Person 2
Full Name: $directors2_fullname
Home Address: $directors2_homeaddress
Home Phone: $directors2_homephone


Contact Person: $contactperson
Bank Details: $bankdetails
Bank Account: $bankacc

Solicitor Details: $solicitordetails
Accountant Details: $accountantdetails


Reference Details
Person 1
Name: $reference1_name
Phone: $reference1_phone

Person 2
Name: $reference2_name
Phone: $reference2_phone

Person 3
Name: $reference3_name
Phone: $reference3_phone
"; 
// Check the email address enmtered matches the standard email address format

// Sends out the email or will output the error message 
 mail($sendto, $subject, $emailcontent, $headers);
  echo "<br><br><p><b>Thank You, your Application for Credit Account has been sent.</b></p><p>We will be in touch as soon as possible.</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>
  <p>&nbsp;</p>"; 

?> 